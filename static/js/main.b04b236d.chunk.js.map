{"version":3,"sources":["store/actions/product.js","store/actions/actionsTypes.js","store/actions/parameters.js","store/actions/notification.js","messages.js","utilities/svg/svg.js","components/DropDownList/DropDownList.js","components/navigation/navtop/Navtop.js","components/navigation/navbar/Navbar.js","components/navigation/mobileNav/MobileNav.js","components/footer/Footer.js","utilities/timeStampGenerator.js","components/AutosizeTextArea/AutosizetextArea.js","pages/account/Messages/MessagesList/MessagesList.js","components/chat/Chat.js","components/loader/Loader.js","components/button/Button.js","components/Amount/Amount.js","components/ProductCard/ProductCard.js","components/ProductsList/ProductsList.js","pages/home/homeInventory/HomeInventory.js","pages/inventory/Controller/Controller.js","pages/home/homeSearch/HomeSearch.js","pages/home/homeService/HomeService.js","components/formInput/FormInput.js","utilities/validators.js","components/backdrop/Backdrop.js","components/modal/Modal.js","components/errorHandler/ErrorHandler.js","pages/auth/login/Login.js","store/actions/auth.js","pages/home/HomeContact/HomeContact.js","pages/home/Home.js","components/Paginator/Paginator.js","utilities/amountFormater.js","pages/inventory/Inventory.js","pages/car/overview/Overview.js","pages/car/technical/Technical.js","pages/car/features/Features.js","pages/car/Car.js","store/actions/user.js","pages/auth/signup/Signup.js","pages/auth/Auth.js","pages/account/Messages/Messages.js","pages/account/Account.js","pages/Services/Services.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","store/reducers/product.js","store/reducers/user.js","store/reducers/parameters.js","store/reducers/notification.js","index.js","assets/eventually.mp3","assets/sprite.svg"],"names":["setProductRequestedData","data","type","setLang","lang","setCurrency","currency","addNewMessageNotification","fr","en","svg","props","viewBox","onClick","className","icon","size","customClass","xmlns","xmlnsXlink","xlinkHref","sprite","DropDownList","state","showList","toggleList","setState","prevState","handleClick","e","target","contains","document","addEventListener","this","removeEventListener","list","ref","el","value","map","item","text","key","selectItemHandler","Component","connect","parameters","price","product","dispatch","actions","setPrice","withRouter","parsedQuery","queryString","parse","location","search","stringifiedQuery","stringify","history","push","pathname","isAuth","auth","userName","scrolled","exact","to","id","defaultMessage","includes","split","slice","MobileNav","showNavList","showLogout","toggleNavList","toggleShowLogout","window","innerWidth","logoutHandler","Footer","susbscribed","subscribeInput","changeInputHandler","subscribeHandler","setCurrencyHandler","scrollTo","hide","href","placeholder","onChange","timeStampGenerator","realDay","date","Date","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minutes","getMinutes","seconds","getSeconds","TextArea","textarea","focus","autosize","style","maxHeight","minHeight","resize","padding","boxSizing","fontSize","c","rows","MessagesContainerList","chatMessageGap","currentSenderType","messages","displayedDate","timeStamp","shortDate","senderType","message","index","array","currentDate","length","_id","Chat","messageInput","showChat","name","readNewMessagesHandler","url","userId","fetch","headers","method","body","JSON","then","res","status","Error","json","resData","console","log","catch","err","sendMessageHandler","trim","from","addMessages","alert","newMessages","scrollToBottom","messageChangeHandler","toggleShowChat","unreadMessageCounter","forEach","i","read","newMessage","resetNewMessageNotification","openSocket","on","messageData","playNotificationSound","messagesEnd","scrollIntoView","behavior","messagesList","notification","loader","button","link","color","children","join","disabled","loading","quotes","USDCAD","USDEUR","amount","Math","ceil","toLocaleString","showCurrency","ProductCard","requestProductDetails","src","mainImg","alt","title","nbKilometers","gazol","transmissionType","productsList","general","mainImgUrl","brand","model","bodyType","fetchProductDetailsHandler","HomeInventoryMemo","React","memo","carsHomeInventory","homeInventoryLimit","defineMessages","allBodyTypes","allBrands","allModels","increasingPrice","decreasingPrice","latest","mostPopular","Controller","prevProps","formatMessage","intl","query","bodyTypeList","brandAndModelsData","brandData","Object","keys","bodyTypeBrandData","modelData","selectBodyTypeHandler","selectBrandHandler","selectModelHandler","sort","toUpperCase","sortHandler","min","max","step","maxValue","scope","minValue","changePriceHandler","onChangeComplete","changeComplete","changeYearHandler","injectIntl","HomeSearch","searchHandler","minPrice","maxPrice","formInput","control","required","autoComplete","formType","options","option","label","htmlFor","border","validator","email","password","confirm_password","firstName","lastName","error","val","errorLabel","test","backdrop","ReactDOM","createPortal","open","getElementById","modal","onCloseModal","errorHandler","onCloseError","Login","loginForm","inputChangeHandler","input","loginHandler","loginFormData","preventDefault","setLoadingToTrue","errors","setLoadingToFalse","setErrors","connectionId","loginSucceeded","localStorage","setItem","token","expiryDate","getTime","toISOString","loginFailed","closeErrorHandler","resetErrors","ErrorHandler","onSubmit","noValidate","HomeContact","Home","carsHomeIntro","initialIndex","showIntroList","partRequested","imageSlideHandler","inter","setInterval","clearInterval","onRequestChange","replayInterval","showIntroListToggler","onMouseEnter","onMouseLeave","totalProductsCounter","mostPopularSedan","Paginator","pageNumbers","lastPage","pageNumbersButton","onRequestPageNumber","bind","currentPage","products","itemsPerPage","onRequestPreviousPage","onRequestNextPage","amountFormater","prevCurrency","nextCurrency","result","Inventory","page","init","fetchProductsHandler","params","URL","minPriceQuery","maxPriceQuery","fullValue","floor","minYear","maxYear","URLSearchParams","toString","stateQuery","paginationHandler","direction","currentInventoryPage","setInventoryCurrentPage","parseInt","inventory","overview","yearOfRelease","serialNumber","design","intColor","extColor","technical","tech","motorSize","nbCylinders","maxSpeed","nbGearRatios","features","feature","Car","images","initiatlIndex","changeGalleryImgIndex","imageUrls","indexOf","userIdFetching","prodId","productRequested","get","match","favorite","userFavorites","userFavoritesProductsIds","relatedProducts","favoriteHandler","productId","removeUserFavoriteProduct","addUserFavoriteProduct","showFullGalleryHandler","hideScrollBarHandler","escFunction","event","keyCode","hideScrollBar","showScrollBarHandler","img","objectFit","supplier","reference","viewCounter","followersCounter","mostPopularProducts","user","favorites","confirmPassword","Signup","signupForm","submitHandler","signupFormData","formData","FormData","append","fromEntries","requestLoginForm","Auth","requestedForm","setRequestedForm","requested","Messages","Account","scrolling","path","render","component","purchase","vehicle_paper","customs_clearance","insurance","Services","header","forfait","undefined","App","hideFooter","scrollDirection","listenToScroll","winScroll","scrollTop","documentElement","isTop","scrollPos","initAppDataHandler","initAppData","publicityProducts","homeInventoryProducts","startConnection","setConnectionId","setLoginStateToFalse","getItem","endConnection","logout","removeItem","initUserFavoriteProducts","setUserFavoriteProducts","player","play","loginData","setLoginStateToTrue","app","windowWidth","langManager","french","english","locale","Boolean","hostname","updatedObject","oldObject","updatedProperties","initialState","loginSucced","action","reducer","addFavoriteProduct","removeFavoriteProduct","newFavoritesData","filter","EURUSD","EURCAD","CADUSD","CADEUR","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","productReducer","userReducer","parametersReducer","notificationReducer","store","createStore","applyMiddleware","thunk","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b04b236d.chunk.js","sourcesContent":["import * as actionTypes from './actionsTypes';\r\n\r\n\r\nexport const setProductRequestedData = data => {\r\n    return {\r\n        type: actionTypes.SET_PRODUCT_REQUESTED_DATA,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const initAppData = data => {\r\n    return {\r\n        type: actionTypes.INIT_APP_DATA,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const setInventoryCurrentPage = currentPage => {\r\n    return {\r\n        type: actionTypes.SET_INVENTORY_CURRENT_PAGE,\r\n        currentPage: currentPage\r\n    }\r\n}\r\n\r\nexport const setPrice = data => {\r\n    return {\r\n        type: actionTypes.SET_PRICE,\r\n        data: data\r\n    }\r\n}\r\n","export const LOGIN_SUCCEDED = 'LOGIN_SUCCEDED';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\nexport const SET_LOGIN_STATE_TO_TRUE = 'SET_LOGIN_STATE_TO_TRUE';\r\nexport const SET_LOGIN_STATE_TO_FALSE = 'SET_LOGIN_STATE_TO_FALSE';\r\n\r\nexport const INIT_APP_DATA = 'INIT_APP_DATA';\r\n\r\nexport const SET_CONNECTION_ID = 'SET_CONNECTION_ID'\r\nexport const SET_PRODUCT_REQUESTED_DATA = 'SET_PRODUCT_REQUESTED_ID'\r\n\r\nexport const SET_USER_FAVORITE_PRODUCTS = 'SET_USER_FAVORITE_PRODUCTS'\r\nexport const ADD_USER_FAVORITE_PRODUCT = 'ADD_USER_FAVORITE_PRODUCT'\r\nexport const REMOVE_USER_FAVORITE_PRODUCT = 'REMOVE_USER_FAVORITE_PRODUCT'\r\n\r\n\r\nexport const SET_LANG = 'SET_LANG';\r\nexport const SET_CURRENCY = 'SET_CURRENCY'\r\n\r\nexport const SET_INVENTORY_CURRENT_PAGE = 'SET_INVENTORY_CURRENT_PAGE'\r\n\r\nexport const SET_PRICE = 'SET_PRICE'\r\n\r\n\r\nexport const ADD_A_NEW_MESSAGE_NOTIFICATION = 'ADD_A_NEW_MESSAGE_NOTIFICATION'\r\nexport const RESET_NEW_MESSAGE_NOTIFICATION = 'RESET_NEW_MESSAGE_NOTIFICATION'","import * as actionTypes from './actionsTypes'\r\n\r\nexport const setLang = lang => {\r\n    return {\r\n        type: actionTypes.SET_LANG,\r\n        lang: lang\r\n    }\r\n}\r\n\r\nexport const setCurrency = currency => {\r\n    return {\r\n        type: actionTypes.SET_CURRENCY,\r\n        currency\r\n    }\r\n}","import * as actionTypes from './actionsTypes';\r\n\r\n\r\nexport const addNewMessageNotification = data=> {\r\n    return {\r\n        type: actionTypes.ADD_A_NEW_MESSAGE_NOTIFICATION,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const resetNewMessageNotification = () => {\r\n    return {\r\n        type: actionTypes.RESET_NEW_MESSAGE_NOTIFICATION\r\n    }\r\n}","export default {\r\n    fr : {\r\n        \"home\": \"accueil\",\r\n        \"inventory\": \"inventaire\",\r\n        \"services\": \"services\",\r\n\r\n        \"welcomeTo\": \"bienvenu chez\",\r\n        \"availableCars\": \"véhicules disponibles\",\r\n        \"seeMore\": \"voir plus\",\r\n        \"see\": \"voir\",\r\n        \"needHelp\": \"besoin d'aide\",\r\n        \"password\": \"mot de passe\",\r\n        \"login\": \"se connecter\",\r\n\r\n        \"firstName\": \"prénom\",\r\n        \"lastName\": \"nom\",\r\n        \"confirmPassword\" : \"confirmer mot de passe\",\r\n        \"signUp\": \"s'inscrire\",\r\n        \"alreadyHaveAnAccount\": \"Déjà un compte\",\r\n        \"forgotPassword\": \"Mot de passe oublié\",\r\n        \"notAMemberYet\": \"Pas encore membre\",\r\n\r\n\r\n        \"search\": \"recherche\",\r\n\r\n\r\n\r\n        'allBodyTypes': \"toutes les carrosseries\",\r\n        \"allBrands\": \"toutes les marques\",\r\n        \"allModels\": 'tous les modèles',\r\n        \"increasingPrice\": \"prix croissant\",\r\n        \"decreasingPrice\": \"prix décroissant\",\r\n        \"latest\": \"les plus récents\",\r\n        \"mostPopular\": \"les plus populaires\",\r\n        \"price\": \"prix\",\r\n        \"year\": \"année\",\r\n        \"ourOffers\": \"nos offres\",\r\n        \"learnMore\": \"VOIR DÉTAILS\",\r\n        \"mostPopularSedan\": \"Les berlines les plus populaires\",\r\n        \"wotoFooter\": \"Woto motors est un concessionnaire automobile basé au Québec. Nous livrons les véhicules partout dans le monde. Pour plus de renseignements, connectez-vous sur votre compte woto et communiquer avec nos agents.\",\r\n        \"siteMap\": \"Plan du site\",\r\n        \"subscribe\": \"s'abonner\",\r\n        \"getLastUpdate\": \"Recevez les dernières mises à jour et offres\",\r\n        \"youVeBeenSubscribed\": \"Vous êtes abonné. Merci de vous joindre à nous.\",\r\n        \"parameters\": \"paramètres\",\r\n\r\n        \"homeContactText\": \"Connectez-vous sur votre compte woto et bénéficiez d'un service premium gratuitement. Nos agents seront ravis de vous accompagnez dans l'achat de votre prochaine voiture.\",\r\n        \"yourNextCarHere\": \"votre prochaine voiture est ici\",\r\n        \"serviceText\": \"Où que vous soyez, nous avons ce qu'il vous faut. Nous offrons 4 différents types de service en fonction du lieu de livraison. Nous donnons aussi la possibilité à nos clients de pouvoir opter pour un service personnalisé. Pour cela, nous invitons à entrer en contact avec l'un de nos agent.\",\r\n\r\n\r\n        \"purchase\": \"achat\",\r\n        \"vehicle_paper\": \"papier_du_véhicule\",\r\n        \"customs_clearance\": \"dédouanement\",\r\n        \"insurance\": \"assurance\"\r\n    \r\n    },\r\n    en: {\r\n        \"home\": \"home\",\r\n        \"inventory\": \"inventory\",\r\n        \"services\": \"services\",\r\n\r\n        \"welcomeTo\": \"welcome to\",\r\n        \"availableCars\": \"available cars\",\r\n        \"seeMore\": \"see more\",\r\n        \"see\": \"see\",\r\n        \"needHelp\": \"need some help\",\r\n        \"password\": \"password\",\r\n\r\n        \"firstName\": \"first name\",\r\n        \"lastName\": \"last name\",\r\n        \"confirmPassword\" : \"confirm password\",\r\n        \"signUp\": \"sign up\",\r\n        \"alreadyHaveAnAccount\": \"Already have an account\",\r\n        \"forgotPassword\": \"Forgot your password\",\r\n        \"notAMemberYet\": \"Not a member yet\",\r\n\r\n\r\n        \"login\": \"login\",\r\n        \"search\": \"search\",\r\n\r\n        'allBodyTypes': \"all body types\",\r\n        \"allBrands\": \"all brands\",\r\n        \"allModels\": 'all models',\r\n        \"increasingPrice\": \"increasing price\",\r\n        \"decreasingPrice\": \"decreasing price\",\r\n        \"latest\": \"latest\",\r\n        \"mostPopular\": \"most popular\",\r\n        \"price\": \"price\",\r\n        \"year\": \"year\",\r\n        \"ourOffers\": \"our offers\",\r\n        \"learnMore\": \"LEARN MORE\",\r\n        \"mostPopularSedan\": \"The most popular sedan\",\r\n        \"wotoFooter\": \"Woto motors is a car dealership based in Quebec. We deliver vehicles all over the world. For more information, log into your woto account and communicate with our agents.\",\r\n        \"siteMap\": \"site map\",\r\n        \"subscribe\": \"subscribe\",\r\n        \"getLastUpdate\": \"Get latest updates and offers\",\r\n        \"youVeBeenSubscribed\": \"You've been subscribed. Thank you for joining us.\",\r\n        \"parameters\": \"parameters\",\r\n        \"homeContactText\": \"Log in to your woto account and enjoy a premium service for free. Our agents will be happy to assist you in the purchase of your next car.\",\r\n        \"yourNextCarHere\": \"your next car is here\",\r\n        \"serviceText\": \"Wherever you are, we have what you need. We offer 4 different types of service depending on the place of delivery. We also give our customers the possibility to choose a customized package. Therefore, we invite you to contact one of our agents.\",\r\n\r\n        \"purchase\": \"purchase\",\r\n        \"vehicle_paper\": \"vehicle_paper\",\r\n        \"customs_clearance\": \"customs_clearance\",\r\n        \"insurance\": \"insurance\",\r\n\r\n\r\n       \r\n\r\n    }\r\n}","import React from 'react';\r\nimport './svg.css';\r\nimport sprite from '../../assets/sprite.svg'\r\n\r\nconst svg = props => {\r\n    return (\r\n        <svg \r\n            viewBox='0 0 16 16' \r\n            onClick={props.onClick}\r\n            className={`icon icon-${props.icon} ${props.size} ${props.customClass}`}\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\">\r\n\r\n            <use xlinkHref={`${sprite}#icon-${props.icon}`} />\r\n        </svg>\r\n    )\r\n}\r\nexport default svg;\r\n","import React, { Component } from 'react'\r\nimport './DropDownList.css';\r\nimport IconSvg from '../../utilities/svg/svg'\r\n\r\n\r\nclass DropDownList extends Component {\r\n\r\n    state = {\r\n        showList: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.addEventListener('mousedown', this.handleClick, false)\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n         document.removeEventListener('mousedown', this.handleClick, false)\r\n    }\r\n\r\n    toggleList = () => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            showList: !prevState.showList\r\n        }))\r\n    }\r\n\r\n    handleClick = e => {         \r\n        if(this.target && this.target.contains(e.target)){\r\n            return\r\n        } else {\r\n            if(this.state.showList){\r\n                this.toggleList()\r\n            }\r\n            \r\n        }     \r\n    }\r\n\r\n    render() {\r\n\r\n        let list = this.props.list;\r\n        const {showList} = this.state\r\n\r\n        return (\r\n            <div className={`drop-down-list ${showList ? 'show' : ''}`}\r\n                 ref={el => this.target = el}\r\n                 onClick={this.toggleList}>\r\n                    <div className=\"drop-down-list__value\">\r\n                        {this.props.value}\r\n                        <IconSvg icon=\"arrow_down\"/>\r\n                    </div>\r\n                    <ul className={`drop-down-list__list`}>\r\n                        {list.map(item => \r\n                            <li className={`drop-down-list__list__item\r\n                                        ${item.value && this.props.value === item.value ? 'active':''}\r\n                                        ${item.text && this.props.value === item.text ? 'active':''}\r\n                                        ${this.props.value === item ? 'active' : ''}`}\r\n                                key={item.text ? item.text : item}\r\n                                onClick={() => this.props.selectItemHandler(item.value ? item.value : item)}>\r\n                                {item.text ? item.text : item}\r\n                            </li>\r\n                        )}\r\n                    </ul>     \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default DropDownList;","import React from 'react';\r\nimport './Navtop.css';\r\nimport IconSvg from '../../../utilities/svg/svg';\r\nimport DropDownList from '../../DropDownList/DropDownList';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport { withRouter } from 'react-router-dom';\r\nimport queryString from 'query-string'\r\n\r\nconst navtop = props => {\r\n    const setCurrencyHandler = currency => {\r\n        let parsedQuery = queryString.parse(props.location.search);\r\n        parsedQuery = {\r\n            ...parsedQuery,\r\n            currency: currency\r\n        }\r\n        let stringifiedQuery = queryString.stringify(parsedQuery)\r\n        props.history.push({\r\n            pathname: props.history.pathname,\r\n            search: `${stringifiedQuery}`\r\n        })\r\n        props.setCurrency(currency)\r\n    }\r\n\r\n    const setLangHandler = lang => {\r\n        let parsedQuery = queryString.parse(props.location.search);\r\n        parsedQuery = {\r\n            ...parsedQuery,\r\n            lang: lang\r\n        }\r\n        let stringifiedQuery = queryString.stringify(parsedQuery)\r\n        props.history.push({\r\n            pathname: props.history.pathname,\r\n            search: `${stringifiedQuery}`\r\n        })\r\n        props.setLang(lang)\r\n    }\r\n    return (\r\n        <div className={`navtop \r\n\r\n                        `}>\r\n            <div className=\"navtop__logo\">\r\n                WOTO\r\n            </div>\r\n            <div className=\"navtop__contact\">\r\n                <div className=\"navtop__contact__detail\">\r\n                    <IconSvg icon=\"phone\" />\r\n                    <div>+1 438 896 2026</div>\r\n                </div>\r\n                <div className=\"navtop__contact__detail\">\r\n                    <IconSvg icon=\"email\" />\r\n                    <div>wotto@gmail.com</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navtop__cta\">\r\n                <DropDownList \r\n                    value={props.lang}\r\n                    list={['english', 'spanish', 'french']}\r\n                    selectItemHandler={setLangHandler}\r\n                />\r\n                <DropDownList \r\n                    value={props.currency}\r\n                    list={['CAD', 'USD','EUR']}\r\n                    selectItemHandler={setCurrencyHandler}\r\n                />\r\n            </div>\r\n            {/* <div className=\"navtop__socialMedia\">\r\n                <IconSvg icon=\"facebook\"/>\r\n                <IconSvg icon=\"instagram\"/>\r\n                <IconSvg icon=\"twitter\"/>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.parameters.lang,\r\n        currency: state.parameters.currency,\r\n        price: state.product.price\r\n    }\r\n}\r\n\r\nconst mapDispacthToProps = dispatch => {\r\n    return {\r\n        setLang: lang => dispatch(actions.setLang(lang)),\r\n        setCurrency: currency => dispatch(actions.setCurrency(currency)),\r\n        setPrice: value => dispatch(actions.setPrice(value))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispacthToProps)(withRouter(navtop)); \r\n","import React from 'react'\r\nimport './Navbar.css';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport IconSvg from '../../../utilities/svg/svg';\r\nimport { NavLink, Link} from 'react-router-dom';\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nconst Navbar= props => {\r\n    let userName = props.userName;\r\n        let isAuth = props.isAuth\r\n        return (\r\n            <nav className={`navbarContainer \r\n                            ${props.scrolled ? 'fixed': ''}\r\n                            `}>\r\n            <ul className=\"navbar__list\">\r\n                    <NavLink exact to=\"/\" className=\"navbar__list__item\">\r\n                        <FormattedMessage id=\"home\" defaultMessage=\"home\"/>\r\n                    </NavLink>\r\n                    <Link to=\"../inventory\" className={`navbar__list__item ${props.location.pathname.includes('inventory') ?  'active' : ''}`}>\r\n                        <FormattedMessage id=\"inventory\" defaultMessage=\"inventory\"/>\r\n                    </Link>\r\n                    <Link to=\"../services\" className={`navbar__list__item ${props.location.pathname.includes('services') ?  'active' : ''}`}>\r\n                        <FormattedMessage id=\"services\" defaultMessage=\"services\"/>\r\n                    </Link>\r\n            </ul>\r\n\r\n            <div className=\"navbar__cta\">\r\n\r\n                \r\n                {!isAuth && (\r\n                        <Link className=\"navbar__cta__login\" to=\"auth\">\r\n                            <IconSvg icon=\"user\"/>\r\n                            <span><FormattedMessage id=\"login\" defaultMessage=\"login\"/></span>\r\n                        </Link>\r\n                )}\r\n\r\n                {isAuth && (\r\n                    <div className=\"navbar__cta__avatar\"\r\n                         onClick={() => props.history.push('/my-account/messages')}>\r\n                       <span>{userName.split(' ')[0].slice(0, 1)}{userName.split(' ')[1].slice(0, 1)}</span> \r\n                    </div>\r\n\r\n                )}\r\n            </div>\r\n        </nav>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.auth,\r\n        userName: state.auth.userName,\r\n        lang: state.parameters.lang\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(withRouter(Navbar));\r\n","import React, { Component } from 'react'\r\nimport \"./MobileNav.css\"\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport IconSvg from '../../../utilities/svg/svg';\r\nimport { NavLink, Link} from 'react-router-dom'\r\nimport DropDownList from '../../DropDownList/DropDownList'\r\nimport * as actions from \"../../../store/actions\";\r\n\r\nclass MobileNav extends Component {\r\n\r\n    state = {\r\n        showNavList: false,\r\n        showLogout: false\r\n    }\r\n    toggleNavList = () => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            showNavList: !prevState.showNavList\r\n        }))\r\n    }\r\n\r\n    toggleShowLogout = () => {\r\n        this.setState( prevState => ({\r\n            ...prevState,\r\n            showLogout: !prevState.showLogout\r\n        }))\r\n    }\r\n\r\n    setCurrency = currency => {\r\n        this.props.history.push({\r\n            pathname: this.props.history.pathname,\r\n            search: `lang=${this.props.lang}&currency=${currency}`\r\n        })\r\n        this.props.setCurrency(currency)\r\n       this.toggleNavList()\r\n    }\r\n\r\n    setLang = lang => {\r\n        this.props.history.push({\r\n            pathname: this.props.history.pathname,\r\n            search: `lang=${lang}&currency=${this.props.currency}`\r\n        })\r\n        this.props.setLang(lang)\r\n        this.toggleNavList()\r\n    }\r\n    render() {\r\n        const { showNavList, showLogout } = this.state\r\n        let userName = this.props.userName;\r\n        let isAuth = this.props.isAuth\r\n        return (\r\n            <div className=\"mobile-nav\">\r\n\r\n                <div className=\"mobile-nav__group\">\r\n                    <div className=\"mobile-nav__toggler\" onClick={this.toggleNavList}>\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                    </div>\r\n                    <div className=\"mobile-nav__logo\">\r\n                    <Link to=\"/inventory\">                  \r\n                            WOTO\r\n                    </Link>\r\n                    </div>\r\n                   \r\n                </div>\r\n\r\n                <div className=\"mobile-nav__group\">\r\n\r\n                    <Link to=\"/my-account/messages\">\r\n                        <IconSvg icon=\"email\"/>\r\n                    </Link>\r\n                    <Link to=\"/my-account/favorites\">\r\n                        <IconSvg icon=\"heart\"/>\r\n                    </Link>\r\n                    \r\n\r\n                    {!isAuth && (\r\n                        <Link className=\"mobile-nav__login\" to=\"/auth\">\r\n                            Login\r\n                        </Link>\r\n                    )}\r\n\r\n                    {isAuth && window.innerWidth > 738 && (\r\n                        <Link className=\"mobile-nav__avatar\" to=\"/my-account/messages\">\r\n                            <span>{userName.split(' ')[0].slice(0, 1)}{userName.split(' ')[1].slice(0, 1)}</span> \r\n                        </Link>\r\n                    )}\r\n                    {isAuth && window.innerWidth <= 738 && (\r\n\r\n                        <div className=\"mobile-nav__avatar\" to=\"/my-account/messages\" onClick={this.toggleShowLogout}>\r\n                            <span>{userName.split(' ')[0].slice(0, 1)}{userName.split(' ')[1].slice(0, 1)}</span> \r\n\r\n                            <div className={`mobile-nav__logout ${showLogout ? 'show': ''}`}\r\n                                 onClick={this.props.logoutHandler}>\r\n                                Logout\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                    )}\r\n          \r\n\r\n\r\n\r\n                </div>\r\n\r\n               \r\n                \r\n\r\n\r\n                {showNavList && (<div className=\"mobile-nav__backdrop\" onClick={this.toggleNavList}></div> )} \r\n                <div className={`mobile-nav__listContainer  ${showNavList ? 'show' : ''}`}>\r\n                    <ul className={`mobile-nav__list`}>\r\n                        <NavLink exact to={`/`} className=\"mobile-nav__list__item\" onClick={this.toggleNavList}>\r\n                            Home\r\n                        </NavLink>\r\n                        <NavLink to={`/inventory`} className=\"mobile-nav__list__item\" onClick={this.toggleNavList}>\r\n                            Inventory\r\n                        </NavLink>\r\n                        <NavLink to=\"/services\" className=\"mobile-nav__list__item\" onClick={this.toggleNavList}>\r\n                            Services\r\n                        </NavLink>\r\n                    </ul>\r\n                    <div className=\"mobile-nav__parameters\">\r\n                            <DropDownList \r\n                                value={this.props.lang}\r\n                                list={['english', 'spanish', 'french']}\r\n                                selectItemHandler={this.setLang}\r\n                            />\r\n                            <DropDownList \r\n                                value={this.props.currency}\r\n                                list={['CAD', 'USD','EUR']}\r\n                                selectItemHandler={this.setCurrency}\r\n                            />\r\n                    </div>\r\n                    <div className=\"mobile-nav__list__socialMedia\">\r\n                            <IconSvg icon=\"facebook\"/>\r\n                            <IconSvg icon=\"instagram\"/>\r\n                            <IconSvg icon=\"twitter\"/>\r\n                        </div>\r\n                </div>\r\n\r\n               \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.auth,\r\n        userName: state.auth.userName,\r\n        lang: state.parameters.lang,\r\n        currency: state.parameters.currency,\r\n    }\r\n}\r\n\r\nconst mapDispacthToProps = dispatch => {\r\n    return {\r\n        setLang: lang => dispatch(actions.setLang(lang)),\r\n        setCurrency: currency => dispatch(actions.setCurrency(currency)),\r\n    }\r\n}\r\n\r\nexport default  connect(mapStateToProps, mapDispacthToProps)( withRouter(MobileNav))\r\n","import React, { Component } from 'react'\r\nimport './Footer.css';\r\nimport IconSvg from '../../utilities/svg/svg';\r\nimport DropDownList from '../DropDownList/DropDownList';\r\nimport * as actions from '../../store/actions'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nclass Footer extends Component {\r\n\r\n    state = {\r\n        susbscribed: false,\r\n        subscribeInput: ''\r\n    }\r\n    changeInputHandler = value => {\r\n        this.setState({ subscribeInput: value })\r\n    }\r\n\r\n    subscribeHandler = () => {\r\n        this.setState({\r\n            susbscribed: true,\r\n            subscribeInput: ''\r\n        })\r\n    }\r\n\r\n    setCurrencyHandler = currency => {\r\n        this.props.history.push({\r\n            pathname: this.props.history.pathname,\r\n            search: `lang=${this.props.lang}&currency=${currency}`\r\n        })\r\n        this.props.setCurrency(currency)\r\n        \r\n        window.scrollTo(0 , 0)\r\n    }\r\n    render() {\r\n\r\n        const {susbscribed, subscribeInput} = this.state\r\n        const { hide } = this.props\r\n        return (\r\n            <footer className={`footer ${hide ? 'hide' : ''}`}>\r\n            <ul className=\"footer__list\">\r\n\r\n                <li className=\"footer__list__group\">\r\n                    <div className=\"footer__list__item\">\r\n                        <h3 className=\"footer__title\">WOTO Motors</h3>\r\n                        <p>\r\n                            <FormattedMessage id=\"wotoFooter\" defaultMessage=\"Woto motors is a car dealership based in Quebec. We deliver vehicles all over the world. For more information, log into your woto account and communicate with our agents.\"/>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"footer__list__item\">\r\n                        <h3 className=\"footer__title\"><FormattedMessage id=\"siteMap\" defaultMessage=\"site map\"/></h3>\r\n                        <ul className=\"footer__list__item__list\">\r\n                            <li className=\"footer__list__item__list__item\">\r\n                               <a href=\"/\"><FormattedMessage id=\"home\" defaultMessage=\"home\"/></a>\r\n                            </li>\r\n                            <li className=\"footer__list__item__list__item\">\r\n                                <a href=\"/inventory\"><FormattedMessage id=\"inventory\" defaultMessage=\"inventory\"/></a>\r\n                            </li>\r\n                            <li className=\"footer__list__item__list__item\">\r\n                                <a href=\"/services\"><FormattedMessage id=\"services\" defaultMessage=\"services\"/></a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n\r\n\r\n\r\n                <li className=\"footer__list__group\">\r\n                    <div className=\"footer__list__item\">\r\n                        <h3 className=\"footer__title\"><FormattedMessage id=\"subscribe\" defaultMessage=\"subscribe\"/></h3>\r\n\r\n                        <div className=\"footer__inputContainer\">\r\n                            <input className=\"footer__input\"\r\n                                value={subscribeInput}\r\n                                type=\"email\"\r\n                                placeholder=\"email\"\r\n                                onChange={e => this.changeInputHandler(e.target.value)}\r\n                            />\r\n                            <IconSvg icon=\"send\"\r\n                                onClick={this.subscribeHandler}\r\n                            />\r\n                        </div>\r\n                        \r\n                        {susbscribed && (\r\n                            <p><FormattedMessage id=\"youVeBeenSubscribed\" defaultMessage=\"You've been subscribed. Thank you for joining us\"/></p>\r\n                        )}\r\n                         {!susbscribed && (\r\n                            <p><FormattedMessage id=\"getLastUpdate\" defaultMessage=\"Get latest updates and offers\"/></p>\r\n                        )}\r\n\r\n                       \r\n                    </div>\r\n                    <div className=\"footer__list__item\">\r\n                        <h3 className=\"footer__title\"><FormattedMessage id=\"parameters\" defaultMessage=\"parameters\"/></h3>\r\n                        <ul className=\"footer__list__item__list\">\r\n                            <li className=\"footer__list__item__list__item\">\r\n                                <DropDownList \r\n                                    value={this.props.lang}\r\n                                    list={['english', 'spanish', 'french']}\r\n                                    selectItemHandler={this.props.setLang}\r\n                                />\r\n                            </li>\r\n                            <li className=\"footer__list__item__list__item\">\r\n                                <DropDownList \r\n                                    value={this.props.currency}\r\n                                    list={['CAD', 'USD', 'EUR']}\r\n                                    selectItemHandler={this.setCurrencyHandler}\r\n                                />\r\n                            </li>\r\n                            \r\n                     </ul>\r\n                    </div>     \r\n                </li>    \r\n            </ul>\r\n\r\n\r\n            <div className=\"footer__copyRight\">\r\n                <span>&copy; Anja Rasoloarivalona - 2019</span>\r\n                <ul className=\"footer__socialNetwork__list\">\r\n                        <IconSvg icon=\"facebook\"/>\r\n                        <IconSvg icon=\"instagram\"/>\r\n                        <IconSvg icon=\"twitter\"/>\r\n                        <IconSvg icon=\"google-plus\"/>\r\n                    </ul>\r\n            </div>\r\n        </footer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.parameters.lang,\r\n        currency: state.parameters.currency\r\n    }\r\n}\r\n\r\nconst mapDispacthToProps = dispatch => {\r\n    return {\r\n        setLang: lang => dispatch(actions.setLang(lang)),\r\n        setCurrency: currency => dispatch(actions.setCurrency(currency))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispacthToProps)(withRouter(Footer));\r\n\r\n\r\n","export const timeStampGenerator = () => {\r\n    let date = new Date();\r\n    \r\n    let day = date.getDate();\r\n    let realDay; \r\n    if(day < 10){\r\n      realDay = '0' + day\r\n    } else {\r\n      realDay = day\r\n    }\r\n    \r\n    let month = date.getMonth() + 1;\r\n    let year = date.getFullYear()\r\n    let hour = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    let seconds = date.getSeconds();\r\n\r\n    return `${realDay}-${month}-${year} ${hour}:${minutes}:${seconds}`\r\n  }","import React, { Component } from 'react';\r\nimport autosize from 'autosize';\r\n\r\nclass TextArea extends Component {\r\n    componentDidMount(){\r\n       this.textarea.focus();\r\n       autosize(this.textarea);\r\n    }\r\n    render(){\r\n      const style = {\r\n                maxHeight:'9rem',\r\n                minHeight:'4rem',\r\n                  resize:'none',\r\n                  padding:'.7rem',\r\n                  boxSizing:'border-box',\r\n                  fontSize:'1.6rem'};\r\n        return (\r\n            <textarea\r\n                style={style} \r\n                ref={c=>this.textarea=c}\r\n                placeholder={this.props.placeholder}\r\n                rows={1} \r\n                value={this.props.value}\r\n                onChange={(e) => this.props.onChange(e.target.value)}\r\n                className={this.props.className}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default TextArea","import React from 'react';\r\nimport './MessagesList.css'\r\n\r\nconst MessagesContainerList = props => {\r\n    let messages = props.messages;\r\n    let displayedDate = '';\r\n    let chatMessageGap;\r\n    let currentSenderType;\r\n\r\n    //Initialize date and store it\r\n    let date = messages[0].timeStamp;\r\n    let shortDate = messages[0].timeStamp.slice(0 , 5);\r\n    currentSenderType = messages[0].senderType;\r\n    let messagesList = messages.map((message, index, array) => {     \r\n\r\n        let currentDate = array[index].timeStamp.slice(0 , 5);\r\n        if(index === 0){\r\n            //Display the first date\r\n                displayedDate = date\r\n\r\n        } else {\r\n            //compare the current date with the previous date\r\n            if(currentDate !== shortDate && index + 1 < array.length){\r\n                 displayedDate = messages[index].timeStamp\r\n                 shortDate = messages[index].timeStamp.slice(0 , 5);\r\n            } else {\r\n                displayedDate = ''\r\n            }\r\n        }\r\n\r\n        if( index + 1 < array.length  && array[index + 1].senderType === currentSenderType ){\r\n            chatMessageGap = 'small'\r\n        } else {\r\n            chatMessageGap = 'big'\r\n            if(index + 1 < array.length){\r\n                currentSenderType = array[index + 1].senderType\r\n            }\r\n            \r\n        }\r\n \r\n        return (\r\n            <div key={message._id} className=\"messagesContainer__body__chatContainer\" >\r\n                {displayedDate !== '' && (<div className=\"messagesContainer__body__chat__convoDate\">{displayedDate}</div>)\r\n                }\r\n                <div className={`messagesContainer__body__chat               \r\n                                ${chatMessageGap === 'small' ? 'small-gap': 'big-gap'}`}>\r\n                    <div className={`messagesContainer__body__chat__content \r\n                                    ${message.senderType === 'user' ? 'user' : 'admin'}` }>\r\n                        {message.message}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    return messagesList\r\n}\r\n\r\nexport default MessagesContainerList\r\n","import React, { Component, Fragment } from 'react';\r\nimport './Chat.css';\r\nimport openSocket from 'socket.io-client';\r\nimport { connect } from 'react-redux';\r\nimport { timeStampGenerator } from '../../utilities/timeStampGenerator';\r\nimport IconSvg from '../../utilities/svg/svg';\r\nimport AutoSizeTextArea from '../AutosizeTextArea/AutosizetextArea';\r\nimport MessagesList from '../../pages/account/Messages/MessagesList/MessagesList';\r\nimport * as actions from '../../store/actions'\r\n\r\n\r\n class Chat extends Component {\r\n    state = {\r\n        messages: null,\r\n        messageInput: '',\r\n        showChat: true,\r\n        name: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        let url = \"http://localhost:8000/messages/\" + this.props.userId;\r\n        let method = \"GET\";\r\n        fetch( url, {\r\n           headers: {\r\n               \"Content-Type\": \"application/json\"\r\n           },\r\n           method: method\r\n        })\r\n        .then( res => {\r\n            if(res.status !== 200){\r\n                throw new Error('Failed to fetch messages')\r\n            }\r\n            return res.json()\r\n        })\r\n        .then( resData => {\r\n            let messages = resData.messages.messages;\r\n            let unreadMessageCounter = 0;\r\n            messages.forEach(i => {\r\n                if(i.read === false){\r\n                    unreadMessageCounter++\r\n                } \r\n            })\r\n\r\n            if(unreadMessageCounter > 0){\r\n                this.props.addNewMessageNotification(unreadMessageCounter)\r\n            }\r\n            this.setState({ \r\n                messages: resData.messages.messages,\r\n                name: this.props.userName\r\n            }, () => this.scrollToBottom())\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        const socket = openSocket('http://localhost:8000');\r\n        socket.on('adminSentMessage', data => { \r\n           if(this.props.userId === data.messageData.userId){\r\n            this.props.playNotificationSound()\r\n            this.addMessages(data.messageData)\r\n            if(this.state.showChat === true){\r\n                this.readNewMessagesHandler();\r\n            } else {\r\n               this.props.addNewMessageNotification(1)\r\n               }\r\n           }      \r\n        })\r\n    }\r\n\r\n    readNewMessagesHandler = () => {\r\n        let url = \"http://localhost:8000/messages/\" + this.props.userId;\r\n            let timeStamp = timeStampGenerator();\r\n                fetch( url, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        timeStamp: timeStamp,\r\n                        userName: this.state.name\r\n                    })\r\n                })\r\n                .then( res => {\r\n                    if(res.status !== 200){\r\n                        throw new Error('Failed to fetch messages')\r\n                    }\r\n                    return res.json()\r\n                })\r\n                .then( resData => {\r\n                    console.log('resdata', resData)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n           \r\n    }\r\n    sendMessageHandler = () => {\r\n\r\n        if(this.state.messageInput.trim() !== ''){\r\n            let timeStamp = timeStampGenerator();\r\n            let url = \"http://localhost:8000/messages/user/\" + this.props.userId;\r\n            let method = \"POST\";\r\n            fetch(url, {\r\n                method: method,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    from: this.state.name,\r\n                    message: this.state.messageInput,\r\n                    timeStamp: timeStamp\r\n                })\r\n            })\r\n            .then( res => {\r\n                return res.json()\r\n            })\r\n            .then( resData => {\r\n                this.addMessages(resData.data);\r\n                this.setState({ messageInput: ''});\r\n            })\r\n            .catch( err => {\r\n                console.log(err)\r\n            })\r\n        } else {\r\n            alert('Please enter a message')\r\n        }\r\n        \r\n\r\n\r\n\r\n    } \r\n    addMessages = message => {\r\n        let newMessages = [...this.state.messages, message]\r\n        this.setState({ messages: newMessages}, () => this.scrollToBottom())\r\n    }\r\n    messageChangeHandler = value => {\r\n        this.setState({ messageInput: value})\r\n    }\r\n    toggleShowChat = () => {\r\n        let unreadMessageCounter = 0;\r\n        this.state.messages.forEach(i => {\r\n            if(i.read === false){\r\n                unreadMessageCounter++\r\n            } \r\n        })\r\n\r\n        if(this.props.newMessage > 0){\r\n            unreadMessageCounter += this.props.newMessage\r\n        }\r\n\r\n        if(unreadMessageCounter > 0){\r\n            this.readNewMessagesHandler()\r\n            this.props.resetNewMessageNotification()\r\n        }\r\n        this.setState( prevState => ({\r\n            showChat: !prevState.showChat\r\n        }))\r\n    }\r\n\r\n    scrollToBottom() {\r\n        this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n\r\n      \r\n\r\n    render() {\r\n\r\n        const { showChat, messageInput, messages } = this.state;\r\n\r\n        let messagesList;\r\n        if(messages && messages.length > 0){\r\n            messagesList = (\r\n                <MessagesList messages={messages}/>\r\n            ) \r\n        } else {\r\n            messagesList = (\r\n                <div className=\"messagesContainer__body__start\">Start conversation</div>\r\n            )\r\n        }\r\n\r\n    \r\n        return (\r\n            <Fragment>\r\n                <section className=\"chat\" onClick={this.toggleShowChat}>\r\n                    <div className=\"chat__icon\">\r\n                        <IconSvg icon=\"messenger\"/>\r\n                    </div>\r\n                    {!showChat && this.props.newMessage > 0 && (\r\n                        <div className=\"chat__notif\">\r\n                            {this.props.newMessage}\r\n                        </div>\r\n                    )}\r\n                </section>\r\n\r\n                <div className={`chat__messages ${showChat ? 'show' : ''}`}>\r\n                    <div className=\"chat__messages__header\">\r\n                        <IconSvg icon=\"close\" onClick={this.toggleShowChat}/>\r\n                        <span>Open conversation</span>\r\n                    </div>\r\n\r\n                    <div className=\"chat__messages__body\">\r\n                         {messagesList}\r\n                         <div ref={el => this.messagesEnd = el}></div>\r\n                    </div>\r\n                    <div className=\"chat__messages__input\">\r\n                        <AutoSizeTextArea \r\n                            value={messageInput}\r\n                            placeholder=\"Write a message\"\r\n                            onChange={this.messageChangeHandler}\r\n                        />\r\n                        <IconSvg icon=\"send\" onClick={this.sendMessageHandler}/>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.auth.userId,\r\n        userName: state.auth.userName,\r\n        newMessage: state.notification.newMessage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addNewMessageNotification: data =>  dispatch(actions.addNewMessageNotification(data)),\r\n        resetNewMessageNotification: () => dispatch(actions.resetNewMessageNotification())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\nconst loader = () => {\r\n    return (\r\n        <div className='loader-container'>\r\n            <div className=\"loader\">\r\n                <div className=\"loader__bar\"></div>\r\n                <div className=\"loader__bar\"></div>\r\n                <div className=\"loader__bar\"></div>\r\n                <div className=\"loader__bar\"></div>\r\n                <div className=\"loader__bar\"></div>\r\n                <div className=\"loader__ball\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default loader\r\n\r\n\r\n","import React from 'react';\r\nimport './Button.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst button = props => !props.link ?\r\n    (\r\n        <button \r\n            className={['button', `button--${props.color}`].join(' ')}\r\n            onClick={props.onClick}\r\n            disabled={props.disabled || props.loading}\r\n            type={props.type}>\r\n                {props.loading ? 'Looading...' : props.children}\r\n        </button>\r\n    ) \r\n        :\r\n    (\r\n        <Link \r\n            className={`button button--${props.color}  ${props.customClass}`}\r\n            to={props.link}\r\n            onClick={props.onClick}>\r\n                {props.children}\r\n        </Link>\r\n    )\r\n\r\nexport default button;\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './Amount.css'\r\n\r\n\r\nconst Amount = props => {\r\n   let USDCAD = props.quotes.USDCAD\r\n   let USDEUR = props.quotes.USDEUR\r\n\r\n\r\n        let currency = props.currency;    \r\n        let amount = props.amount;\r\n    \r\n        if(currency === 'USD'){\r\n            amount = amount / USDCAD\r\n        }\r\n\r\n        if(currency === 'EUR'){\r\n            amount = amount / USDCAD * USDEUR\r\n        }\r\n\r\n        return (\r\n            <div className=\"amount\">\r\n                <span className=\"amount__value\">{Math.ceil(amount).toLocaleString()}</span> {props.showCurrency ? <span className=\"amount__currency\">{currency}</span> : ''}  \r\n            </div>\r\n        )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currency: state.parameters.currency,\r\n        quotes: state.parameters.quotes\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Amount)","import React from 'react';\r\nimport './ProductCard.css';\r\nimport IconSvg from '../../utilities/svg/svg';\r\nimport Amount from '../Amount/Amount'\r\n\r\nconst ProductCard = props  => {\r\n    return (\r\n        <article className=\"product\" >\r\n            {props.children}\r\n            <div className=\"product__imgContainer\" onClick={props.requestProductDetails}>\r\n                <div className=\"product__imgContainer__hoverLayer\"></div>\r\n                <img src={props.mainImg} alt=\"main img\" className=\"product__img\"/>\r\n                    <IconSvg icon=\"search\"/>\r\n            </div>   \r\n            <div className=\"product__details\">\r\n                <div className=\"product__details__model\">\r\n                   <span>{props.title}</span>\r\n                    <span>{props.year}</span>\r\n                </div>\r\n                <div className=\"product__details__price\">\r\n                    <Amount amount={props.price} showCurrency/>\r\n                    {/* {props.price.toLocaleString()} MRU */}\r\n                </div>           \r\n            </div>\r\n\r\n            <ul className=\"product__specList\">\r\n                <li className=\"product__specList__item\">\r\n                    <span>{props.nbKilometers}</span>\r\n                    <IconSvg icon=\"road\"/>\r\n                </li>\r\n                <li className=\"product__specList__item\">\r\n                    <span>{props.gazol}</span>\r\n                    <IconSvg icon=\"gas-station\"/>\r\n                </li>\r\n                <li className=\"product__specList__item\">\r\n                    <span>{props.transmissionType}</span>\r\n                    <IconSvg icon=\"gear\"/>\r\n                </li>\r\n            </ul>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default ProductCard\r\n","import React from 'react';\r\nimport './ProductsList.css';\r\nimport ProductCard from '../ProductCard/ProductCard';\r\nimport * as actions from '../../store/actions';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst ProductsList = props => {\r\n    const requestProductDetails = data => {\r\n        props.setProductRequestedData(data);\r\n\r\n        props.history.push(`/inventory/${data._id}?bodyType=${data.general.bodyType}&brand=${data.general.brand}&model=${data.general.model}&currency=${props.currency}&lang=${props.lang}&price=${data.general.price}`); \r\n\r\n        if(props.fetchProductDetailsHandler){\r\n            props.fetchProductDetailsHandler(data)\r\n        }     \r\n    }\r\n    let productsList = props.productsList;\r\n    return (\r\n        <ul className=\"products-list\">\r\n            {productsList.map(product => (\r\n                <li key={product._id} className=\"products-list__item\">\r\n                    <ProductCard \r\n                        id={product._id}\r\n                        mainImg={product.general.mainImgUrl}\r\n                        title={product.general.title}\r\n                        brand={product.general.brand}\r\n                        model={product.general.model}\r\n                        year={product.general.year}\r\n                        price={product.general.price}\r\n                        nbKilometers={product.general.nbKilometers}\r\n                        gazol={product.general.gazol}\r\n                        transmissionType={product.general.transmissionType}\r\n                        requestProductDetails={() => requestProductDetails(product)}\r\n                    />\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currency: state.parameters.currency,\r\n        lang: state.parameters.lang,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setProductRequestedData: data => dispatch(actions.setProductRequestedData(data)) \r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(ProductsList)) \r\n","import React from 'react';\r\nimport './HomeInventory.css';\r\nimport Button from '../../../components/button/Button';\r\nimport ProductsList from '../../../components/ProductsList/ProductsList';\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nconst homeInventory = props => {\r\n    let productsList = props.carsHomeInventory;\r\n    let homeInventoryLimit = props.homeInventoryLimit;\r\n\r\n    if(homeInventoryLimit < productsList.length){\r\n        productsList = productsList.slice(0, homeInventoryLimit)\r\n    }\r\n    return (\r\n        <div className=\"home-inventory\">\r\n            <ProductsList productsList={productsList}/>\r\n            <Button color=\"primary\"\r\n                    onClick={() => props.history.push('/inventory')}>\r\n                <FormattedMessage id=\"seeMore\" defaultMessage=\"see more\"/>\r\n            </Button>\r\n        \r\n        </div>\r\n    )\r\n}\r\nexport const HomeInventoryMemo = React.memo(homeInventory);","import React, { Component } from 'react';\r\nimport './Controller.css';\r\nimport { connect } from 'react-redux';\r\nimport InputRange from 'react-input-range';\r\nimport 'react-input-range/lib/css/index.css';\r\nimport DropDownList from '../../../components/DropDownList/DropDownList'\r\nimport {defineMessages, injectIntl, FormattedMessage} from \"react-intl\"\r\n\r\n\r\nconst messages = defineMessages({\r\n    allBodyTypes: {\r\n        id: \"allBodyTypes\",\r\n        defaultMessage: \"all body types\"\r\n    },\r\n    allBrands: {\r\n        id: \"allBrands\",\r\n        defaultMessage: \"all brands\"\r\n    },\r\n    allModels: {\r\n        id: \"allModels\",\r\n        defaultMessage: \"all models\"\r\n    },\r\n    increasingPrice: {\r\n        id: \"increasingPrice\",\r\n        defaultMessage: \"increasing price\"\r\n    },\r\n    decreasingPrice: {\r\n        id: \"decreasingPrice\",\r\n        defaultMessage: \"decreasing price\"\r\n    },\r\n    latest: {\r\n        id: \"latest\",\r\n        defaultMessage: \"latest\"\r\n    },\r\n    mostPopular: {\r\n        id: \"mostPopular\",\r\n        defaultMessage: \"most popular\"\r\n    }\r\n})\r\n\r\n\r\n class Controller extends Component {\r\n\r\n    componentDidUpdate(prevProps){\r\n        // if(prevProps.currency !== this.props.currency){\r\n        //    console.log('formated', this.props.query.price.formatedValue)\r\n        // }\r\n    }\r\n    render() {\r\n        const {formatMessage } = this.props.intl\r\n\r\n        const {query} = this.props;  \r\n        let bodyTypeList = this.props.bodyTypeList;\r\n        let data = this.props.brandAndModelsData;\r\n\r\n\r\n        let brandData = Object.keys(data)\r\n        let bodyTypeBrandData = [];\r\n        if(query.bodyType !== 'all'){\r\n            Object.keys(data).forEach(brand => {\r\n                if(Object.keys(data[brand]).includes(query.bodyType)){\r\n                    bodyTypeBrandData.push(brand)\r\n                }\r\n            })\r\n            brandData = bodyTypeBrandData\r\n        }\r\n\r\n        let modelData = [];\r\n        if(query.brand !== 'all'){\r\n            if(query.bodyType === 'all'){\r\n                Object.keys(data[query.brand]).forEach(bodyType => {\r\n                    modelData = [...modelData, ...data[query.brand][bodyType]]\r\n                })\r\n            } else { modelData = [...modelData, ...data[query.brand][query.bodyType]]\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n       \r\n            <div className=\"inventory__controller\">\r\n\r\n                        <DropDownList \r\n                            value={query.bodyType === 'all' ? formatMessage(messages.allBodyTypes) : query.bodyType}\r\n                            list={[ {text: formatMessage(messages.allBodyTypes), value: 'all'}, ...bodyTypeList]}\r\n                            selectItemHandler={this.props.selectBodyTypeHandler}\r\n                        />\r\n\r\n                        <DropDownList \r\n                            value={query.brand === 'all' ? formatMessage(messages.allBrands) : query.brand}\r\n                            list={[ {text: formatMessage(messages.allBrands), value: 'all'}, ...brandData]}\r\n                            selectItemHandler={this.props.selectBrandHandler}\r\n                        />\r\n      \r\n                        <DropDownList \r\n                            value={query.model === 'all' ? formatMessage(messages.allModels) : query.model}\r\n                            list={ query.brand !== 'all' ? [{text: formatMessage(messages.allModels), value: 'all'}, ...modelData] : [ {text: formatMessage(messages.allModels), value: 'all' }]}\r\n                            selectItemHandler={this.props.selectModelHandler}\r\n                        />\r\n              \r\n                        {query.sort && (\r\n                            <DropDownList \r\n                            value={query.sort.split(' ').length > 1 ? formatMessage(messages[`${query.sort.split(' ')[0]}${query.sort.split(' ')[1].slice(0, 1).toUpperCase()}${query.sort.split(' ')[1].slice(1)}`])  : formatMessage(messages[query.sort])}\r\n                            list={[\r\n                                {text: formatMessage(messages.increasingPrice), value: 'increasing price'},\r\n                                {text: formatMessage(messages.decreasingPrice), value: 'decreasing price'},\r\n                                {text: formatMessage(messages.latest), value: 'latest'},\r\n                                {text: formatMessage(messages.mostPopular), value: 'most popular'}\r\n                            ]}\r\n                            selectItemHandler={this.props.sortHandler}\r\n                            />\r\n                        )}\r\n                      \r\n                 \r\n\r\n                    <div className=\"inventory__controller__group\">\r\n                        <div className=\"inventory__controller__group__infos\">\r\n                            <div className=\"inventory__controller__group__infos__key\">\r\n                                <FormattedMessage id=\"price\" defaultMessage=\"price\"/>\r\n                            </div>\r\n                            <div className=\"inventory__controller__group__infos__value\">\r\n                                {query.price.value.min} - {query.price.value.max}\r\n                            </div>\r\n                        </div>\r\n                        <InputRange \r\n                            step={1000}\r\n                            maxValue= {query.price.scope.max}\r\n                            minValue={query.price.scope.min}\r\n                            value={query.price.value}\r\n                            onChange={value => this.props.changePriceHandler(value)}\r\n                            onChangeComplete={this.props.changeComplete}/>\r\n                    </div>\r\n\r\n                    <div className=\"inventory__controller__group\">\r\n                        <div className=\"inventory__controller__group__infos\">\r\n                            <div className=\"inventory__controller__group__infos__key\">\r\n                            <FormattedMessage id=\"year\" defaultMessage=\"year\"/>\r\n                            </div>\r\n                            <div className=\"inventory__controller__group__infos__value\">\r\n                                {query.year.value.min} - {query.year.value.max}\r\n                            </div>\r\n                        </div>\r\n                        <InputRange \r\n                            maxValue={query.year.scope.max }\r\n                            minValue={query.year.scope.min } \r\n                            value={query.year.value}\r\n                            onChange={value => this.props.changeYearHandler(value)}\r\n                            onChangeComplete={this.props.changeComplete}/>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        brandAndModelsData: state.product.brandAndModelsData,\r\n        price: state.product.price,\r\n        bodyTypeList: state.product.bodyTypeList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(injectIntl(Controller))\r\n","import React, { Component } from 'react'\r\nimport './HomeSearch.css'\r\nimport { connect } from 'react-redux'\r\nimport Controller from '../../../pages/inventory/Controller/Controller';\r\nimport Button from '../../../components/button/Button';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {FormattedMessage  } from 'react-intl'\r\n\r\nclass HomeSearch extends Component {\r\n\r\n    state = {\r\n        query: {\r\n            brand: 'all',\r\n            model: 'all',\r\n            bodyType: 'all',\r\n            year: {\r\n                value: {\r\n                    min: 2008,\r\n                    max: 2020\r\n                },\r\n                scope: {\r\n                    min: 2008,\r\n                    max: 2020\r\n                }\r\n            },\r\n            price: {\r\n                value: {\r\n                    min: null,\r\n                    max: null\r\n                },\r\n                scope: {\r\n                    min: null,\r\n                    max: null\r\n                }\r\n            },\r\n            sort: 'increasing price'\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        /*** START INIT MIN AND MAX PRICE ***/\r\n        let minPrice = this.props.price.min\r\n        let maxPrice = this.props.price.max\r\n    \r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                price : {\r\n                    value: {\r\n                        min: minPrice,\r\n                        max: maxPrice\r\n                    },\r\n                    scope: {\r\n                        min: minPrice,\r\n                        max: maxPrice\r\n                    }   \r\n                }                 \r\n            },\r\n        }))\r\n    }\r\n\r\n    selectBodyTypeHandler = bodyType => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                bodyType: bodyType\r\n            }\r\n        }))\r\n    }\r\n\r\n    selectBrandHandler = brand => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                brand: brand\r\n            }\r\n        }))\r\n    }\r\n\r\n    selectModelHandler = model => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                model: model\r\n            }\r\n        }))\r\n    }\r\n\r\n    changePriceHandler = value => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                price: {\r\n                    ...prevState.query.price,\r\n                    value: value\r\n                }\r\n            }\r\n        }))\r\n    }\r\n\r\n    changeYearHandler = value => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                year: {\r\n                    ...prevState.query.year,\r\n                    value: value\r\n                }\r\n            }\r\n        }))\r\n    }\r\n\r\n    onChangeComplete = () => {\r\n        this.searchHandler()\r\n    }\r\n\r\n   searchHandler = () => {\r\n    const { query } = this.state;\r\n    this.props.history.push({\r\n        pathname: '/inventory',\r\n        search: `sort=${query.sort}&bodyType=${query.bodyType}&brand=${query.brand}&model=${query.model}&minPrice=${query.price.value.min}&maxPrice=${query.price.value.max}&minYear=${query.year.value.min}&maxYear=${query.year.value.max}`\r\n    })\r\n   }\r\n    render() {\r\n        const {query} = this.state\r\n\r\n        return (\r\n            <div className=\"home-search\">\r\n                <Controller\r\n                        query={query}\r\n                        selectBrandHandler={this.selectBrandHandler}\r\n                        selectModelHandler={this.selectModelHandler}\r\n                        sortHandler={this.sortHandler}\r\n                        changePriceHandler={this.changePriceHandler}\r\n                        changeYearHandler={this.changeYearHandler}\r\n                        changeComplete={this.changeComplete}\r\n                        selectBodyTypeHandler={this.selectBodyTypeHandler}\r\n                        data={this.props.brandAndModelsData}\r\n                />\r\n\r\n                <div className=\"home-search__cta\">\r\n                    <Button color=\"primary\"\r\n                            onClick={this.searchHandler}\r\n                    >\r\n                        <FormattedMessage id=\"search\" defaultMessage=\"search\"/>\r\n                    </Button>\r\n                </div>\r\n\r\n              \r\n         </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        brandAndModelsData: state.product.brandAndModelsData,\r\n        price: state.product.price\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(withRouter(HomeSearch)) ;","import React from 'react';\r\nimport './HomeService.css';\r\nimport IconSvg from '../../../utilities/svg/svg';\r\nimport Button from '../../../components/button/Button';\r\nimport {withRouter} from 'react-router-dom'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nconst homeService = props => {\r\n    return (\r\n        <section className=\"home-service\">\r\n            <h1 className=\"home-service__title\"><FormattedMessage id=\"ourOffers\" defaultMessage=\"our offers\"/></h1>\r\n\r\n            <ul className=\"home-service__list\">\r\n                <li className=\"home-service__list__item\">\r\n                    <IconSvg icon=\"buy\"/>\r\n                    <div className=\"home-service__list__item__text\">\r\n                        <h2 className=\"home-service__list__item__text__title\">Basic</h2>\r\n                        <p className=\"home-service__list__item__text__para\">Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression.</p>\r\n                    </div>\r\n                </li>\r\n                <li className=\"home-service__list__item\">\r\n                    <IconSvg icon=\"contract\"/>\r\n                    <div className=\"home-service__list__item__text\">\r\n                        <h2 className=\"home-service__list__item__text__title\">Conventionnel</h2>\r\n                        <p className=\"home-service__list__item__text__para\">Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression.</p>\r\n                    </div>\r\n                </li>\r\n                <li className=\"home-service__list__item\">\r\n                    <IconSvg icon=\"yoga\"/>\r\n                    <div className=\"home-service__list__item__text\">\r\n                        <h2 className=\"home-service__list__item__text__title\">Tranquility</h2>\r\n                        <p className=\"home-service__list__item__text__para\">Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression.</p>\r\n                    </div>\r\n                </li>\r\n                <li className=\"home-service__list__item\">\r\n                    <IconSvg icon=\"key\"/>\r\n                    <div className=\"home-service__list__item__text\">\r\n                        <h2 className=\"home-service__list__item__text__title\">Clés en main</h2>\r\n                        <p className=\"home-service__list__item__text__para\">Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression.</p>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        \r\n            <Button color=\"primary\"\r\n                    onClick={() => props.history.push(\"/services\")}\r\n            >\r\n                <FormattedMessage id=\"learnMore\" defaultMessage=\"LEARN MORE\"/>\r\n            </Button>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default withRouter(homeService);\r\n","import React from 'react';\r\nimport './FormInput.css';\r\n\r\nconst formInput = props => {\r\n    return (\r\n        <div className={`input ${props.className}`}>\r\n\r\n            \r\n\r\n            {/*-------INPUT VARIATION--------*/}\r\n\r\n\r\n                {/*-----BASIC INPUT--------*/}\r\n                {\r\n                    props.control === 'input' && (\r\n                        <input className=\"input__field\" \r\n                               type={props.type} //text, email, password...\r\n                               id={props.id}\r\n                               required={props.required}\r\n                               value={props.value}\r\n                               placeholder={props.placeholder}\r\n                               autoComplete= {props.autoComplete}\r\n                               onChange={e => props.onChange(props.id, e.target.value, props.formType)}\r\n                               />\r\n                    )\r\n                }\r\n\r\n\r\n\r\n                {/*----TEXTAREA INPUT--------*/}\r\n                {\r\n                    props.control === 'textarea' && (\r\n                        <textarea className=\"textarea\"\r\n                            id={props.id}\r\n                            required={props.required}\r\n                            value={props.value}\r\n                            onChange={e => props.onChange(props.id, e.target.value)}\r\n                            placeholder={props.placeholder}\r\n                            />\r\n                    )\r\n                }\r\n\r\n                {\r\n                    props.control === 'select' && (\r\n                        <select id={props.id}\r\n                                required={props.required}\r\n                                onChange={e => props.onChange(props.id, e.target.value)}\r\n                                value={props.value}>\r\n                                \r\n                                {\r\n                                    props.options.map( option => (\r\n                                        <option key={option} value={option}>{option}</option>\r\n                                    ))\r\n                                }\r\n                        </select>\r\n                    )\r\n                }\r\n\r\n                {/*--------INPUT LABEL-----------*/}\r\n                {\r\n                    props.label && (\r\n                        <label htmlFor={props.id} className=\"input__label\">{props.label}</label>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    props.border && (\r\n                        <div className=\"input__border\"></div>\r\n                    )\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default formInput;\r\n","export const validator = (email, password, confirm_password, firstName, lastName) => {\r\n    const error = [];\r\n\r\n\r\n    let values = [email, password, confirm_password, firstName, lastName];\r\n\r\n\r\n    /* ------CHECK IF VALUE IS EMPTY---------*/\r\n    \r\n    values.forEach(val => {\r\n        if(val){\r\n            if(val.value.length < 1){\r\n                error.push(`${val.errorLabel} is required`)\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n    /*-------CHECK IF EMAIL IS VALID--------*/\r\n    let emailIsValid = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(email.value.trim())\r\n      if(!emailIsValid){\r\n        error.push('Please, enter a valid email')\r\n      }\r\n\r\n\r\n      /*----CHECK FIRST NAME AND LAST NAME LLENGTH------*/ \r\n      if(firstName){\r\n          if(firstName.value.trim().length < 3){\r\n              error.push('Firstname should be at least 3 characters long')\r\n          }\r\n      }\r\n\r\n      if(lastName){\r\n        if(lastName.value.trim().length < 3){\r\n            error.push('Lastname should be at least 3 characters long')\r\n        }\r\n    }\r\n\r\n\r\n    /*------CHECK PASSWORD LENGTH-----*/\r\n    if(password.value.trim().length < 5) {\r\n        error.push('Password should be at least 5 characters long')\r\n    }\r\n\r\n    /*----CHECK IF TWO PASSWORDS ARE EQUAL-----*/\r\n    if(confirm_password){\r\n        if(password.value.trim() !== confirm_password.value.trim()){\r\n            error.push('Please enter the same password')\r\n        }\r\n    }\r\n\r\n    return error\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => \r\n    ReactDOM.createPortal(\r\n        <div\r\n        className={['backdrop', props.open ? 'open' : ''].join(' ')}\r\n        onClick={props.onClick}\r\n        >\r\n          {props.children}\r\n        </div>,\r\n    document.getElementById('backdrop-root')\r\n  );\r\n\r\n\r\nexport default backdrop","import React from 'react';\r\nimport './Modal.css';\r\nimport Button from '../button/Button';\r\n\r\nconst modal = props => \r\n    (\r\n        <section className='modal'>\r\n            <header className=\"modal__header\">\r\n                <h1>{props.title}</h1>\r\n            </header>\r\n            <div className=\"modal__body\">{props.children}</div>\r\n            <div className=\"modal__cta\">\r\n                <Button onClick={props.onCloseModal}\r\n                        color='primary'>\r\n                    OK\r\n                </Button>\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n\r\nexport default modal","import React, { Fragment} from 'react';\r\nimport Backdrop from '../backdrop/Backdrop';\r\nimport Modal from '../modal/Modal';\r\n\r\nconst errorHandler = props => \r\n    (   \r\n        <Fragment>\r\n            {props.error && (\r\n                <Backdrop onClick={props.onCloseError}/>\r\n            )}\r\n\r\n            {props.error && (\r\n                <Modal title='Oops something went wrong'\r\n                        onCloseModal = {props.onCloseError}>\r\n                    <p>{props.error[0]}</p>\r\n                </Modal>\r\n            )}\r\n        </Fragment>\r\n    )\r\n\r\nexport default errorHandler\r\n","import React, { Component } from 'react';\r\nimport Input from '../../../components/formInput/FormInput';\r\nimport Button from '../../../components/button/Button';\r\nimport './Login.css';\r\nimport { validator} from '../../../utilities/validators';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport ErrorHandler from '../../../components/errorHandler/ErrorHandler';\r\n\r\nimport {timeStampGenerator } from '../../../utilities/timeStampGenerator';\r\nimport openSocket from 'socket.io-client';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { injectIntl, defineMessages, FormattedMessage } from 'react-intl'\r\n\r\n\r\nconst messages = defineMessages({\r\n    password: {\r\n        id: \"password\",\r\n        defaultMessage: \"password\"\r\n    }\r\n})\r\n\r\n class Login extends Component {\r\n\r\n    state= {\r\n        loginForm: {\r\n            email: {\r\n                value: ''\r\n            },\r\n\r\n            password:{\r\n                value: ''\r\n            }\r\n        },\r\n\r\n        error: null,\r\n    }\r\n\r\n    inputChangeHandler = (input, value) => {\r\n        this.setState( prevState => {\r\n            const updatedForm = {\r\n                ...prevState.loginForm,\r\n                [input]: {\r\n                    ...prevState.loginForm[input],\r\n                    value: value\r\n                }\r\n            }\r\n            return {\r\n                loginForm: updatedForm\r\n            }\r\n        })\r\n    }\r\n\r\n    loginHandler = (e, loginFormData) => {\r\n        e.preventDefault();\r\n        this.props.setLoadingToTrue();\r\n        if(loginFormData){\r\n            const errors = validator(\r\n                loginFormData.email,\r\n                loginFormData.password\r\n            )\r\n            if(errors.length > 0){\r\n                this.setState({ error: errors})\r\n                this.props.setLoadingToFalse()\r\n                this.props.setErrors()\r\n\r\n                return \r\n            }\r\n        }\r\n        let timeStamp = timeStampGenerator();\r\n        fetch('https://africauto.herokuapp.com/auth/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: loginFormData.email.value,\r\n                password: loginFormData.password.value,\r\n                timeStamp: timeStamp\r\n            })\r\n        })\r\n        .then( res => {\r\n            if(res.status === 422){\r\n                throw new Error('validation failed')\r\n            }\r\n            \r\n            if(res.status === 401){\r\n                throw new Error('Wrong email or password')\r\n            }\r\n\r\n            if(res.status !== 200 && res.status !== 201){\r\n                throw new Error('Could not authenticate you')\r\n            }\r\n            return res.json()\r\n        })\r\n        .then( resData => {\r\n            let socket = openSocket('https://africauto.herokuapp.com', {query: `data=${resData.userId} ${resData.connectionId}`});\r\n            socket.connect()\r\n                this.props.loginSucceeded(resData);\r\n                localStorage.setItem('woto-token', resData.token);\r\n                localStorage.setItem('woto-userId', resData.userId);\r\n                localStorage.setItem('woto-userName', resData.userName);\r\n                const remainingMilliSeconds = 24 * 60 * 60 * 1000 //24hours\r\n                const expiryDate = new Date( new Date().getTime() + remainingMilliSeconds )\r\n\r\n                localStorage.setItem('woto-expiryDate', expiryDate.toISOString());\r\n\r\n                this.props.setLoadingToFalse()\r\n                this.props.history.push('/my-account/messages')\r\n\r\n        })\r\n        .catch( err => {\r\n            let error = []\r\n            error.push(err.message)\r\n            this.setState({ error: error})\r\n            this.props.loginFailed()\r\n            this.props.setLoadingToFalse()\r\n            this.props.setErrors()\r\n        })\r\n\r\n\r\n    }\r\n\r\n    closeErrorHandler = () => {\r\n        this.setState({ error: null});\r\n        this.props.resetErrors()\r\n    }\r\n\r\n    \r\n\r\n\r\n    render() {\r\n        const {formatMessage } = this.props.intl\r\n\r\n        let form;\r\n\r\n        if(this.state.error) {\r\n            form = <ErrorHandler error = {this.state.error}\r\n                    onCloseError={this.closeErrorHandler}/>\r\n        }\r\n         else {\r\n             form = (\r\n                <form className= 'auth__form auth__form--login' \r\n                       onSubmit={e => this.loginHandler(e, this.state.loginForm)}\r\n                       noValidate\r\n                       autoComplete=\"off\">\r\n                    <ul className=\"auth__input__list\">\r\n\r\n                                <Input  type='email'\r\n                                    control='input'\r\n                                    label='email'\r\n                                    id='email'\r\n                                    value={this.state.loginForm['email'].value}\r\n                                    onChange={this.inputChangeHandler}\r\n                                    placeholder='email'\r\n                                    border\r\n                                    required={true}\r\n                                    autoComplete = 'new-password'/>\r\n\r\n                            <Input  type='password'\r\n                                    control='input'\r\n                                    label='mot de passe'\r\n                                    id='password'\r\n                                    value={this.state.loginForm['password'].value}\r\n                                    onChange={this.inputChangeHandler}\r\n                                    placeholder={formatMessage(messages.password)}\r\n                                    border\r\n                                    required={true}\r\n                                    autoComplete = 'new-password'/>\r\n                    </ul>\r\n\r\n                    <div className='login__options'>\r\n                        <div className=\"login__options--1\" >\r\n                            <FormattedMessage id=\"forgotPassword\" defaultMessage=\"Forgot your password\"/>\r\n                        </div>\r\n                        <div className=\"login__options--1\">\r\n                            <FormattedMessage id=\"notAMemberYet\" defaultMessage=\"Not a member yet\"/> ?\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"auth__button\">\r\n                        <Button color='primary' type='submit'>\r\n                            <FormattedMessage id=\"login\" defaultMessage=\"login\"/>\r\n                        </Button>\r\n                    </div>\r\n                \r\n            </form>\r\n             )\r\n         }\r\n        return form\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loginSucceeded: (data) => dispatch(actions.loginSucceeded(data)),\r\n        loginFailed: () => dispatch(actions.loginFailed())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(injectIntl(Login)));\r\n","import * as actionTypes from './actionsTypes';\r\n\r\n\r\n\r\nexport const loginSucceeded = data => {\r\n    return {\r\n        type: actionTypes.LOGIN_SUCCEDED,\r\n        token: data.token,\r\n        userId: data.userId,\r\n        connectionId: data.connectionId,\r\n        userName: data.userName\r\n\r\n    }\r\n}\r\n\r\nexport const loginFailed = () => {\r\n    return {\r\n        type: actionTypes.LOGIN_FAILED\r\n    }\r\n}\r\n\r\nexport const setLoginStateToTrue = data => {\r\n    return {\r\n        type: actionTypes.SET_LOGIN_STATE_TO_TRUE,\r\n        isAuth: data.isAuth,\r\n        token: data.token,\r\n        userId: data.userId,\r\n        userName: data.userName\r\n        \r\n    }\r\n}\r\n\r\nexport const setLoginStateToFalse = () => {\r\n    return {\r\n        type: actionTypes.SET_LOGIN_STATE_TO_FALSE\r\n    }\r\n}\r\n\r\nexport const setConnectionId = data => {\r\n    return {\r\n        type: actionTypes.SET_CONNECTION_ID,\r\n        connectionId: data\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './HomeContact.css';\r\nimport Login from '../../../pages/auth/login/Login';\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\n class HomeContact extends Component {\r\n    state= {\r\n        loginForm: {\r\n            email: {\r\n                value: ''\r\n            },\r\n\r\n            password:{\r\n                value: ''\r\n            }\r\n        },\r\n\r\n        error: null,\r\n    }\r\n\r\n    inputChangeHandler = (input, value) => {\r\n        this.setState( prevState => {\r\n            const updatedForm = {\r\n                ...prevState.loginForm,\r\n                [input]: {\r\n                    ...prevState.loginForm[input],\r\n                    value: value\r\n                }\r\n            }\r\n\r\n            return {\r\n                loginForm: updatedForm\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home-contact\">\r\n                <h1 className=\"home-contact__title\"><FormattedMessage id=\"needHelp\" defaultMessage=\"Need soome help\"/></h1>\r\n                <p className=\"home-contact__text\">\r\n                    <FormattedMessage id=\"homeContactText\" defaultMessage=\"Log in to your woto account and enjoy a premium service for free. Our agents will be happy to assist you in the purchase of your next car.\"/> \r\n                </p>\r\n                <div className=\"home-contact__form\">\r\n                     <Login />\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default HomeContact\r\n","import React, { Component } from 'react'\r\nimport './Home.css';\r\nimport IconSvg from '../../utilities/svg/svg';\r\nimport {HomeInventoryMemo} from './homeInventory/HomeInventory';\r\nimport HomeSearch from './homeSearch/HomeSearch';\r\nimport HomeService from './homeService/HomeService';\r\nimport HomeContact from './HomeContact/HomeContact'\r\nimport Button from '../../components/button/Button';\r\nimport * as actions from '../../store/actions';\r\nimport { connect } from 'react-redux';\r\nimport ProductList from '../../components/ProductsList/ProductsList'\r\nimport Amount from '../../components/Amount/Amount';\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nclass Home extends Component {\r\n\r\n    state = {\r\n        carsHomeIntro : this.props.carsHomeIntro,\r\n        index: 0,\r\n        initialIndex: 0,\r\n        showIntroList: false,\r\n        partRequested: 'inventory',\r\n\r\n        homeInventoryLimit: 9\r\n    }\r\n\r\n    componentDidMount(){\r\n        let windowWidth = window.innerWidth;\r\n        if(windowWidth > 1337){\r\n            this.setState({ homeInventoryLimit: 8})\r\n        }\r\n\r\n        // this.props.history.push({\r\n        //     pathname: this.props.history.pathname,\r\n        //     search: `currency=${this.props.currency}&lang=${this.props.lang}`\r\n        //   })\r\n\r\n\r\n\r\n        \r\n      this.imageSlideHandler()   \r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.clearInterval(this.inter)\r\n    }\r\n\r\n    imageSlideHandler = () => {\r\n        let {index, carsHomeIntro} =  this.state;\r\n        this.inter = setInterval(() => {\r\n                    if(index === carsHomeIntro.length){                 \r\n                        this.setState({index: 0}, () => {\r\n                            clearInterval(this.inter);\r\n                            this.imageSlideHandler();\r\n                        })\r\n                    } else {\r\n                        this.setState({index: index++ })\r\n                    }\r\n                }, 3000)\r\n    }\r\n\r\n\r\n    onRequestChange = i => {\r\n        clearInterval(this.inter);\r\n        this.setState({ index: i}, () => this.imageSlideHandler())\r\n    }\r\n\r\n    clearInterval = () => {\r\n        clearInterval(this.inter)\r\n    }\r\n\r\n    replayInterval = () => {\r\n       this.imageSlideHandler()\r\n    }\r\n\r\n    showIntroListToggler = () => {\r\n        this.setState( prevState => ({\r\n            showIntroList: !prevState.showIntroList\r\n        }))\r\n    }\r\n\r\n    requestProductDetails = data => {\r\n        this.props.setProductRequestedData(data);\r\n        this.props.history.push(`/inventory/${data._id}?brand=${data.general.brand}&model=${data.general.model}&bodyType=${data.general.bodyType}&price=${data.general.price}`); \r\n        if(this.props.fetchProductDetailsHandler){\r\n            this.props.fetchProductDetailsHandler(data)\r\n        }     \r\n    }\r\n\r\n    render() {\r\n\r\n        const {carsHomeIntro} = this.state;\r\n\r\n        return (\r\n            <div className=\"home\">\r\n            \r\n            {/* <div className={`home__intro__list-toggler\r\n                        ${this.state.showIntroList ? 'active': ''}`}\r\n                 onClick={this.showIntroListToggler}>\r\n\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n            </div>\r\n\r\n            <div className={`home__intro__list\r\n                    ${this.state.showIntroList ? 'active' : ''}`}>\r\n                <div className=\"home__intro__list__controller\">\r\n                    {carsHomeIntro.map( (product, index) => (\r\n                            <img key={product.general.mainImgUrl}src={product.general.mainImgUrl} alt=\"home image\" \r\n                            className={`home__intro__list__controller__item\r\n                            ${this.state.index === index ? 'active': ''}`}/>\r\n                    ))}\r\n                </div>\r\n            </div> */}\r\n\r\n            <section className=\"home__intro\">\r\n                {carsHomeIntro.map((product, index) => (\r\n                        <div className={`home__intro__background \r\n                                        ${this.state.index === index ? 'active' : ''}\r\n                                        ${index === 0 ? 'keyframe' : ''}`}\r\n                        key={index}\r\n                        >\r\n                            <img  src={product.general.mainImgUrl} className=\"home__intro__background__image\" alt='home intro'/>\r\n                            <div className=\"home__intro__product-container\"\r\n                                onMouseEnter={this.clearInterval}\r\n                                onMouseLeave={this.replayInterval}>\r\n                                <div className=\"home__intro__product\">\r\n                                    <div className=\"home__intro__product__detail\">\r\n                                        <span>{product.general.brand}</span> \r\n                                        <span>{product.general.model}</span>\r\n                                        <span>{product.general.year}</span>\r\n                                    </div>\r\n                                    <div className=\"home__intro__product__price\">\r\n                                        <Amount amount={product.general.price} showCurrency/>\r\n                                        {/* <span>{product.general.price}</span>\r\n                                        <span>MRU</span> */}\r\n\r\n\r\n                                    </div>\r\n                                </div>                              \r\n                                 <Button color=\"primary\"\r\n                                  onClick={() => this.requestProductDetails(product)}>\r\n                                     <FormattedMessage id=\"see\" defaultMessage=\"see\"/>\r\n                                 </Button>\r\n                                 \r\n                            </div>\r\n                                 \r\n\r\n                        </div>\r\n                    ))\r\n                }\r\n            </section>\r\n\r\n            <section className=\"home__router\">\r\n                <div className=\"home__router__nav\">\r\n                    <h1><span><FormattedMessage id=\"welcomeTo\" defaultMessage=\"welcome to\"/>&nbsp;</span><span>WOTO MOTORS</span></h1>\r\n                    <nav className=\"home__router__nav__list\">\r\n                        <li \r\n                            className={`home__router__nav__list__item ${this.state.partRequested === 'inventory' ? 'active': ''}`} \r\n                            onClick={() => this.setState({ partRequested: 'inventory'})}>\r\n                                <FormattedMessage id=\"inventory\" defaultMessage=\"inventory\"/>\r\n                        </li>\r\n                        <li className={`home__router__nav__list__item ${this.state.partRequested === 'search' ? 'active': ''}`}\r\n                            onClick={() => this.setState({ partRequested: 'search'})}>\r\n                               <FormattedMessage id=\"search\" defaultMessage=\"search\"/>\r\n                        </li>\r\n                        {/* <li className={`home__router__nav__list__item ${this.state.partRequested === 'contact' ? 'active': ''}`}\r\n                            onClick={() => this.setState({ partRequested: 'contact'})}>\r\n                                Contact\r\n                        </li> */}\r\n                        <li className={`home__router__nav__list__item ${this.state.partRequested === 'services' ? 'active': ''}`}\r\n                            onClick={() => this.setState({ partRequested: 'services'})}>\r\n                                <FormattedMessage id=\"services\" defaultMessage=\"services\"/>\r\n                        </li>\r\n                    </nav>\r\n                    <div className=\"home__router__nav__count\">\r\n                        <IconSvg icon=\"car\"/>\r\n                        <div>{this.props.totalProductsCounter} <FormattedMessage id=\"availableCars\" defaultMessage=\"available cars\"/></div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            {this.state.partRequested === 'inventory' && (\r\n                    <HomeInventoryMemo carsHomeInventory={this.props.carsHomeInventory} history={this.props.history} homeInventoryLimit={this.state.homeInventoryLimit}/>\r\n            )}\r\n\r\n            {this.state.partRequested === 'search' && (\r\n                    <HomeSearch />\r\n            )}\r\n\r\n\r\n            {this.state.partRequested === 'services' && (\r\n                    <HomeService />\r\n            )}\r\n\r\n            {/* {this.state.partRequested === 'contact' && (\r\n                    <HomeContact />\r\n            )} */}\r\n\r\n            {/* <HomeService /> */}\r\n\r\n\r\n            <HomeContact />\r\n            \r\n            <div className=\"home__mostPopSedan\">\r\n                <h1 className=\"home__mostPopSedan__title\">\r\n                    <FormattedMessage id=\"mostPopularSedan\" defaultMessage=\"The most popular sedan\"/>\r\n                </h1>\r\n                <ProductList productsList={this.props.mostPopularSedan}/>\r\n            </div>\r\n            \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        mostPopularSedan: state.product.mostPopularSedan,\r\n        lang: state.parameters.lang,\r\n        currency: state.parameters.currency,\r\n        totalProductsCounter: state.product.totalProductsCounter\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setProductRequestedData: data => dispatch(actions.setProductRequestedData(data)) \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from 'react'\r\nimport './Paginator.css';\r\nimport IconSvg from '../../utilities/svg/svg'\r\n\r\n\r\nclass Paginator extends Component {\r\n    render() {\r\n        const pageNumbers = [];\r\n        for(let i = 1; i <= this.props.lastPage; i++){\r\n            pageNumbers.push(i)\r\n        }\r\n        const pageNumbersButton = pageNumbers.map( i => {\r\n            return (\r\n                <div \r\n                        onClick={this.props.onRequestPageNumber.bind(this, i)}\r\n                        key={i}\r\n                        id={i}\r\n                        className={[\"paginator__control\", \r\n                                this.props.currentPage === i ? 'active' : ' '].join(' ')}>\r\n                    {i}\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"paginator\">\r\n                {this.props.children}\r\n                {this.props.products && this.props.products.length > 0 && (\r\n                   <div className={`paginator__controls ${this.props.currentPage === 1 && this.props.products.length < this.props.itemsPerPage ? 'hide':' '}`}>\r\n                        <div className={`paginator__control\r\n                                    ${this.props.currentPage === 1 ? 'disabled': ''}`}\r\n                                onClick={this.props.onRequestPreviousPage}>\r\n                                <IconSvg icon=\"arrow-left\"/>\r\n                        </div>\r\n                        {pageNumbersButton}\r\n                        <div className={`paginator__control\r\n                                    ${this.props.currentPage === this.props.lastPage ? 'disabled': ''}`}\r\n                                onClick={this.props.onRequestNextPage}>\r\n                                <IconSvg icon=\"arrow-right\"/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                \r\n            \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Paginator;","export const amountFormater = (amount, prevCurrency, nextCurrency, quotes) => {\r\n    let USDCAD = quotes.USDCAD\r\n    let USDEUR = quotes.USDEUR\r\n    let result;\r\n\r\n    if(prevCurrency === 'CAD'){\r\n        if(nextCurrency === 'USD'){\r\n            result = amount / USDCAD\r\n        }\r\n        if(nextCurrency === 'EUR'){\r\n            result = amount / USDCAD * USDEUR\r\n        }\r\n        if(nextCurrency === 'CAD'){\r\n            result = amount \r\n        }\r\n    }\r\n\r\n    if(prevCurrency === 'USD'){\r\n        if(nextCurrency === 'CAD'){\r\n            result = amount * USDCAD\r\n        }\r\n        if(nextCurrency === 'EUR'){\r\n            result = amount * USDEUR\r\n        }\r\n    }\r\n\r\n    if(prevCurrency === 'EUR'){\r\n        if(nextCurrency === 'USD'){\r\n            result = amount / USDEUR\r\n        }\r\n        if(nextCurrency === 'CAD'){\r\n            result = amount / USDEUR * USDCAD\r\n        }\r\n    }\r\n\r\n    return result\r\n}","import React, { Component } from 'react'\r\nimport './Inventory.css';\r\nimport {connect} from 'react-redux'\r\nimport Loader from '../../components/loader/Loader';\r\nimport Controller from './Controller/Controller';\r\nimport queryString from 'query-string';\r\nimport * as actions from '../../store/actions'\r\nimport ProductsList from '../../components/ProductsList/ProductsList';\r\nimport Paginator from '../../components/Paginator/Paginator';\r\nimport { amountFormater } from '../../utilities/amountFormater'\r\n\r\nclass Inventory extends Component {\r\n    state = {\r\n        products: null,\r\n        loading: true,\r\n        query: {\r\n            brand: 'all',\r\n            model: 'all',\r\n            bodyType: 'all',\r\n            page: 1,\r\n            year: {\r\n                value: {\r\n                    min: 2008,\r\n                    max: 2020\r\n                },\r\n                scope: {\r\n                    min: 2008,\r\n                    max: 2020\r\n                }\r\n            },\r\n            price: {\r\n                value: {\r\n                    min: null,\r\n                    max: null\r\n                },\r\n                scope: {\r\n                    min: null,\r\n                    max: null\r\n                },\r\n                init:{\r\n                    min: null,\r\n                    max: null\r\n                }\r\n            },\r\n            sort: 'increasing price'\r\n\r\n        },\r\n        lastPage: null\r\n    }\r\n\r\n\r\n    componentDidMount(){    \r\n        /*** START INIT MIN AND MAX PRICE ***/\r\n        let minPrice = this.props.price.min;\r\n        let maxPrice = this.props.price.max;\r\n        /*** END INIT MIN AND MAX PRICE ***/  \r\n\r\n        let parsedQuery = queryString.parse(this.props.location.search);\r\n\r\n        if(Object.keys(parsedQuery).length > 2){\r\n            this.setState(prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                price : {\r\n                    init: {\r\n                        min: minPrice,\r\n                        max: maxPrice\r\n                    },\r\n                    scope: {\r\n                        min:  minPrice,\r\n                        max: maxPrice\r\n                    },  \r\n                    value: {\r\n                        min: parseInt(parsedQuery.minPrice),\r\n                        max: parseInt(parsedQuery.maxPrice)\r\n                    },\r\n                    fullValue: {\r\n                        min: parseInt(parsedQuery.minPrice),\r\n                        max: parseInt(parsedQuery.maxPrice)\r\n                    }\r\n                },\r\n                year : {\r\n                    ...prevState.query.year,\r\n                    value: {\r\n                        min: parseInt(parsedQuery.minYear),\r\n                        max: parseInt(parsedQuery.maxYear)\r\n                    }\r\n                },\r\n                brand: parsedQuery.brand,\r\n                model: parsedQuery.model,\r\n                sort: parsedQuery.sort,\r\n                bodyType: parsedQuery.bodyType,\r\n                page: parsedQuery.page,                  \r\n            },\r\n            lastPage: Math.ceil(this.props.totalProductsCounter / this.props.itemsPerPage)\r\n        }), () =>  this.fetchProductsHandler())\r\n        } else {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                query: {\r\n                    ...prevState.query,\r\n                    price: {\r\n                        init: {\r\n                            min: minPrice,\r\n                            max: maxPrice\r\n                        },\r\n                        scope: {\r\n                            min:  minPrice,\r\n                            max: maxPrice \r\n                        },  \r\n                        value: {\r\n                            min: minPrice,\r\n                            max: maxPrice \r\n                        },\r\n                        fullValue: {\r\n                            min: minPrice,\r\n                            max: maxPrice \r\n                        },\r\n                    }\r\n                },\r\n                lastPage: Math.ceil(this.props.totalProductsCounter / this.props.itemsPerPage)\r\n            }), () =>  this.fetchProductsHandler())\r\n           \r\n        }  \r\n    }\r\n\r\n\r\n    fetchProductsHandler = () => {\r\n        const {query} = this.state\r\n        let url =  new URL('https://africauto.herokuapp.com/product/client');\r\n        let params;\r\n\r\n        //current value with the corresponding currency\r\n        let minPrice = query.price.value.min;\r\n        let maxPrice = query.price.value.max;\r\n            //store the value in those variables, we'll use them as a search parameters for the url at the ending of fetching products\r\n            let minPriceQuery = minPrice;\r\n            let maxPriceQuery = maxPrice;\r\n            //Convert the full value to CAD because or DB uses CAD as price currency\r\n            minPrice = amountFormater(query.price.fullValue.min, this.props.currency, 'CAD', this.props.quotes);\r\n            maxPrice = amountFormater(query.price.fullValue.max, this.props.currency, 'CAD', this.props.quotes);\r\n        \r\n            if(query){\r\n            params = {\r\n                ...params,\r\n                page: query.page,\r\n                brand: query.brand,\r\n                bodyType: query.bodyType,\r\n                model: query.model,\r\n                minPrice: Math.floor(minPrice),\r\n                maxPrice: Math.ceil(maxPrice),\r\n                minYear: query.year.value.min,\r\n                maxYear: query.year.value.max,\r\n                sort: query.sort.split(' ').length > 0 ? `${query.sort.split(' ')[0]}_${query.sort.split(' ')[1]}` : query.sort\r\n            }\r\n            url.search = new URLSearchParams(params).toString()\r\n        }\r\n\r\n\r\n        fetch( url, {\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          }\r\n        })\r\n        .then( res => {\r\n          if(res.status !== 200 && res.status !== 201){\r\n            throw new Error('Error fetching products')\r\n          }\r\n          return res.json()\r\n        })\r\n        .then(resData => {  \r\n          this.setState({ products: resData.products, loading: false});\r\n          this.props.history.push({\r\n              pathname: `/inventory`,\r\n              search: `bodyType=${query.bodyType}&brand=${query.brand}&currency=${this.props.currency}&lang=${this.props.lang}&maxPrice=${maxPriceQuery}&maxYear=${query.year.value.max}&minPrice=${minPriceQuery}&minYear=${query.year.value.min}&model=${query.model}&page=${query.page}&sort=${query.sort}`\r\n          })\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        let prevCurrency = prevProps.currency;\r\n        let nextCurrency = this.props.currency;\r\n        let stateQuery = this.state.query;   \r\n       if(prevCurrency !== nextCurrency){\r\n            let quotes = this.props.quotes;\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                query: {\r\n                    ...prevState.query,\r\n                    price: {\r\n                        ...prevState.query.price,\r\n                        scope: {\r\n                            min: Math.floor(amountFormater(stateQuery.price.init.min, 'CAD', nextCurrency, quotes) / 1000 ) * 1000,\r\n                            max: Math.ceil(amountFormater(stateQuery.price.init.max, 'CAD', nextCurrency, quotes) / 1000 ) * 1000 ,\r\n                        },\r\n                        value: {\r\n                            min: Math.floor(amountFormater(stateQuery.price.init.min, 'CAD', nextCurrency, quotes)/ 1000 ) * 1000,\r\n                            max: Math.ceil(amountFormater(stateQuery.price.init.max, 'CAD', nextCurrency, quotes) / 1000 ) * 1000,\r\n                        },\r\n                        fullValue: {\r\n                            min: amountFormater(stateQuery.price.init.min, 'CAD', nextCurrency, quotes),\r\n                            max: amountFormater(stateQuery.price.init.max, 'CAD', nextCurrency, quotes)\r\n                        }\r\n                    }\r\n                }\r\n            }), () => this.fetchProductsHandler())\r\n\r\n        }     \r\n    }\r\n\r\n\r\n    selectBodyTypeHandler = bodyType => {\r\n        let data = this.props.brandAndModelsData;\r\n        let stateQuery = this.state.query\r\n        let query\r\n        if(stateQuery.brand !== 'all'){   \r\n            if(Object.keys(data[stateQuery.brand]).includes(bodyType)){\r\n                query = {\r\n                    ...this.state.query,\r\n                    bodyType: bodyType\r\n                } \r\n            } else {\r\n                query = {\r\n                    ...this.state.query,\r\n                    bodyType: bodyType,\r\n                    brand: 'all',\r\n                    model: 'all',\r\n                    page: 1\r\n                } \r\n            }\r\n        } else {\r\n            query = {\r\n                ...this.state.query,\r\n                bodyType: bodyType\r\n            } \r\n        }\r\n\r\n        this.setState({ query}, () => this.fetchProductsHandler(query))\r\n    }\r\n\r\n\r\n    selectBrandHandler = brand => {   \r\n        let query = {\r\n            ...this.state.query,\r\n                brand: brand\r\n            }\r\n        if(brand === 'all'){\r\n            query = {\r\n                ...query,\r\n                model: 'all',\r\n                page: 1\r\n            }\r\n        } \r\n        this.setState({ query }, () => this.fetchProductsHandler(query))\r\n    }\r\n    selectModelHandler = model => {\r\n        this.setState( prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                model: model\r\n            }\r\n        }), () => this.fetchProductsHandler())\r\n    }\r\n    sortHandler = sort => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            query : {\r\n                ...prevState.query,\r\n                sort: sort,\r\n                page: 1\r\n            }         \r\n        }), () => this.fetchProductsHandler())\r\n    }\r\n    changePriceHandler = value => {\r\n        this.setState( prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                page: 1,\r\n                price: {\r\n                    ...prevState.query.price,\r\n                    value: value,\r\n                    fullValue: value\r\n                }\r\n            }\r\n        }))\r\n    }\r\n    changeYearHandler = value => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                page: 1,\r\n                year: {\r\n                    ...prevState.query.year,\r\n                    value: value\r\n                }\r\n            }\r\n        }))\r\n    }\r\n    changeComplete = () => {\r\n        this.fetchProductsHandler()\r\n    }\r\n\r\n    paginationHandler = direction => {\r\n        let query = this.state.query  \r\n        if(direction === 'next' &&  this.props.currentInventoryPage < this.state.lastPage ){ \r\n                query = {\r\n                    ...query,\r\n                    page: this.props.currentInventoryPage + 1\r\n                  }\r\n            this.props.setInventoryCurrentPage(this.props.currentInventoryPage + 1)\r\n            this.setState({ query }, () => this.fetchProductsHandler())\r\n        }\r\n        if(direction === 'previous' && this.props.currentInventoryPage > 1 ){\r\n          query = {\r\n            ...query,\r\n            page: this.props.currentInventoryPage - 1\r\n          }\r\n          this.props.setInventoryCurrentPage(this.props.currentInventoryPage - 1)\r\n          this.setState({ query }, () => this.fetchProductsHandler())\r\n        }\r\n        if(direction !== 'previous' && direction !== 'next'){\r\n          query = {\r\n            ...query,\r\n            page: direction\r\n          }\r\n          this.props.setInventoryCurrentPage(direction)\r\n          this.setState({ query }, () => this.fetchProductsHandler())\r\n        }\r\n\r\n        \r\n      }\r\n\r\n    render() {\r\n        const {products, loading, query} = this.state;\r\n        let inventory = <Loader />\r\n        if(!loading){\r\n            inventory = (\r\n                <div className=\"inventory\">\r\n                        <Controller\r\n                            currency={this.props.currency}\r\n                            query={query}\r\n                            selectBrandHandler={this.selectBrandHandler}\r\n                            selectModelHandler={this.selectModelHandler}\r\n                            selectBodyTypeHandler={this.selectBodyTypeHandler}\r\n                            sortHandler={this.sortHandler}\r\n                            changePriceHandler={this.changePriceHandler}\r\n                            changeYearHandler={this.changeYearHandler}\r\n                            changeComplete={this.changeComplete}\r\n                            data={this.props.brandAndModelsData}\r\n                        /> \r\n\r\n                        <section className=\"inventory__container\">\r\n                            {products && (\r\n                                <Paginator\r\n                                onRequestPreviousPage={this.paginationHandler.bind(this, 'previous')}\r\n                                onRequestNextPage={this.paginationHandler.bind(this, 'next')}\r\n                                lastPage={Math.ceil(this.props.totalProductsCounter / this.props.itemsPerPage)}\r\n                                currentPage={this.props.currentInventoryPage}\r\n                                onRequestPageNumber={this.paginationHandler}\r\n                                products={products}\r\n                                itemsPerPage={this.props.itemsPerPage}\r\n                                >\r\n                                    <ProductsList productsList={products}/>\r\n                                </Paginator>\r\n                                            \r\n                            )}\r\n                        </section>        \r\n                </div>\r\n            )\r\n        }\r\n\r\n        return inventory\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        brandAndModelsData: state.product.brandAndModelsData,\r\n        price: state.product.price,\r\n        totalProductsCounter: state.product.totalProductsCounter,\r\n        currentInventoryPage: state.product.currentInventoryPage,\r\n        itemsPerPage: state.product.itemsPerPage,\r\n        currency: state.parameters.currency,\r\n        quotes: state.parameters.quotes,\r\n        lang: state.parameters.lang,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setInventoryCurrentPage: data => dispatch(actions.setInventoryCurrentPage(data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Inventory)","import React from 'react';\r\nimport './Overview.css';\r\nimport IconSvg from '../../../utilities/svg/svg';\r\n\r\nconst overview = props => {\r\n    let product = props.product\r\n    return (\r\n        <div className=\"overview\">\r\n            <section className=\"overview__section\">\r\n                <div className=\"overview__title\">\r\n                    <IconSvg icon=\"file\"/>\r\n                    <div>General</div>\r\n                </div>\r\n                <ul className=\"overview__list\">\r\n                <li className=\"overview__list__item\">\r\n                    <div className=\"overview__list__item__key\">Brand</div>\r\n                    <div className=\"overview__list__item__value\">{product.general.brand}</div>\r\n                </li>\r\n                <li className=\"overview__list__item\">\r\n                    <div className=\"overview__list__item__key\">Model</div>\r\n                    <div className=\"overview__list__item__value\">{product.general.model}</div>\r\n                </li>\r\n                <li className=\"overview__list__item\">\r\n                    <div className=\"overview__list__item__key\">Body Type</div>\r\n                    <div className=\"overview__list__item__value\">{product.general.bodyType}</div>\r\n                </li>\r\n                <li className=\"overview__list__item\">\r\n                    <div className=\"overview__list__item__key\">Year</div>\r\n                    <div className=\"overview__list__item__value\">{product.general.year}</div>\r\n                </li>\r\n                <li className=\"overview__list__item\">\r\n                    <div className=\"overview__list__item__key\">Kilometer</div>\r\n                    <div className=\"overview__list__item__value\">{product.general.nbKilometers.toLocaleString()} km</div>\r\n                </li>\r\n                <li className=\"overview__list__item\">\r\n                    <div className=\"overview__list__item__key\">Year of release</div>\r\n                    <div className=\"overview__list__item__value\">{product.general.yearOfRelease}</div>\r\n                </li>\r\n                <li className=\"overview__list__item\">\r\n                    <div className=\"overview__list__item__key\">Serial number</div>\r\n                    <div className=\"overview__list__item__value\">{product.general.serialNumber}</div>\r\n                </li>\r\n               \r\n            </ul>\r\n            </section>\r\n            <section className=\"overview__section\">\r\n                <div className=\"overview__title\">\r\n                    <IconSvg icon=\"design\"/>\r\n                    <div>Design</div>\r\n                </div>\r\n                <ul className=\"overview__list\">\r\n                    <li className=\"overview__list__item\">\r\n                        <div className=\"overview__list__item__key\">Interior color</div>\r\n                        <div className=\"overview__list__item__value\">{product.design.intColor}</div>\r\n                    </li>\r\n                    <li className=\"overview__list__item\">\r\n                        <div className=\"overview__list__item__key\">Exterior color</div>\r\n                        <div className=\"overview__list__item__value\">{product.design.extColor}</div>\r\n                    </li>                            \r\n            </ul>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default overview;\r\n","import React from 'react';\r\nimport './Technical.css';\r\nimport IconSvg from '../../../utilities/svg/svg';\r\n\r\n\r\nconst technical = props => {\r\n   let product = props.product;\r\n    return (\r\n        <div className=\"technical\">\r\n\r\n\r\n            <div className=\"technical__section\">\r\n                <div className=\"technical__title\">\r\n                    <IconSvg icon=\"engine\"/>\r\n                    <div>Engine</div>\r\n                </div>\r\n                <ul className=\"technical__section__list\">\r\n                    <li className=\"technical__section__list__item\">\r\n                        <span className=\"technical__section__list__item__detail\">Motor size</span>\r\n                        <span className=\"technical__section__list__item__value\">{product.tech.motorSize}</span>\r\n                    </li>\r\n                    <li className=\"technical__section__list__item\">\r\n                        <span className=\"technical__section__list__item__detail\">Number of cylinders</span>\r\n                        <span className=\"technical__section__list__item__value\">{product.tech.nbCylinders}</span>\r\n                    </li>\r\n                    <li className=\"technical__section__list__item\">\r\n                        <span className=\"technical__section__list__item__detail\">Fuel</span>\r\n                        <span className=\"technical__section__list__item__value\">{product.general.gazol}</span>\r\n                    </li>\r\n                    <li className=\"technical__section__list__item\">\r\n                        <span className=\"technical__section__list__item__detail\">Max speed</span>\r\n                        <span className=\"technical__section__list__item__value\">{product.tech.maxSpeed} km/h</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            {/* <div className=\"technical__section\">\r\n                <div className=\"technical__title\">\r\n                    <IconSvg icon=\"speedometer\"/>\r\n                    <div>Performance</div>\r\n                </div>\r\n                <ul className=\"technical__section__list\">\r\n                    \r\n                    <li className=\"technical__section__list__item\">\r\n                        <span className=\"technical__section__list__item__detail\">0 à 100 km/h</span>\r\n                        <span className=\"technical__section__list__item__value\">10.6 s</span>\r\n                    </li>\r\n                </ul>\r\n            </div> */}\r\n            <div className=\"technical__section\">\r\n                <div className=\"technical__title\">\r\n                    <IconSvg icon=\"gear\"/>\r\n                    <div>Transmission</div>\r\n                </div>\r\n                <ul className=\"technical__section__list\">\r\n                    <li className=\"technical__section__list__item\">\r\n                        <span className=\"technical__section__list__item__detail\">Gear box</span>\r\n                        <span className=\"technical__section__list__item__value\">{product.general.transmissionType}</span>\r\n                    </li>\r\n                    <li className=\"technical__section__list__item\">\r\n                        <span className=\"technical__section__list__item__detail\">Number of gear ratios</span>\r\n                        <span className=\"technical__section__list__item__value\">{product.tech.nbGearRatios}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default technical;","import React from 'react';\r\nimport './Features.css';\r\nimport IconSvg from '../../../utilities/svg/svg'\r\n\r\nconst features = props => {\r\n    let product = props.product\r\n    return (\r\n        <div className=\"features\">\r\n            <ul className=\"features__list\">\r\n                {product.features.map(feature => (\r\n                    <li className=\"features__list__item\">\r\n                        <IconSvg icon=\"arrow-list\"/>\r\n                        {feature}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default features;","import React, { Component } from 'react'\r\nimport './Car.css';\r\nimport { Gallery, GalleryImage } from \"react-gesture-gallery\";\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../store/actions'\r\nimport Overview from './overview/Overview';\r\nimport Technical from './technical/Technical';\r\nimport Features from './features/Features';\r\nimport Loader from '../../components/loader/Loader';\r\nimport ProductsList from '../../components/ProductsList/ProductsList';\r\nimport Amount from '../../components/Amount/Amount';\r\nimport IconSvg from '../../utilities/svg/svg';\r\n\r\nclass Car extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            index: 0,       \r\n            product: null,\r\n            relatedProducts: [],\r\n            initiatlIndex: 0,\r\n            loading: true,\r\n            partRequested: 'overview',\r\n            favorite: false,\r\n        }\r\n        this.escFunction = this.escFunction.bind(this)\r\n    }\r\n  \r\n\r\n    imageSlideHandler = () => {\r\n    let {index, images, initiatlIndex} =  this.state;\r\n    this.inter = setInterval(() => {\r\n                if(index === images.length){\r\n                    this.setState({index: initiatlIndex}, () => {\r\n                        clearInterval(this.inter);\r\n                        this.imageSlideHandler();\r\n                    })\r\n                } else {\r\n                    this.setState({index: index++ })\r\n                }\r\n            }, 2500)\r\n    }\r\n    componentDidMount(){\r\n      //  this.imageSlideHandler()\r\n      this.fetchProductDetailsHandler();\r\n      document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.inter);\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n    changeGalleryImgIndex = url => {\r\n        const { product } = this.state;\r\n        let index = product.imageUrls.indexOf(`${url}`);\r\n        this.setState({ index: index})\r\n    }\r\n\r\n    fetchProductDetailsHandler = data => {\r\n        const {productRequested, userId} = this.props;\r\n        let userIdFetching;\r\n        if(userId === null){\r\n            userIdFetching = 'not connected'\r\n        } else {\r\n            userIdFetching = userId\r\n        }\r\n\r\n        let brand, model, price, prodId, bodyType;\r\n        if(productRequested){\r\n            //If a requested product has been initialized in redux\r\n            brand = productRequested.general.brand;\r\n            model = productRequested.general.model;\r\n            price = productRequested.general.price;\r\n            bodyType = productRequested.general.bodyType;\r\n            prodId = productRequested._id;\r\n\r\n        } else {\r\n            //If not, we use the URL search params (example : when page did mount after reloading)\r\n            const search = this.props.location.search;\r\n            const params = new URLSearchParams(search);\r\n            brand =  params.get('brand');\r\n            model =  params.get('model');\r\n            price =  params.get('price');\r\n            bodyType = params.get('bodyType')\r\n            prodId = this.props.match.params.prodId         \r\n        }\r\n\r\n         // Fetching another product in the same page;\r\n         if(data){\r\n            prodId = data._id\r\n            brand = data.general.brand;\r\n            model = data.general.model;\r\n            price = data.general.price;\r\n            bodyType = data.general.bodyType\r\n        }\r\n      \r\n        let url = `https://africauto.herokuapp.com/product/${prodId}?userId=${userIdFetching}&brand=${brand}&model=${model}&bodyType=${bodyType}&price=${price}`    \r\n        fetch( url, {\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n      })\r\n      .then( res => {\r\n        if(res.status !== 200 && res.status !== 201){\r\n          throw new Error('Error fetching products')\r\n        }\r\n        return res.json()\r\n      })\r\n      .then(resData => {\r\n          let product = resData.product;\r\n          let favorite;\r\n          let userFavorites = this.props.userFavorites;\r\n          let userFavoritesProductsIds = [];\r\n          userFavorites.forEach(product => userFavoritesProductsIds.push(product._id))\r\n          if(userFavoritesProductsIds.includes(product._id)){\r\n              favorite = true\r\n          } else {\r\n              favorite = false\r\n          }         \r\n          window.scrollTo(0, 0)\r\n          this.setState({ \r\n              product: resData.product, \r\n              relatedProducts: resData.relatedProducts,\r\n              favorite: favorite,\r\n              loading: false})\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    }\r\n    favoriteHandler = () => {\r\n        let productId = this.props.productId\r\n        let prodId;\r\n        if(!productId){\r\n            prodId = this.props.match.params.prodId\r\n        } else {\r\n            prodId = productId\r\n        }\r\n        let url;     \r\n        if(this.state.favorite){\r\n            //the current product is already in the favorite list\r\n            url = 'https://africauto.herokuapp.com/user/remove-favorite/' + this.props.userId + `?prodId=${prodId}`;\r\n            this.props.removeUserFavoriteProduct(this.state.product)\r\n        } else {\r\n            url = 'https://africauto.herokuapp.com/user/add-favorite/' + this.props.userId + `?prodId=${prodId}`;\r\n            this.props.addUserFavoriteProduct(this.state.product)\r\n        }       \r\n        let method = 'POST'\r\n        fetch(url, {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n              },\r\n            method: method\r\n        })\r\n        .then( res => {\r\n            if(res.status !== 200 && res.status !== 201){\r\n                throw new Error('Error handling favorites product')\r\n              }\r\n              return res.json()\r\n        })\r\n        .then(resData => {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                favorite: !prevState.favorite\r\n            }))\r\n        })\r\n        .catch( err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    \r\n    requestProductDetails = data => {\r\n        this.fetchProductDetailsHandler(data)\r\n    }\r\n\r\n    showFullGalleryHandler = () => {\r\n        this.props.hideScrollBarHandler()\r\n    }\r\n\r\n    escFunction(event){\r\n        if(event.keyCode === 27 && this.props.hideScrollBar) {\r\n          this.props.showScrollBarHandler()\r\n        }\r\n      }\r\n\r\n    render() {\r\n        let product = this.state.product\r\n        let products = this.state.relatedProducts\r\n        let prod;\r\n\r\n        if(this.state.loading){\r\n                prod = <Loader />\r\n        } else {\r\n            prod = (\r\n                <div className=\"single-car\">         \r\n\r\n                    <div className=\"single-car__header\">\r\n\r\n                        <div className=\"single-car__header__main\">\r\n\r\n                            <div className=\"single-car__header__main__titleContainer\">\r\n                                <h1 className=\"single-car__header__main__title\">{product.general.title} {product.general.year}</h1>                        \r\n                                {this.props.userId && (\r\n                                    <div className={`single-car__header__main__favoriteButton ${this.state.favorite ? 'active': ''}`}\r\n                                        onClick={this.favoriteHandler}\r\n                                    >\r\n                                        {this.state.favorite ? 'Retirer des favoris' : 'Ajouter aux favoris'}   \r\n                                    </div>\r\n                                )} \r\n                            </div>     \r\n\r\n                            <div className={`single-car__header__main__gallery`}>                          \r\n                                <Gallery\r\n                                    index={this.state.index}\r\n                                    onRequestChange={i => this.setState({index: i})}>\r\n\r\n                                    {product.imageUrls.map(img => (\r\n                                    <GalleryImage objectFit=\"cover\" key={img} src={img} \r\n                                                onClick={this.props.hideScrollBarHandler}\r\n                                    />\r\n                                    ))}\r\n                                </Gallery>                                 \r\n                            </div>                       \r\n                            {this.props.hideScrollBar && (\r\n                                <div className=\"single-car__header__main__gallery--fullContainer\">\r\n\r\n                                    <div className=\"single-car__header__main__gallery--fullContainer__closeBtn\"\r\n                                        onClick={this.props.showScrollBarHandler}>\r\n                                        <IconSvg icon=\"close\"/>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"single-car__header__main__gallery--full\">\r\n                                        <Gallery\r\n                                            index={this.state.index}\r\n                                            onRequestChange={i => this.setState({index: i})}>\r\n                                            {product.imageUrls.map(img => (\r\n                                            <GalleryImage objectFit=\"contain\" key={img} src={img} \r\n                                            />\r\n                                            ))}\r\n                                        </Gallery>\r\n                                    </div>\r\n                                </div>                   \r\n                            )}     \r\n                            <div className=\"single-car__header__main__gallery__controller\">\r\n                                {product.imageUrls.map(i => (\r\n                                        <img src={i} alt=\"car\" key={i} className=\"single-car__header__main__gallery__controller__img\"\r\n                                            onClick={ () => this.changeGalleryImgIndex(i)}/>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"single-car__header__info\">\r\n                            <div className=\"single-car__header__info__priceContainer\">\r\n                                <div className=\"single-car__header__info__price\"> <Amount amount={product.general.price} showCurrency/></div>\r\n                            </div>\r\n                            <ul className=\"single-car__header__info__list\">\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">reference</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.supplier.reference}</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">brand</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.brand}</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">body type</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.bodyType}</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">model</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.model}</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">year</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.year}</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">kilometer</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.nbKilometers} km</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">YOR</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.yearOfRelease}</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">fuel</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.gazol}</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">gear box</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.transmissionType}</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">serial number</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.serialNumber}</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">views</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.viewCounter ? product.general.viewCounter : '-' }</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">followers</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.followersCounter ? product.followersCounter : '-'}</div>\r\n                                    </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <section className=\"single-car__details\">                 \r\n                        <ul className=\"single-car__details__nav\">\r\n                            <li className={`single-car__details__nav__item\r\n                                        ${this.state.partRequested === 'overview' ? 'active': ''}`}\r\n                                onClick={() => this.setState({ partRequested: 'overview'})}>\r\n                                Overview\r\n                            </li>\r\n                            <li className={`single-car__details__nav__item\r\n                                        ${this.state.partRequested === 'technical' ? 'active': ''}`}\r\n                                onClick={() => this.setState({ partRequested: 'technical'})}>\r\n                                Technical\r\n                            </li>\r\n                            <li className={`single-car__details__nav__item\r\n                                        ${this.state.partRequested === 'features' ? 'active': ''}`}\r\n                                onClick={() => this.setState({ partRequested: 'features'})}>\r\n                                Features\r\n                            </li>\r\n                        </ul>\r\n                        {this.state.partRequested === 'overview' && <Overview product={product}/>}\r\n\r\n                        {this.state.partRequested === 'technical' && <Technical product={product}/>}\r\n\r\n                        {this.state.partRequested === 'features' && <Features product={product} />}\r\n\r\n        \r\n                    </section>\r\n\r\n                    <section className=\"single-car__related\">\r\n                        <h2 className=\"single-car__section__title\">\r\n                            Similar vehicles\r\n                        </h2>\r\n                        <ProductsList \r\n                            productsList={products}\r\n                            fetchProductDetailsHandler={this.fetchProductDetailsHandler}\r\n                        />\r\n                    </section>\r\n\r\n                    <section className=\"single-car__mostPopular\">\r\n                        <h2 className=\"single-car__section__title\">\r\n                            Most popular\r\n                        </h2>\r\n                        <ProductsList \r\n                            productsList={this.props.mostPopularProducts}\r\n                            fetchProductDetailsHandler={this.fetchProductDetailsHandler}\r\n                        />\r\n                    </section>\r\n            </div>\r\n            )\r\n        }\r\n        return prod\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        productRequested: state.product.productRequested,\r\n        mostPopularProducts: state.product.mostPopularProducts,\r\n        userId: state.auth.userId,\r\n        userFavorites: state.user.favorites\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setProductRequestedData : data =>  dispatch(actions.setProductRequestedData(data)),\r\n        addUserFavoriteProduct: product => dispatch(actions.addUserFavoriteProduct(product)),\r\n        removeUserFavoriteProduct: product => dispatch(actions.removeUserFavoriteProduct(product))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Car);\r\n","import * as actionTypes from './actionsTypes';\r\n\r\nexport const setUserFavoriteProducts = products => {\r\n    return {\r\n        type: actionTypes.SET_USER_FAVORITE_PRODUCTS,\r\n        favorites: products\r\n    }\r\n}\r\n\r\nexport const addUserFavoriteProduct = product => {\r\n    return {\r\n        type: actionTypes.ADD_USER_FAVORITE_PRODUCT,\r\n        product: product\r\n    }\r\n}\r\n\r\nexport const removeUserFavoriteProduct = product => {\r\n    return {\r\n        type: actionTypes.REMOVE_USER_FAVORITE_PRODUCT,\r\n        product: product\r\n    }\r\n}","import React, { Component  } from 'react';\r\nimport Input from '../../../components/formInput/FormInput';\r\nimport Button from '../../../components/button/Button';\r\nimport './Signup.css';\r\nimport { validator } from '../../../utilities/validators';\r\nimport ErrorHandler from '../../../components/errorHandler/ErrorHandler';\r\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl'\r\n\r\n\r\nconst messages = defineMessages({\r\n    firstName: {\r\n        id: \"firstName\",\r\n        defaultMessage: \"first name\"\r\n    },\r\n    lastName: {\r\n        id: \"lastName\",\r\n        defaultMessage: \"last name\"\r\n    },\r\n    confirmPassword: {\r\n        id: \"confirmPassword\",\r\n        defaultMessage: \"confirm password\",\r\n    },\r\n    password: {\r\n        id: \"password\",\r\n        defaultMessage: \"password\"\r\n    }\r\n})\r\n\r\n\r\n\r\nclass Signup extends Component {\r\n\r\n    state = {\r\n        signupForm: {\r\n            firstName: {\r\n                value: '',\r\n                errorLabel: 'A firstname'\r\n            },\r\n            lastName: {\r\n                value: '',\r\n                errorLabel: 'A lastname'\r\n            },\r\n\r\n            email: {\r\n                value: '',\r\n                errorLabel: 'An email'\r\n            },\r\n\r\n            password:{\r\n                value: '',\r\n                errorLabel: 'A password'\r\n            },\r\n\r\n            confirm_password: {\r\n                value: '',\r\n                errorLabel: 'A confirmation password'\r\n            }\r\n        },\r\n        error: null\r\n\r\n        \r\n    }\r\n\r\n    inputChangeHandler = (input, value) => {\r\n        this.setState( prevState => {\r\n            const updatedForm = {\r\n                ...prevState.signupForm,\r\n                [input]: {\r\n                    ...prevState.signupForm[input],\r\n                    value: value\r\n                }\r\n            }\r\n            return {\r\n                signupForm: updatedForm\r\n            }\r\n        })\r\n    }\r\n\r\n    submitHandler = (e, signupFormData) => {  \r\n        e.preventDefault();\r\n        this.props.setLoadingToTrue()\r\n        const errors = validator(\r\n            signupFormData.email,\r\n            signupFormData.password,\r\n            signupFormData.confirm_password,\r\n            signupFormData.firstName,\r\n            signupFormData.lastName\r\n        )\r\n\r\n        if(errors.length > 0){\r\n            this.setState({ error: errors })\r\n            this.props.setLoadingToFalse()\r\n            this.props.setErrors()\r\n            return \r\n        }\r\n        const formData = new FormData();\r\n        formData.append('firstName', signupFormData.firstName.value);\r\n        formData.append('lastName', signupFormData.lastName.value);\r\n        formData.append('email', signupFormData.email.value);\r\n        formData.append('password', signupFormData.password.value)\r\n\r\n        fetch('https://africauto.herokuapp.com/auth/signup', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(Object.fromEntries(formData))\r\n        })\r\n        .then( res => {\r\n            if(res.status === 422){\r\n                throw new Error (\r\n                    \"Make sure the email isn't used yet\"\r\n                )\r\n            }\r\n\r\n            if(res.status !== 200 && res.status !== 201){\r\n                throw new Error ( ' Creating a user failed')\r\n            }\r\n\r\n            return res.json()\r\n        })\r\n        .then(resData => {\r\n            this.props.setLoadingToFalse()\r\n            this.props.requestLoginForm()\r\n        })\r\n        .catch( err => {\r\n            let error = []\r\n            error.push(err.message)\r\n            this.props.setLoadingToFalse()\r\n            this.props.setErrors()\r\n            this.setState({ error: error})\r\n        })\r\n\r\n    }\r\n\r\n    closeErrorHandler = () => {\r\n        this.setState({ error: null});\r\n        this.props.resetErrors()\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {formatMessage } = this.props.intl\r\n\r\n        let form;\r\n\r\n        if(this.state.error ) {\r\n            form = <ErrorHandler error = {this.state.error}\r\n                    onCloseError={this.closeErrorHandler}/>\r\n        } else {\r\n            form = (\r\n            \r\n            <form className= 'auth__form auth__form--signup'\r\n                    onSubmit={e => this.submitHandler(e, this.state.signupForm)} \r\n                    autoComplete=\"off\"\r\n                    noValidate>       \r\n            <ul className=\"auth__input__list\">\r\n\r\n                    <Input type='text'\r\n                            control='input'\r\n                        id='firstName'\r\n                        value={this.state.signupForm['firstName'].value}\r\n                        label='prénom'\r\n                        onChange={this.inputChangeHandler}\r\n                        placeholder={formatMessage(messages.firstName)}\r\n                        border\r\n                        required={true}/>\r\n                    \r\n                    <Input  type='text'\r\n                            control='input'\r\n                            label='nom'\r\n                            id='lastName'\r\n                            value={this.state.signupForm['lastName'].value}\r\n                            onChange={this.inputChangeHandler}\r\n                            placeholder={formatMessage(messages.lastName)}\r\n                            border\r\n                            required={true}/>\r\n\r\n\r\n                        <Input  type='email'\r\n                            control='input'\r\n                            label='email'\r\n                            id='email'\r\n                            value={this.state.signupForm['email'].value}\r\n                            onChange={this.inputChangeHandler}\r\n                            placeholder='email'\r\n                            \r\n                            border\r\n                            required={true}/>\r\n\r\n                    <Input  type='password'\r\n                            control='input'\r\n                            label='mot de passe'\r\n                            id='password'\r\n                            value={this.state.signupForm['password'].value}\r\n                            onChange={this.inputChangeHandler}\r\n                            placeholder={formatMessage(messages.password)}\r\n                            border\r\n                            autoComplete = 'new-password'\r\n                            required={true}/>\r\n                    <Input \r\n                        id='confirm_password'\r\n                        label='confirmer mot de passe'\r\n                        placeholder={formatMessage(messages.confirmPassword)}\r\n                        type='password'\r\n                        control='input' \r\n                        required={true}\r\n                        border\r\n                        value={this.state.signupForm['confirm_password'].value}\r\n                        onChange={this.inputChangeHandler}\r\n                    />\r\n            </ul>\r\n            <div className='signup__options'>\r\n                <div className=\"signup__options--1\">\r\n                    <FormattedMessage id=\"alreadyHaveAnAccount\" defaultMessage=\"already have an account\"/> ?\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"auth__button\">\r\n                <Button color='primary' type='submit'>\r\n                    <FormattedMessage id=\"signUp\" defaultMessage=\"sign up\"/>\r\n                </Button>\r\n            </div>\r\n            \r\n        </form>\r\n            )\r\n        }\r\n        return form\r\n            \r\n    }\r\n}\r\n\r\nexport default injectIntl(Signup) ;\r\n","import React, { Component , Fragment} from 'react'\r\nimport './Auth.css';\r\nimport Login from './login/Login';\r\nimport Signup from './signup/Signup';\r\nimport Loader from '../../components/loader/Loader';\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\n\r\nclass Auth extends Component {\r\n\r\n    state= {\r\n        requestedForm: 'signup',\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n\r\n\r\n\r\n    setRequestedForm = requested => {\r\n        this.setState({ requestedForm: requested})\r\n    }\r\n\r\n    setLoadingToTrue = () => {\r\n        this.setState({ loading: true})\r\n    }\r\n\r\n    setLoadingToFalse = () => {\r\n        this.setState( { loading: false})\r\n    }\r\n\r\n    setErrors = () => {\r\n        this.setState({ error: true})\r\n    }\r\n\r\n    resetErrors = () => {\r\n        this.setState({ error: false})\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    this.state.loading === true && <Loader />\r\n                }\r\n            <section className=\"auth\">\r\n                  \r\n                  <div className=\"auth__container\">\r\n\r\n                        {\r\n                            this.state.error === false && (\r\n                            <div className=\"auth__controller\">\r\n                                <div className={`auth__controller__button \r\n                                                ${this.state.requestedForm === 'signup' ? 'active' : ''}`} \r\n                                    onClick={() => this.setRequestedForm('signup')}>\r\n                                    <FormattedMessage id=\"signUp\" defaultMessage=\"sign up\"/>\r\n                                </div>\r\n                                <div className={`auth__controller__button \r\n                                                ${this.state.requestedForm === 'login' ? 'active' : ''}`}\r\n                                    onClick={() => this.setRequestedForm('login')}>\r\n                                    <FormattedMessage id=\"login\" defaultMessage=\"login\"/>\r\n                                </div>\r\n                            </div>\r\n                            )\r\n                        }\r\n\r\n                      \r\n\r\n\r\n                      {\r\n                          this.state.requestedForm === 'signup' && (\r\n                          <Signup setLoadingToTrue={this.setLoadingToTrue}\r\n                                  setLoadingToFalse = {this.setLoadingToFalse}\r\n                                  setErrors={this.setErrors}\r\n                                  resetErrors={this.resetErrors}\r\n                                  requestLoginForm={() => this.setRequestedForm('login')}/>\r\n                          )\r\n                      }\r\n\r\n                      {\r\n                          this.state.requestedForm === 'login' && (\r\n                              <Login setLoadingToTrue={this.setLoadingToTrue}\r\n                                        setLoadingToFalse = {this.setLoadingToFalse}\r\n                                        setErrors={this.setErrors}\r\n                                        resetErrors={this.resetErrors}/>\r\n                          )\r\n                      }\r\n                      \r\n                      \r\n                  </div>\r\n          </section>\r\n            </Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Auth;\r\n","import React, { Component } from 'react'\r\nimport './Messages.css'\r\nimport { connect } from 'react-redux'\r\nimport openSocket from 'socket.io-client';\r\nimport {timeStampGenerator} from '../../../utilities/timeStampGenerator'\r\nimport MessagesList from './MessagesList/MessagesList'\r\nimport IconSvg from '../../../utilities/svg/svg'\r\nimport AutoSizeTextArea from '../../../components/AutosizeTextArea/AutosizetextArea'\r\nimport * as actions from '../../../store/actions'\r\n\r\nclass Messages extends Component {\r\n\r\n    state = {\r\n        messages: null,\r\n        messageInput: '',\r\n    }\r\n\r\n    componentDidMount(){   \r\n        let url = \"https://africauto.herokuapp.com/messages/\" + this.props.userId;\r\n        let method = \"GET\";\r\n        fetch( url, {\r\n           headers: {\r\n               \"Content-Type\": \"application/json\"\r\n           },\r\n           method: method\r\n        })\r\n        .then( res => {\r\n            if(res.status !== 200){\r\n                throw new Error('Failed to fetch messages')\r\n            }\r\n\r\n            return res.json()\r\n        })\r\n        .then( resData => {\r\n\r\n            console.log(resData);\r\n\r\n            \r\n            if(this.props.newMessage > 0){\r\n                this.props.resetNewMessageNotification()\r\n                this.readNewMessagesHandler()\r\n            }\r\n\r\n            this.setState({ \r\n                messages: resData.messages.messages\r\n            }, () => this.scrollToBottom())\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n        const socket = openSocket('https://africauto.herokuapp.com');\r\n        socket.on('adminSentMessage', data => {  \r\n            if(this.props.userId === data.messageData.userId){\r\n                 this.readNewMessagesHandler();\r\n                 this.addMessages(data.messageData)\r\n            }\r\n         })\r\n    }\r\n\r\n\r\n    readNewMessagesHandler = () => {\r\n        let url = \"https://africauto.herokuapp.com/messages/\" + this.props.userId;\r\n            let timeStamp = timeStampGenerator();\r\n                fetch( url, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        timeStamp: timeStamp,\r\n                        userName: this.props.userName.split(' ')[0]\r\n                    })\r\n                })\r\n                .then( res => {\r\n                    if(res.status !== 200){\r\n                        throw new Error('Failed to fetch messages')\r\n                    }\r\n                    return res.json()\r\n                })\r\n                .then( resData => {\r\n                    console.log('resdata', resData)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                }) \r\n    }\r\n\r\n    addMessages = message => {\r\n        let newMessages = [...this.state.messages, message]\r\n        this.setState({ messages: newMessages}, () => this.scrollToBottom())\r\n    }\r\n\r\n    messageChangeHandler = value => {\r\n       this.setState({ messageInput: value})\r\n    }\r\n\r\n    sendMessageHandler = () => {\r\n        if(this.state.messageInput !== ''){\r\n            let timeStamp = timeStampGenerator();\r\n            let url = \"https://africauto.herokuapp.com/messages/user/\" + this.props.userId;\r\n            let method = \"POST\";\r\n    \r\n            fetch(url, {\r\n                method: method,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    from: this.props.userName.split(' ')[0],\r\n                    message: this.state.messageInput,\r\n                    timeStamp: timeStamp\r\n                })\r\n            })\r\n            .then( res => {\r\n                return res.json()\r\n            })\r\n            .then( resData => {\r\n                this.addMessages(resData.data);\r\n                this.setState({ messageInput: ''}, () => this.scrollToBottom());\r\n            })\r\n            .catch( err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n        \r\n    } \r\n\r\n    scrollToBottom() {\r\n        this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\r\n      }\r\n\r\n\r\n    render() {\r\n        const {messages, messageInput} = this.state\r\n        let messagesList;\r\n        if(messages && messages.length > 0){\r\n            messagesList = (\r\n                <MessagesList messages={messages}/>\r\n            ) \r\n        } else {\r\n            messagesList = (\r\n                <div className=\"messagesContainer__body__start\">Start conversation</div>\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"messages\">\r\n                <div className=\"messages__body\">\r\n                        {messagesList}\r\n                        <div ref={el => { this.messagesEnd = el; }}></div>\r\n                </div>\r\n                <div className=\"messages__sender\"> \r\n                    <div className=\"messages__sender__textareaContainer\">\r\n                    <AutoSizeTextArea \r\n                        value={messageInput}\r\n                        placeholder='message'\r\n                        onChange={this.messageChangeHandler}\r\n                        className= \"messages__sender__textarea\"\r\n                    />\r\n                    <IconSvg icon='send'\r\n                        onClick={this.sendMessageHandler}\r\n                        customClass='messages__sender__sender-btn'\r\n                    />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.auth.userId,\r\n        userName: state.auth.userName,\r\n        newMessage: state.notification.newMessage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addNewMessageNotification: data =>  dispatch(actions.addNewMessageNotification(data)),\r\n        resetNewMessageNotification: () => dispatch(actions.resetNewMessageNotification())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages)\r\n","import React, { Component } from 'react'\r\nimport './Account.css';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions'\r\nimport Messages from './Messages/Messages'\r\nimport IconSvg from '../../utilities/svg/svg'\r\nimport ProductsList from '../../components/ProductsList/ProductsList'\r\nimport { Route, Switch, withRouter, NavLink } from 'react-router-dom'\r\n\r\nclass Account extends Component {\r\n    state = {\r\n        loading: true,\r\n        scrolling: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.location.pathname !== \"/my-account/messages\"){\r\n            this.setState({ scrolling: true })\r\n        } else {\r\n            this.setState({ scrolling: false })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.location.pathname !== this.props.location.pathname) {\r\n            if(this.props.location.pathname === \"/my-account/messages\"){\r\n                this.setState({ scrolling: false})\r\n            } else {\r\n                this.setState({ scrolling: true})\r\n            }\r\n        }\r\n    }\r\n    requestProductDetails = data => {\r\n        this.props.setProductRequestedData(data)\r\n        this.props.history.push(`/car/${data.productId}`)\r\n    }\r\n    \r\n    render() {\r\n        let products = this.props.favorites;\r\n        const { scrolling } = this.state \r\n\r\n        return (\r\n            <div className=\"account\">       \r\n                <div className=\"account__sidebar\">\r\n                        <ul className=\"account__sidebar__list\">\r\n                            <NavLink to=\"/my-account/messages\" className=\"account__sidebar__list__item\">\r\n                                    <IconSvg icon=\"email\"/>\r\n                                   <span>Messages</span> \r\n                            </NavLink>\r\n\r\n                            <NavLink to=\"/my-account/favorites\" className=\"account__sidebar__list__item\">\r\n                                    <IconSvg icon=\"heart\"/>\r\n                                   <span>Favorites</span> \r\n                            </NavLink>\r\n                        </ul>\r\n                        <div className=\"account__sidebar__logout\"\r\n                             onClick={this.props.logoutHandler}\r\n                        >\r\n                            <span>Logout</span>\r\n                        </div>\r\n                </div>             \r\n                <div className={`account__currentSection ${scrolling ? \"scroll\" : ''}`}>\r\n                    <Switch>\r\n                        <Route path=\"/my-account/favorites\"  render={(props) => <ProductsList {...props}  productsList={products}/>} />\r\n                        <Route path='/my-account/messages' component={Messages} />\r\n                    </Switch>\r\n                </div>        \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.auth.userId,\r\n        favorites: state.user.favorites\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setProductRequestedData : data =>  dispatch(actions.setProductRequestedData(data)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Account))\r\n","import React, { Component } from 'react'\r\nimport './Services.css'\r\nimport IconSvg from '../../utilities/svg/svg'\r\nimport { connect } from 'react-redux'\r\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl'\r\n\r\n\r\nconst messages = defineMessages({\r\n    purchase: {\r\n        id: \"purchase\",\r\n        defaultMessage: \"purchase\"\r\n    },\r\n    vehicle_paper: {\r\n        id: \"vehicle_paper\",\r\n        defaultMessage: \"vehicle_paper\"\r\n    },\r\n    customs_clearance: {\r\n        id: \"customs_clearance\",\r\n        defaultMessage: \"customs_clearance\"\r\n    },\r\n    insurance: {\r\n        id: \"insurance\",\r\n        defaultMessage: \"insurance\"\r\n    },\r\n\r\n})\r\n\r\nclass Services extends Component {\r\n\r\n    componentDidMount(){\r\n        window.scrollTo(0 , 0)\r\n        // this.props.history.push({\r\n        //     pathname: this.props.history.pathname,\r\n        //     search: `currency=${this.props.currency}&lang=${this.props.lang}`\r\n        //   })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {formatMessage } = this.props.intl\r\n \r\n    let data = {\r\n        [formatMessage(messages.purchase)] : [\r\n            'basic', 'conventionnel', 'tranquility', 'clés en main'\r\n        ],\r\n        [formatMessage(messages.vehicle_paper)]: [\r\n            'basic', 'conventionnel', 'tranquility', 'clés en main'\r\n        ],\r\n        transport: [\r\n            'conventionnel', 'tranquility', 'clés en main'\r\n        ],\r\n        [formatMessage(messages.customs_clearance)]: [\r\n            'conventionnel', 'tranquility', 'clés en main'\r\n        ],\r\n        [formatMessage(messages.insurance)] : [\r\n           'tranquility', 'clés en main'\r\n        ],\r\n    }\r\n\r\n    let header = ['basic', 'conventionnel', 'tranquility', 'clés en main'];\r\n\r\n\r\n        return (\r\n            <div className=\"services\">\r\n            <header className=\"services__header\">\r\n                <h1 className=\"services__header__title\"><FormattedMessage id=\"yourNextCarHere\" defaultMessage=\"your next car is here\"/></h1>\r\n                <div className=\"services__header__text\">\r\n                    <FormattedMessage id=\"serviceText\" defaultMessage=\"Wherever you are, we have what you need. We offer 4 different types of service depending on the place of delivery. We also give our customers the possibility to choose a customized package. Therefore, we invite you to contact one of our agents.\"/>\r\n                </div>\r\n            </header>\r\n\r\n                <table className=\"services__table\">\r\n                    <thead className=\"services__table__header\">\r\n                        <tr>\r\n                            <th>&nbsp;</th>\r\n                            {header.map( (forfait, index) => (\r\n                                <th key={index}>{forfait}</th>\r\n                            ))}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"services__table__data\">\r\n                    {Object.keys(data).map( (option, index) => (\r\n                        <tr key={index} className=\"services__table__data__row\">\r\n                            <td>\r\n                                {option.split('_').length > 1 ? `${option.split('_')[0]}     ${option.split('_')[1]} ${option.split('_')[2] !== undefined ? option.split('_')[2] : \"\" }    `: option}\r\n                            </td>\r\n                            {header.map( (forfait, index) => {\r\n                                if(data[option].includes(forfait)){\r\n                                    return (\r\n                                    <td className=\"services__table__data__row__checked\" key={index}>\r\n                                        <IconSvg icon=\"checkmark\"/>\r\n                                    </td>\r\n                                    )\r\n                                } else return(\r\n                                    <td className=\"services__table__data__row__unchecked\" key={index}>\r\n                                        <IconSvg icon=\"cross\"/>\r\n                                    </td>\r\n                                    )\r\n                            })}\r\n                        </tr>                   \r\n                    ))}            \r\n                </tbody>\r\n                </table>\r\n\r\n            \r\n            \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.parameters.lang,\r\n        currency: state.parameters.currency\r\n    }\r\n}\r\n\r\nexport default  connect(mapStateToProps)(injectIntl(Services))","import React, { Component, Fragment } from 'react';\r\nimport './App.css';\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport { connect} from 'react-redux';\r\nimport * as actions from './store/actions'\r\nimport openSocket from 'socket.io-client';\r\n// import { Spring } from 'react-spring/renderprops'\r\nimport notification from './assets/eventually.mp3'\r\nimport { IntlProvider} from 'react-intl';\r\nimport messages from './messages'\r\nimport queryString from 'query-string'\r\n\r\n/*------------COMPONENTS---------------------*/\r\nimport Navtop from './components/navigation/navtop/Navtop';\r\nimport Navbar from './components/navigation/navbar/Navbar';\r\nimport MobileNav from './components/navigation/mobileNav/MobileNav'\r\nimport Footer from './components/footer/Footer'\r\nimport Chat from './components/chat/Chat';\r\nimport Loader from './components/loader/Loader'\r\n\r\n\r\n/*------------PAGES---------------------------*/\r\nimport Home from './pages/home/Home';\r\nimport Inventory from './pages/inventory/Inventory';\r\nimport SingleCar from './pages/car/Car';\r\nimport Auth from './pages/auth/Auth';\r\nimport Account from './pages/account/Account';\r\nimport Services from './pages/Services/Services'\r\n\r\n/*-----------UTILITIES-----------*/\r\nimport { timeStampGenerator } from './utilities/timeStampGenerator';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    carsHomeIntro : [],\r\n    carsHomeInventory : [],\r\n    loading: false,\r\n    hideScrollBar: false,\r\n    hideFooter: false,\r\n    scrolled: false,\r\n    scrollDirection: 'bottom',\r\n\r\n    lang: \"english\"\r\n  }\r\n\r\n  componentDidMount(){\r\n    window.addEventListener('scroll', this.listenToScroll)\r\n    this.scrollPos = 0;\r\n    this.scrollDirection = 'bottom'\r\n\r\n    // let url = 'http://api.currencylayer.com/live?access_key=393f7172bfdb3cbdf353b2fd78462005&currencies=CAD,EUR'\r\n    // let url = 'http://api.currencylayer.com/list?access_key=393f7172bfdb3cbdf353b2fd78462005'\r\n   \r\n    // fetch(url)\r\n    // .then(res => {\r\n    //   return res.json()\r\n      \r\n    // })\r\n    // .then( resData => {\r\n    //   console.log('curr', resData)\r\n    // })\r\n    // .catch(err => {\r\n    //   console.log(err)\r\n    // })\r\n\r\n    // console.log('histor', this.props.history, this.props.location);\r\n\r\n    // this.props.history.push({\r\n    //   pathname: this.props.history.pathname,\r\n    //   search: `lang=${this.props.lang}&currency=${this.props.currency}`\r\n    // })\r\n\r\n\r\n    let parsedQuery = queryString.parse(this.props.location.search);\r\n\r\n    \r\n\r\n    if(Object.keys(parsedQuery).length > 0){\r\n      this.props.setLang(parsedQuery.lang)\r\n      this.props.setCurrency(parsedQuery.currency)\r\n    } else {\r\n      this.props.history.push({\r\n            pathname: this.props.history.pathname,\r\n            search: `currency=${this.props.currency}&lang=${this.props.lang}`\r\n          })\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n    this.setState({ loading: true});\r\n    this.initAppDataHandler();\r\n    const token = localStorage.getItem('woto-token');\r\n    const expiryDate = localStorage.getItem('woto-expiryDate');\r\n    const userId = localStorage.getItem('woto-userId');\r\n    const userName= localStorage.getItem('woto-userName');\r\n\r\n\r\n    if(!token || !expiryDate){\r\n        console.log('NO TOKEN')\r\n        return\r\n    }\r\n    if(new Date(expiryDate) <= new Date()){\r\n      console.log('Token not valid anymore')\r\n      this.props.setLoginStateToFalse()\r\n      return \r\n    }\r\n\r\n    if(this.props.location.pathname.includes('/my-account')){\r\n      this.setState({ hideFooter: true})\r\n    }\r\n    let loginData = {\r\n        isAuth: true,\r\n        token: token,\r\n        userId: userId,\r\n        userName: userName\r\n    }\r\n    this.props.setLoginStateToTrue(loginData);\r\n    this.initUserFavoriteProducts(loginData.userId);\r\n    let timeStamp = timeStampGenerator();\r\n    this.startConnection(userId, timeStamp);\r\n  }\r\n\r\n  listenToScroll = () => {\r\n    const winScroll = document.body.scrollTop || document.documentElement.scrollTop\r\n    const isTop = winScroll < 50;\r\n    if(!isTop && this.scrollPos > winScroll){\r\n      this.scrollPos = winScroll\r\n      this.setState({ scrolled: true, scrollDirection: \"top\" })\r\n    } \r\n    if(!isTop && this.scrollPos < winScroll){\r\n      this.scrollPos = winScroll\r\n      this.setState({ scrolled: true, scrollDirection: \"bottom\" })\r\n    } \r\n    if(isTop){\r\n      this.scrollPos = winScroll\r\n      this.setState({ scrolled: false })\r\n    }\r\n  }\r\n\r\n  initAppDataHandler = () => {\r\n      let url = 'https://africauto.herokuapp.com/product/init';\r\n      let method = 'GET';\r\n      fetch( url, {\r\n        method: method,\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n      })\r\n      .then( res => {\r\n        if(res.status !== 200 && res.status !== 201){\r\n          throw new Error('Error fetching products')\r\n        }\r\n        return res.json()\r\n      })\r\n      .then(resData => {\r\n        this.props.initAppData(resData)\r\n        this.setState({ \r\n          carsHomeIntro: resData.publicityProducts, \r\n          carsHomeInventory: resData.homeInventoryProducts,\r\n          loading: false\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })     \r\n  }\r\n\r\n  componentDidUpdate(prevProps){  \r\n     if( prevProps.location.pathname !== this.props.location.pathname){\r\n\r\n\r\n       if(this.props.location.pathname.includes('/my-account')){ \r\n        this.setState({ hideFooter: true})\r\n       } else {\r\n        this.setState({ hideFooter: false})   \r\n       }\r\n\r\n\r\n       if(!this.props.location.pathname.includes('/inventory')){\r\n            this.props.history.push({\r\n                  pathname: this.props.history.pathname,\r\n                  search: `currency=${this.props.currency}&lang=${this.props.lang}`\r\n                })\r\n          }\r\n     }  \r\n     \r\n     if(prevProps.lang !== this.props.lang){\r\n       this.setState({ lang: this.props.lang})\r\n     }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.listenToScroll)\r\n  }\r\n\r\n  startConnection = (userId, timeStamp) => {\r\n        fetch('https://africauto.herokuapp.com/auth/start-connection',{\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            userId: userId,\r\n            timeStamp: timeStamp\r\n          })\r\n        })\r\n        .then(res => {\r\n          if(res.status === 401){\r\n            throw new Error('UserId not valid')\r\n          }\r\n\r\n          if(res.status !== 200 && res.status !== 201){\r\n            throw new Error('Could not update last connection')\r\n          }\r\n          return res.json()\r\n        })\r\n        .then( resData => {\r\n          let socket = openSocket('https://africauto.herokuapp.com/', {query: `data=${userId} ${resData.connectionId}`});\r\n          socket.connect();\r\n          this.props.setConnectionId(resData.connectionId)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n  }\r\n\r\n  logoutHandler = () => {\r\n      this.props.setLoginStateToFalse();\r\n      let timeStamp = timeStampGenerator()\r\n      const userId = localStorage.getItem('woto-userId');\r\n      const connectionId = this.props.connectionId;\r\n      this.endConnection(userId, connectionId, timeStamp, true);\r\n      this.props.history.push('/')\r\n  }\r\n\r\n  endConnection = (userId, connectionId, timeStamp, logout) => {\r\n      fetch('https://africauto.herokuapp.com/auth/end-connection',{\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          userId: userId,\r\n          connectionId: connectionId,\r\n          timeStamp: timeStamp\r\n        })\r\n      })\r\n      .then(res => {\r\n        if(res.status === 401){\r\n          throw new Error('UserId not valid')\r\n        }\r\n        if(res.status !== 200 && res.status !== 201){\r\n          throw new Error('Could not update last connection')\r\n        }\r\n        return\r\n      })\r\n      .then(() => {\r\n          localStorage.removeItem('woto-connectionId');\r\n\r\n          if(logout === true){\r\n            localStorage.removeItem('woto-token');\r\n            localStorage.removeItem('woto-expiryDate');\r\n            localStorage.removeItem('woto-userId');\r\n            localStorage.removeItem('woto-userName');\r\n          }\r\n          \r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  initUserFavoriteProducts = userId => {\r\n    let url = 'https://africauto.herokuapp.com/user/favorites/' + userId;\r\n    fetch( url, {\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      }\r\n    })\r\n    .then( res => {\r\n      if(res.status !== 200 && res.status !== 201){\r\n        throw new Error('Error fetching products')\r\n      }\r\n      return res.json()\r\n    })\r\n    .then(resData => {\r\n     this.props.setUserFavoriteProducts(resData.favorites)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n  showScrollBarHandler = () => {\r\n    this.setState({ hideScrollBar: false}, () => document.body.className = \"\")\r\n  }\r\n  hideScrollBarHandler = () => {\r\n    this.setState({ hideScrollBar: true}, () => document.body.className=\"hideScrollBar\")\r\n  }\r\n\r\n  playNotificationSound = () => {\r\n    this.player.play();\r\n  }\r\n  \r\n  render() {\r\n    const { loading , hideScrollBar, hideFooter,scrolled, scrollDirection, lang} = this.state\r\n    let app;\r\n    let windowWidth = window.innerWidth;\r\n\r\n    let langManager = {\r\n      french: \"fr\",\r\n      english: \"en\"\r\n    }\r\n\r\n\r\n    if(loading === true || !this.props.brandAndModelsData){\r\n      app = <Loader />\r\n\r\n    } else {\r\n      app = (\r\n        // <Spring\r\n        //   from={{marginTop: 1000}}\r\n        //   to = {{ marginTop: 0}}\r\n        //   config={{delay: 500}}>\r\n        //   {props => (\r\n        //       <div style={props}>\r\n\r\n\r\n                <div className={`app`}>\r\n                    {windowWidth > 850 && (\r\n                        <Fragment>\r\n                          <Navtop scrolled={scrolled} scrollDirection={scrollDirection}/>\r\n                          <Navbar scrolled={scrolled} scrollDirection={scrollDirection}/>\r\n                        </Fragment>\r\n                    )}\r\n                    {windowWidth <= 850 && (\r\n                      <MobileNav logoutHandler={this.logoutHandler}/>\r\n                    )}\r\n                    <audio src={notification} ref={ref => this.player = ref}  />\r\n                    {windowWidth > 600 && this.props.auth && this.props.token && this.props.userId && <Chat playNotificationSound={this.playNotificationSound}/>}\r\n                    <Switch>\r\n                    <Route exact path={`/`} render={(props) => <Home {...props} carsHomeIntro={this.state.carsHomeIntro} carsHomeInventory={this.state.carsHomeInventory}/>}/>\r\n                        <Route path={'/inventory/:prodId'} render={(props) => <SingleCar {...props} hideScrollBar={hideScrollBar} showScrollBarHandler={this.showScrollBarHandler} hideScrollBarHandler={this.hideScrollBarHandler} /> }/>\r\n                        <Route path={`/inventory`} component={Inventory}/>\r\n                        <Route path={'/auth'} component={Auth} />\r\n                        <Route path={'/my-account'} render={(props) => <Account {...props} logoutHandler={this.logoutHandler} /> }/>\r\n                        <Route path={'/services'} component={Services} /> \r\n                    </Switch>\r\n                    \r\n                    <Footer hide={hideFooter}/>      \r\n                </div>\r\n\r\n\r\n\r\n        //       </div>\r\n        //     )\r\n        //   }\r\n        // </Spring>\r\n      )\r\n    }   \r\n    return (\r\n      <IntlProvider locale={langManager[lang]} \r\n              messages={messages[langManager[lang]]}\r\n      >\r\n        {app}\r\n      </IntlProvider>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth.auth,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    connectionId: state.auth.connectionId,\r\n    brandAndModelsData: state.product.brandAndModelsData,\r\n    lang: state.parameters.lang,\r\n    currency: state.parameters.currency\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setLoginStateToTrue: (data) => dispatch(actions.setLoginStateToTrue(data)),\r\n    setLoginStateToFalse: () => dispatch(actions.setLoginStateToFalse()),\r\n    setConnectionId: connectionId => dispatch(actions.setConnectionId(connectionId)),\r\n    initAppData: data => dispatch(actions.initAppData(data)),\r\n    setUserFavoriteProducts: products => dispatch(actions.setUserFavoriteProducts(products)),\r\n    setLang: lang => dispatch(actions.setLang(lang)),\r\n    setCurrency: currency => dispatch(actions.setCurrency(currency)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const updatedObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import * as actionTypes from '../actions/actionsTypes';\r\nimport { updatedObject} from '../utility';\r\n\r\n\r\nconst initialState = {\r\n    auth: false,\r\n    token: null,\r\n    userId: null,\r\n    connectionId: null,\r\n    userName: null\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst loginSucced = (state, action) => {\r\n    return updatedObject( state, {\r\n        auth: true,\r\n        token: action.token,\r\n        userId: action.userId,\r\n        connectionId: action.connectionId,\r\n        userName : action.userName\r\n    })\r\n}\r\n\r\nconst setLoginStateToTrue = (state, action) => {\r\n    return updatedObject(state, {\r\n        auth: action.isAuth,\r\n        token: action.token,\r\n        userId: action.userId,\r\n        userName : action.userName\r\n    })\r\n}\r\n\r\nconst setLoginStateToFalse = state => {\r\n    return updatedObject(state, {\r\n        auth: false,\r\n        token: null,\r\n        userId:  null,\r\n        userName : null,\r\n        connectionId: null\r\n    })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case actionTypes.LOGIN_SUCCEDED: return loginSucced(state, action);\r\n        case actionTypes.LOGIN_FAILED: return;\r\n        case actionTypes.SET_LOGIN_STATE_TO_TRUE: return setLoginStateToTrue(state, action);\r\n        case actionTypes.SET_LOGIN_STATE_TO_FALSE: return setLoginStateToFalse(state);\r\n        case actionTypes.SET_CONNECTION_ID: return updatedObject(state, {connectionId: action.connectionId})\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionsTypes';\r\nimport { updatedObject} from '../utility';\r\n\r\n\r\nconst initialState = {\r\n    brandAndModelsData: null,\r\n    mostPopularProducts: null,\r\n    price: null,\r\n    mostPopularSedan: null,\r\n    productRequested: null,\r\n    bodyTypeList: null,\r\n    totalProductsCounter: null,\r\n    currentInventoryPage: 1,\r\n    itemsPerPage: 20\r\n}\r\n\r\nconst initAppData = (state, action) => {\r\n    return updatedObject(state, {\r\n        brandAndModelsData: action.data.brandAndModelsData,\r\n        mostPopularProducts: action.data.mostPopularProducts,\r\n        price: action.data.price,\r\n        mostPopularSedan: action.data.mostPopularSedan,\r\n        bodyTypeList: action.data.bodyTypeList,\r\n        totalProductsCounter: action.data.totalProductsCounter\r\n    })\r\n}\r\n\r\n\r\n\r\nconst reducer = ( state = initialState, action) => {\r\n    switch (action.type){\r\n        case actionTypes.SET_PRODUCT_REQUESTED_DATA : return updatedObject(state, { productRequested: action.data});\r\n        case actionTypes.INIT_APP_DATA: return initAppData(state, action);\r\n        case actionTypes.SET_INVENTORY_CURRENT_PAGE: return updatedObject(state, { currentInventoryPage: action.currentPage});\r\n        case actionTypes.SET_PRICE: return updatedObject(state, {price: action.data})\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionsTypes';\r\nimport { updatedObject } from '../utility'\r\n\r\n\r\nconst initialState = {\r\n    favorites: []\r\n}\r\n\r\n\r\nconst addFavoriteProduct = (state, action) => {\r\n    return updatedObject(state, {\r\n        favorites: [...state.favorites, action.product]\r\n    })\r\n}\r\n\r\nconst removeFavoriteProduct = (state, action) => {\r\n    let newFavoritesData = state.favorites.filter( i => i._id !== action.product._id)\r\n    return updatedObject(state, {\r\n        favorites: newFavoritesData\r\n    })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case actionTypes.SET_USER_FAVORITE_PRODUCTS: return updatedObject(state, {favorites: action.favorites});\r\n        case actionTypes.ADD_USER_FAVORITE_PRODUCT: return addFavoriteProduct(state, action);\r\n        case actionTypes.REMOVE_USER_FAVORITE_PRODUCT: return removeFavoriteProduct(state, action)\r\n        \r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionsTypes';\r\nimport { updatedObject} from '../utility';\r\n\r\nconst initialState = {\r\n    lang: 'english',\r\n    currency: 'CAD',\r\n    quotes: {\r\n\r\n        USDCAD : 1.32357,\r\n        USDEUR : 0.92693,\r\n\r\n        // USDCAD : 1.32,\r\n        // USDEUR : 0.92,\r\n        \r\n        EURUSD: 1.0788,  // 1 EUR = 1.07 USD\r\n        EURCAD: 1.4289,\r\n\r\n        CADUSD: 0.7555,\r\n        CADEUR: 0.6998,\r\n\r\n\r\n        \r\n\r\n\r\n      \r\n        \r\n    }\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case actionTypes.SET_LANG : return updatedObject(state, { lang: action.lang});\r\n        case actionTypes.SET_CURRENCY : return updatedObject(state, { currency: action.currency});\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionsTypes';\r\nimport { updatedObject} from '../utility';\r\n\r\nconst initialState = {\r\n   newMessage: 0\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case actionTypes.ADD_A_NEW_MESSAGE_NOTIFICATION: return updatedObject(state, {newMessage: state.newMessage + action.data});\r\n        case actionTypes.RESET_NEW_MESSAGE_NOTIFICATION: return updatedObject(state, {newMessage: 0 });\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter} from 'react-router-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore , applyMiddleware, compose, combineReducers} from 'redux';\r\n\r\nimport authReducer from './store/reducers/auth';\r\nimport productReducer from './store/reducers/product';\r\nimport userReducer from './store/reducers/user';\r\nimport parametersReducer from './store/reducers/parameters';\r\nimport notificationReducer from './store/reducers/notification'\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; \r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    product: productReducer,\r\n    user: userReducer,\r\n    parameters: parametersReducer,\r\n    notification: notificationReducer\r\n})\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n   composeEnhancers(\r\n       applyMiddleware(thunk)\r\n));\r\n\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <Provider store={store}>\r\n        <HashRouter >\r\n            <App />\r\n        </HashRouter >\r\n    </Provider>\r\n    \r\n, \r\n\r\ndocument.getElementById('root'));\r\n\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/eventually.b5e7acad.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sprite.be8a817b.svg\";"],"sourceRoot":""}