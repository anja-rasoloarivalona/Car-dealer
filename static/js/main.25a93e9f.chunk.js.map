{"version":3,"sources":["store/actions/product.js","store/actions/actionsTypes.js","store/actions/parameters.js","store/actions/notification.js","utilities/svg/svg.js","components/DropDownList/DropDownList.js","components/navigation/navtop/Navtop.js","components/navigation/navbar/Navbar.js","components/navigation/mobileNav/MobileNav.js","components/footer/Footer.js","utilities/timeStampGenerator.js","components/AutosizeTextArea/AutosizetextArea.js","pages/account/Messages/MessagesList/MessagesList.js","components/chat/Chat.js","components/loader/Loader.js","components/button/Button.js","components/Amount/Amount.js","components/ProductCard/ProductCard.js","components/ProductsList/ProductsList.js","pages/home/homeInventory/HomeInventory.js","pages/inventory/Controller/Controller.js","pages/home/homeSearch/HomeSearch.js","pages/home/homeService/HomeService.js","components/formInput/FormInput.js","utilities/validators.js","components/backdrop/Backdrop.js","components/modal/Modal.js","components/errorHandler/ErrorHandler.js","pages/auth/login/Login.js","store/actions/auth.js","pages/home/HomeContact/HomeContact.js","pages/home/Home.js","components/Paginator/Paginator.js","utilities/amountFormater.js","pages/inventory/Inventory.js","pages/car/overview/Overview.js","pages/car/technical/Technical.js","pages/car/features/Features.js","pages/car/Car.js","store/actions/user.js","pages/auth/signup/Signup.js","pages/auth/Auth.js","pages/account/Messages/Messages.js","pages/account/Account.js","pages/Services/Services.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","store/reducers/product.js","store/reducers/user.js","store/reducers/parameters.js","store/reducers/notification.js","index.js","assets/eventually.mp3","assets/sprite.svg"],"names":["setProductRequestedData","data","type","setLang","lang","setCurrency","currency","addNewMessageNotification","svg","props","viewBox","onClick","className","icon","size","customClass","xmlns","xmlnsXlink","xlinkHref","sprite","DropDownList","state","showList","toggleList","setState","prevState","handleClick","e","target","contains","document","addEventListener","this","removeEventListener","list","ref","el","value","map","item","text","key","selectItemHandler","Component","connect","parameters","price","product","dispatch","actions","setPrice","withRouter","history","push","pathname","search","isAuth","auth","userName","scrolled","exact","to","split","slice","MobileNav","showNavList","showLogout","toggleNavList","toggleShowLogout","window","innerWidth","logoutHandler","Footer","susbscribed","subscribeInput","changeInputHandler","subscribeHandler","setCurrencyHandler","scrollTo","hide","href","placeholder","onChange","timeStampGenerator","realDay","date","Date","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minutes","getMinutes","seconds","getSeconds","TextArea","textarea","focus","autosize","style","maxHeight","minHeight","resize","padding","boxSizing","fontSize","c","rows","MessagesContainerList","chatMessageGap","currentSenderType","messages","displayedDate","timeStamp","shortDate","senderType","message","index","array","currentDate","length","_id","Chat","messageInput","showChat","name","readNewMessagesHandler","url","userId","fetch","headers","method","body","JSON","stringify","then","res","status","Error","json","resData","console","log","catch","err","sendMessageHandler","trim","from","addMessages","alert","newMessages","scrollToBottom","messageChangeHandler","toggleShowChat","unreadMessageCounter","forEach","i","read","newMessage","resetNewMessageNotification","openSocket","on","messageData","playNotificationSound","messagesEnd","scrollIntoView","behavior","messagesList","notification","loader","button","link","color","children","join","disabled","loading","quotes","USDCAD","USDEUR","amount","Math","ceil","toLocaleString","showCurrency","ProductCard","requestProductDetails","src","mainImg","alt","title","nbKilometers","gazol","transmissionType","productsList","id","general","mainImgUrl","brand","model","bodyType","fetchProductDetailsHandler","HomeInventoryMemo","React","memo","carsHomeInventory","homeInventoryLimit","Controller","prevProps","query","bodyTypeList","brandAndModelsData","brandData","Object","keys","bodyTypeBrandData","includes","modelData","selectBodyTypeHandler","selectBrandHandler","selectModelHandler","sort","sortHandler","min","max","step","maxValue","scope","minValue","changePriceHandler","onChangeComplete","changeComplete","changeYearHandler","HomeSearch","searchHandler","minPrice","maxPrice","formInput","control","required","autoComplete","formType","options","option","label","htmlFor","border","validator","email","password","confirm_password","firstName","lastName","error","val","errorLabel","test","backdrop","ReactDOM","createPortal","open","getElementById","modal","onCloseModal","errorHandler","onCloseError","Login","loginForm","inputChangeHandler","input","loginHandler","loginFormData","preventDefault","setLoadingToTrue","errors","setLoadingToFalse","setErrors","connectionId","loginSucceeded","localStorage","setItem","token","expiryDate","getTime","toISOString","loginFailed","closeErrorHandler","resetErrors","ErrorHandler","onSubmit","noValidate","HomeContact","Home","carsHomeIntro","initialIndex","showIntroList","partRequested","imageSlideHandler","inter","setInterval","clearInterval","onRequestChange","replayInterval","showIntroListToggler","onMouseEnter","onMouseLeave","totalProductsCounter","mostPopularSedan","Paginator","pageNumbers","lastPage","pageNumbersButton","onRequestPageNumber","bind","currentPage","products","itemsPerPage","onRequestPreviousPage","onRequestNextPage","amountFormater","prevCurrency","nextCurrency","result","Inventory","page","init","fetchProductsHandler","params","URL","minPriceQuery","maxPriceQuery","fullValue","floor","minYear","maxYear","URLSearchParams","toString","stateQuery","paginationHandler","direction","currentInventoryPage","setInventoryCurrentPage","parsedQuery","queryString","parse","location","parseInt","inventory","overview","yearOfRelease","serialNumber","design","intColor","extColor","technical","tech","motorSize","nbCylinders","maxSpeed","nbGearRatios","features","feature","Car","images","initiatlIndex","changeGalleryImgIndex","imageUrls","indexOf","userIdFetching","prodId","productRequested","get","match","favorite","userFavorites","userFavoritesProductsIds","relatedProducts","favoriteHandler","productId","removeUserFavoriteProduct","addUserFavoriteProduct","showFullGalleryHandler","hideScrollBarHandler","escFunction","event","keyCode","hideScrollBar","showScrollBarHandler","img","objectFit","supplier","reference","viewCounter","followersCounter","mostPopularProducts","user","favorites","Signup","signupForm","userEmail","userPassword","submitHandler","signupFormData","formData","FormData","append","fromEntries","requestLoginForm","Auth","requestedForm","setRequestedForm","requested","Messages","Account","scrolling","path","render","component","Services","purchase","vehicle_paper","transport","customs_clearance","insurance","header","forfait","App","hideFooter","scrollDirection","listenToScroll","winScroll","scrollTop","documentElement","isTop","scrollPos","initAppDataHandler","initAppData","publicityProducts","homeInventoryProducts","startConnection","setConnectionId","setLoginStateToFalse","getItem","endConnection","logout","removeItem","initUserFavoriteProducts","setUserFavoriteProducts","player","play","loginData","setLoginStateToTrue","windowWidth","marginTop","config","delay","process","Boolean","hostname","updatedObject","oldObject","updatedProperties","initialState","loginSucced","action","reducer","addFavoriteProduct","removeFavoriteProduct","newFavoritesData","filter","EURUSD","EURCAD","CADUSD","CADEUR","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","productReducer","userReducer","parametersReducer","notificationReducer","store","createStore","applyMiddleware","thunk","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.25a93e9f.chunk.js","sourcesContent":["import * as actionTypes from './actionsTypes';\r\n\r\n\r\nexport const setProductRequestedData = data => {\r\n    return {\r\n        type: actionTypes.SET_PRODUCT_REQUESTED_DATA,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const initAppData = data => {\r\n    return {\r\n        type: actionTypes.INIT_APP_DATA,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const setInventoryCurrentPage = currentPage => {\r\n    return {\r\n        type: actionTypes.SET_INVENTORY_CURRENT_PAGE,\r\n        currentPage: currentPage\r\n    }\r\n}\r\n\r\nexport const setPrice = data => {\r\n    return {\r\n        type: actionTypes.SET_PRICE,\r\n        data: data\r\n    }\r\n}\r\n","export const LOGIN_SUCCEDED = 'LOGIN_SUCCEDED';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\nexport const SET_LOGIN_STATE_TO_TRUE = 'SET_LOGIN_STATE_TO_TRUE';\r\nexport const SET_LOGIN_STATE_TO_FALSE = 'SET_LOGIN_STATE_TO_FALSE';\r\n\r\nexport const INIT_APP_DATA = 'INIT_APP_DATA';\r\n\r\nexport const SET_CONNECTION_ID = 'SET_CONNECTION_ID'\r\nexport const SET_PRODUCT_REQUESTED_DATA = 'SET_PRODUCT_REQUESTED_ID'\r\n\r\nexport const SET_USER_FAVORITE_PRODUCTS = 'SET_USER_FAVORITE_PRODUCTS'\r\nexport const ADD_USER_FAVORITE_PRODUCT = 'ADD_USER_FAVORITE_PRODUCT'\r\nexport const REMOVE_USER_FAVORITE_PRODUCT = 'REMOVE_USER_FAVORITE_PRODUCT'\r\n\r\n\r\nexport const SET_LANG = 'SET_LANG';\r\nexport const SET_CURRENCY = 'SET_CURRENCY'\r\n\r\nexport const SET_INVENTORY_CURRENT_PAGE = 'SET_INVENTORY_CURRENT_PAGE'\r\n\r\nexport const SET_PRICE = 'SET_PRICE'\r\n\r\n\r\nexport const ADD_A_NEW_MESSAGE_NOTIFICATION = 'ADD_A_NEW_MESSAGE_NOTIFICATION'\r\nexport const RESET_NEW_MESSAGE_NOTIFICATION = 'RESET_NEW_MESSAGE_NOTIFICATION'","import * as actionTypes from './actionsTypes'\r\n\r\nexport const setLang = lang => {\r\n    return {\r\n        type: actionTypes.SET_LANG,\r\n        lang: lang\r\n    }\r\n}\r\n\r\nexport const setCurrency = currency => {\r\n    return {\r\n        type: actionTypes.SET_CURRENCY,\r\n        currency\r\n    }\r\n}","import * as actionTypes from './actionsTypes';\r\n\r\n\r\nexport const addNewMessageNotification = data=> {\r\n    return {\r\n        type: actionTypes.ADD_A_NEW_MESSAGE_NOTIFICATION,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const resetNewMessageNotification = () => {\r\n    return {\r\n        type: actionTypes.RESET_NEW_MESSAGE_NOTIFICATION\r\n    }\r\n}","import React from 'react';\r\nimport './svg.css';\r\nimport sprite from '../../assets/sprite.svg'\r\n\r\nconst svg = props => {\r\n    return (\r\n        <svg \r\n            viewBox='0 0 16 16' \r\n            onClick={props.onClick}\r\n            className={`icon icon-${props.icon} ${props.size} ${props.customClass}`}\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\">\r\n\r\n            <use xlinkHref={`${sprite}#icon-${props.icon}`} />\r\n        </svg>\r\n    )\r\n}\r\nexport default svg;\r\n","import React, { Component } from 'react'\r\nimport './DropDownList.css';\r\nimport IconSvg from '../../utilities/svg/svg'\r\n\r\n\r\nclass DropDownList extends Component {\r\n\r\n    state = {\r\n        showList: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.addEventListener('mousedown', this.handleClick, false)\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n         document.removeEventListener('mousedown', this.handleClick, false)\r\n    }\r\n\r\n    toggleList = () => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            showList: !prevState.showList\r\n        }))\r\n    }\r\n\r\n    handleClick = e => {         \r\n        if(this.target && this.target.contains(e.target)){\r\n            return\r\n        } else {\r\n            if(this.state.showList){\r\n                this.toggleList()\r\n            }\r\n            \r\n        }     \r\n    }\r\n\r\n    render() {\r\n\r\n        let list = this.props.list;\r\n        const {showList} = this.state\r\n\r\n        return (\r\n            <div className={`drop-down-list ${showList ? 'show' : ''}`}\r\n                 ref={el => this.target = el}\r\n                 onClick={this.toggleList}>\r\n                    <div className=\"drop-down-list__value\">\r\n                        {this.props.value}\r\n                        <IconSvg icon=\"arrow_down\"/>\r\n                    </div>\r\n                    <ul className={`drop-down-list__list`}>\r\n                        {list.map(item => \r\n                            <li className={`drop-down-list__list__item\r\n                                        ${item.value && this.props.value === item.value ? 'active':''}\r\n                                        ${item.text && this.props.value === item.text ? 'active':''}\r\n                                        ${this.props.value === item ? 'active' : ''}`}\r\n                                key={item.text ? item.text : item}\r\n                                onClick={() => this.props.selectItemHandler(item.value ? item.value : item)}>\r\n                                {item.text ? item.text : item}\r\n                            </li>\r\n                        )}\r\n                    </ul>     \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default DropDownList;","import React from 'react';\r\nimport './Navtop.css';\r\nimport IconSvg from '../../../utilities/svg/svg';\r\nimport DropDownList from '../../DropDownList/DropDownList';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst navtop = props => {\r\n    const setCurrencyHandler = currency => {\r\n        props.history.push({\r\n            pathname: props.history.pathname,\r\n            search: `lang=${props.lang}&currency=${currency}`\r\n        })\r\n        props.setCurrency(currency)\r\n    }\r\n    return (\r\n        <div className={`navtop \r\n\r\n                        `}>\r\n            <div className=\"navtop__logo\">\r\n                WOTO\r\n            </div>\r\n            <div className=\"navtop__contact\">\r\n                <div className=\"navtop__contact__detail\">\r\n                    <IconSvg icon=\"phone\" />\r\n                    <div>+1 438 896 2026</div>\r\n                </div>\r\n                <div className=\"navtop__contact__detail\">\r\n                    <IconSvg icon=\"email\" />\r\n                    <div>wotto@gmail.com</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navtop__cta\">\r\n                <DropDownList \r\n                    value={props.lang}\r\n                    list={['english', 'spanish', 'french']}\r\n                    selectItemHandler={props.setLang}\r\n                />\r\n                <DropDownList \r\n                    value={props.currency}\r\n                    list={['CAD', 'USD','EUR']}\r\n                    selectItemHandler={setCurrencyHandler}\r\n                />\r\n            </div>\r\n            {/* <div className=\"navtop__socialMedia\">\r\n                <IconSvg icon=\"facebook\"/>\r\n                <IconSvg icon=\"instagram\"/>\r\n                <IconSvg icon=\"twitter\"/>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.parameters.lang,\r\n        currency: state.parameters.currency,\r\n        price: state.product.price\r\n    }\r\n}\r\n\r\nconst mapDispacthToProps = dispatch => {\r\n    return {\r\n        setLang: lang => dispatch(actions.setLang(lang)),\r\n        setCurrency: currency => dispatch(actions.setCurrency(currency)),\r\n        setPrice: value => dispatch(actions.setPrice(value))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispacthToProps)(withRouter(navtop)); \r\n","import React from 'react'\r\nimport './Navbar.css';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport IconSvg from '../../../utilities/svg/svg';\r\nimport { NavLink, Link} from 'react-router-dom'\r\n\r\nconst Navbar= props => {\r\n    let userName = props.userName;\r\n        let isAuth = props.isAuth\r\n        return (\r\n            <nav className={`navbarContainer \r\n                            ${props.scrolled ? 'fixed': ''}\r\n                            `}>\r\n            <ul className=\"navbar__list\">\r\n                    <NavLink exact to=\"/Car-dealer\" className=\"navbar__list__item\">\r\n                        Home\r\n                    </NavLink>\r\n                    <NavLink to=\"Car-dealer/inventory\" className=\"navbar__list__item\">\r\n                        Inventory\r\n                    </NavLink>\r\n                    <NavLink to=\"Car-dealer/services\" className=\"navbar__list__item\">\r\n                        Services\r\n                    </NavLink>\r\n            </ul>\r\n\r\n            <div className=\"navbar__cta\">\r\n\r\n                \r\n                {!isAuth && (\r\n                        <Link className=\"navbar__cta__login\" to=\"Car-dealer/auth\">\r\n                            <IconSvg icon=\"user\"/>\r\n                            <span>Login</span>\r\n                        </Link>\r\n                )}\r\n\r\n                {isAuth && (\r\n                    <div className=\"navbar__cta__avatar\"\r\n                         onClick={() => props.history.push('/my-account/messages')}>\r\n                       <span>{userName.split(' ')[0].slice(0, 1)}{userName.split(' ')[1].slice(0, 1)}</span> \r\n                    </div>\r\n\r\n                )}\r\n            </div>\r\n        </nav>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.auth,\r\n        userName: state.auth.userName,\r\n        lang: state.parameters.lang\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(withRouter(Navbar));\r\n","import React, { Component } from 'react'\r\nimport \"./MobileNav.css\"\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport IconSvg from '../../../utilities/svg/svg';\r\nimport { NavLink, Link} from 'react-router-dom'\r\nimport DropDownList from '../../DropDownList/DropDownList'\r\nimport * as actions from \"../../../store/actions\";\r\n\r\nclass MobileNav extends Component {\r\n\r\n    state = {\r\n        showNavList: false,\r\n        showLogout: false\r\n    }\r\n    toggleNavList = () => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            showNavList: !prevState.showNavList\r\n        }))\r\n    }\r\n\r\n    toggleShowLogout = () => {\r\n        this.setState( prevState => ({\r\n            ...prevState,\r\n            showLogout: !prevState.showLogout\r\n        }))\r\n    }\r\n\r\n    setCurrency = currency => {\r\n        this.props.history.push({\r\n            pathname: this.props.history.pathname,\r\n            search: `lang=${this.props.lang}&currency=${currency}`\r\n        })\r\n        this.props.setCurrency(currency)\r\n       this.toggleNavList()\r\n    }\r\n\r\n    setLang = lang => {\r\n        this.props.history.push({\r\n            pathname: this.props.history.pathname,\r\n            search: `lang=${lang}&currency=${this.props.currency}`\r\n        })\r\n        this.props.setLang(lang)\r\n        this.toggleNavList()\r\n    }\r\n    render() {\r\n        const { showNavList, showLogout } = this.state\r\n        let userName = this.props.userName;\r\n        let isAuth = this.props.isAuth\r\n        return (\r\n            <div className=\"mobile-nav\">\r\n\r\n                <div className=\"mobile-nav__group\">\r\n                    <div className=\"mobile-nav__toggler\" onClick={this.toggleNavList}>\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                    </div>\r\n                    <div className=\"mobile-nav__logo\">\r\n                    <Link to=\"/inventory\">                  \r\n                            WOTO\r\n                    </Link>\r\n                    </div>\r\n                   \r\n                </div>\r\n\r\n                <div className=\"mobile-nav__group\">\r\n\r\n                    <Link to=\"/my-account/messages\">\r\n                        <IconSvg icon=\"email\"/>\r\n                    </Link>\r\n                    <Link to=\"/my-account/favorites\">\r\n                        <IconSvg icon=\"heart\"/>\r\n                    </Link>\r\n                    \r\n\r\n                    {!isAuth && (\r\n                        <Link className=\"mobile-nav__login\" to=\"/auth\">\r\n                            Login\r\n                        </Link>\r\n                    )}\r\n\r\n                    {isAuth && window.innerWidth > 738 && (\r\n                        <Link className=\"mobile-nav__avatar\" to=\"/my-account/messages\">\r\n                            <span>{userName.split(' ')[0].slice(0, 1)}{userName.split(' ')[1].slice(0, 1)}</span> \r\n                        </Link>\r\n                    )}\r\n                    {isAuth && window.innerWidth <= 738 && (\r\n\r\n                        <div className=\"mobile-nav__avatar\" to=\"/my-account/messages\" onClick={this.toggleShowLogout}>\r\n                            <span>{userName.split(' ')[0].slice(0, 1)}{userName.split(' ')[1].slice(0, 1)}</span> \r\n\r\n                            <div className={`mobile-nav__logout ${showLogout ? 'show': ''}`}\r\n                                 onClick={this.props.logoutHandler}>\r\n                                Logout\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                    )}\r\n          \r\n\r\n\r\n\r\n                </div>\r\n\r\n               \r\n                \r\n\r\n\r\n                {showNavList && (<div className=\"mobile-nav__backdrop\" onClick={this.toggleNavList}></div> )} \r\n                <div className={`mobile-nav__listContainer  ${showNavList ? 'show' : ''}`}>\r\n                    <ul className={`mobile-nav__list`}>\r\n                        <NavLink exact to={`/`} className=\"mobile-nav__list__item\" onClick={this.toggleNavList}>\r\n                            Home\r\n                        </NavLink>\r\n                        <NavLink to={`/inventory`} className=\"mobile-nav__list__item\" onClick={this.toggleNavList}>\r\n                            Inventory\r\n                        </NavLink>\r\n                        <NavLink to=\"/services\" className=\"mobile-nav__list__item\" onClick={this.toggleNavList}>\r\n                            Services\r\n                        </NavLink>\r\n                    </ul>\r\n                    <div className=\"mobile-nav__parameters\">\r\n                            <DropDownList \r\n                                value={this.props.lang}\r\n                                list={['english', 'spanish', 'french']}\r\n                                selectItemHandler={this.setLang}\r\n                            />\r\n                            <DropDownList \r\n                                value={this.props.currency}\r\n                                list={['CAD', 'USD','EUR']}\r\n                                selectItemHandler={this.setCurrency}\r\n                            />\r\n                    </div>\r\n                    <div className=\"mobile-nav__list__socialMedia\">\r\n                            <IconSvg icon=\"facebook\"/>\r\n                            <IconSvg icon=\"instagram\"/>\r\n                            <IconSvg icon=\"twitter\"/>\r\n                        </div>\r\n                </div>\r\n\r\n               \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.auth,\r\n        userName: state.auth.userName,\r\n        lang: state.parameters.lang,\r\n        currency: state.parameters.currency,\r\n    }\r\n}\r\n\r\nconst mapDispacthToProps = dispatch => {\r\n    return {\r\n        setLang: lang => dispatch(actions.setLang(lang)),\r\n        setCurrency: currency => dispatch(actions.setCurrency(currency)),\r\n    }\r\n}\r\n\r\nexport default  connect(mapStateToProps, mapDispacthToProps)( withRouter(MobileNav))\r\n","import React, { Component } from 'react'\r\nimport './Footer.css';\r\nimport IconSvg from '../../utilities/svg/svg';\r\nimport DropDownList from '../DropDownList/DropDownList';\r\nimport * as actions from '../../store/actions'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass Footer extends Component {\r\n\r\n    state = {\r\n        susbscribed: false,\r\n        subscribeInput: ''\r\n    }\r\n    changeInputHandler = value => {\r\n        this.setState({ subscribeInput: value })\r\n    }\r\n\r\n    subscribeHandler = () => {\r\n        this.setState({\r\n            susbscribed: true,\r\n            subscribeInput: ''\r\n        })\r\n    }\r\n\r\n    setCurrencyHandler = currency => {\r\n        this.props.history.push({\r\n            pathname: this.props.history.pathname,\r\n            search: `lang=${this.props.lang}&currency=${currency}`\r\n        })\r\n        this.props.setCurrency(currency)\r\n        \r\n        window.scrollTo(0 , 0)\r\n    }\r\n    render() {\r\n\r\n        const {susbscribed, subscribeInput} = this.state\r\n        const { hide } = this.props\r\n        return (\r\n            <footer className={`footer ${hide ? 'hide' : ''}`}>\r\n            <ul className=\"footer__list\">\r\n\r\n                <li className=\"footer__list__group\">\r\n                    <div className=\"footer__list__item\">\r\n                        <h3 className=\"footer__title\">WOTO Motors</h3>\r\n                        <p>\r\n                            Aliquam non lacus nec ligula efficitur malesuada ac sit amet orci. Aliquam volutpat, sapien eu blandit laoreet, sapien quam semper nunc, a mollis turpis lacus vitae nibh. Nullam eleifend varius dolor, quis dapibus sem tempor eget. Nulla sed aliquam nibh. In eu luctus tortor. Vestibulum ullamcorper ex nisl,\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"footer__list__item\">\r\n                        <h3 className=\"footer__title\">Site map</h3>\r\n                        <ul className=\"footer__list__item__list\">\r\n                            <li className=\"footer__list__item__list__item\">\r\n                               <a href=\"/\">Home</a>\r\n                            </li>\r\n                            <li className=\"footer__list__item__list__item\">\r\n                                <a href=\"/inventory\">Inventory</a>\r\n                            </li>\r\n                            <li className=\"footer__list__item__list__item\">\r\n                                <a href=\"/services\">Services</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n\r\n\r\n\r\n                <li className=\"footer__list__group\">\r\n                    <div className=\"footer__list__item\">\r\n                        <h3 className=\"footer__title\">Subscribe</h3>\r\n\r\n                        <div className=\"footer__inputContainer\">\r\n                            <input className=\"footer__input\"\r\n                                value={subscribeInput}\r\n                                type=\"email\"\r\n                                placeholder=\"email\"\r\n                                onChange={e => this.changeInputHandler(e.target.value)}\r\n                            />\r\n                            <IconSvg icon=\"send\"\r\n                                onClick={this.subscribeHandler}\r\n                            />\r\n                        </div>\r\n                        \r\n                        {susbscribed && (\r\n                            <p>You've been subscribed. Thank you for joining us</p>\r\n                        )}\r\n                         {!susbscribed && (\r\n                            <p>Get latest updates and offers</p>\r\n                        )}\r\n\r\n                       \r\n                    </div>\r\n                    <div className=\"footer__list__item\">\r\n                        <h3 className=\"footer__title\">Parameters</h3>\r\n                        <ul className=\"footer__list__item__list\">\r\n                            <li className=\"footer__list__item__list__item\">\r\n                                <DropDownList \r\n                                    value={this.props.lang}\r\n                                    list={['english', 'spanish', 'french']}\r\n                                    selectItemHandler={this.props.setLang}\r\n                                />\r\n                            </li>\r\n                            <li className=\"footer__list__item__list__item\">\r\n                                <DropDownList \r\n                                    value={this.props.currency}\r\n                                    list={['CAD', 'USD', 'EUR']}\r\n                                    selectItemHandler={this.setCurrencyHandler}\r\n                                />\r\n                            </li>\r\n                            \r\n                     </ul>\r\n                    </div>     \r\n                </li>    \r\n            </ul>\r\n\r\n\r\n            <div className=\"footer__copyRight\">\r\n                <span>&copy; Anja Rasoloarivalona - 2019</span>\r\n                <ul className=\"footer__socialNetwork__list\">\r\n                        <IconSvg icon=\"facebook\"/>\r\n                        <IconSvg icon=\"instagram\"/>\r\n                        <IconSvg icon=\"twitter\"/>\r\n                        <IconSvg icon=\"google-plus\"/>\r\n                    </ul>\r\n            </div>\r\n        </footer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.parameters.lang,\r\n        currency: state.parameters.currency\r\n    }\r\n}\r\n\r\nconst mapDispacthToProps = dispatch => {\r\n    return {\r\n        setLang: lang => dispatch(actions.setLang(lang)),\r\n        setCurrency: currency => dispatch(actions.setCurrency(currency))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispacthToProps)(withRouter(Footer));\r\n\r\n\r\n","export const timeStampGenerator = () => {\r\n    let date = new Date();\r\n    \r\n    let day = date.getDate();\r\n    let realDay; \r\n    if(day < 10){\r\n      realDay = '0' + day\r\n    } else {\r\n      realDay = day\r\n    }\r\n    \r\n    let month = date.getMonth() + 1;\r\n    let year = date.getFullYear()\r\n    let hour = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    let seconds = date.getSeconds();\r\n\r\n    return `${realDay}-${month}-${year} ${hour}:${minutes}:${seconds}`\r\n  }","import React, { Component } from 'react';\r\nimport autosize from 'autosize';\r\n\r\nclass TextArea extends Component {\r\n    componentDidMount(){\r\n       this.textarea.focus();\r\n       autosize(this.textarea);\r\n    }\r\n    render(){\r\n      const style = {\r\n                maxHeight:'9rem',\r\n                minHeight:'4rem',\r\n                  resize:'none',\r\n                  padding:'.7rem',\r\n                  boxSizing:'border-box',\r\n                  fontSize:'1.6rem'};\r\n        return (\r\n            <textarea\r\n                style={style} \r\n                ref={c=>this.textarea=c}\r\n                placeholder={this.props.placeholder}\r\n                rows={1} \r\n                value={this.props.value}\r\n                onChange={(e) => this.props.onChange(e.target.value)}\r\n                className={this.props.className}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default TextArea","import React from 'react';\r\nimport './MessagesList.css'\r\n\r\nconst MessagesContainerList = props => {\r\n    let messages = props.messages;\r\n    let displayedDate = '';\r\n    let chatMessageGap;\r\n    let currentSenderType;\r\n\r\n    //Initialize date and store it\r\n    let date = messages[0].timeStamp;\r\n    let shortDate = messages[0].timeStamp.slice(0 , 5);\r\n    currentSenderType = messages[0].senderType;\r\n    let messagesList = messages.map((message, index, array) => {     \r\n\r\n        let currentDate = array[index].timeStamp.slice(0 , 5);\r\n        if(index === 0){\r\n            //Display the first date\r\n                displayedDate = date\r\n\r\n        } else {\r\n            //compare the current date with the previous date\r\n            if(currentDate !== shortDate && index + 1 < array.length){\r\n                 displayedDate = messages[index].timeStamp\r\n                 shortDate = messages[index].timeStamp.slice(0 , 5);\r\n            } else {\r\n                displayedDate = ''\r\n            }\r\n        }\r\n\r\n        if( index + 1 < array.length  && array[index + 1].senderType === currentSenderType ){\r\n            chatMessageGap = 'small'\r\n        } else {\r\n            chatMessageGap = 'big'\r\n            if(index + 1 < array.length){\r\n                currentSenderType = array[index + 1].senderType\r\n            }\r\n            \r\n        }\r\n \r\n        return (\r\n            <div key={message._id} className=\"messagesContainer__body__chatContainer\" >\r\n                {displayedDate !== '' && (<div className=\"messagesContainer__body__chat__convoDate\">{displayedDate}</div>)\r\n                }\r\n                <div className={`messagesContainer__body__chat               \r\n                                ${chatMessageGap === 'small' ? 'small-gap': 'big-gap'}`}>\r\n                    <div className={`messagesContainer__body__chat__content \r\n                                    ${message.senderType === 'user' ? 'user' : 'admin'}` }>\r\n                        {message.message}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    return messagesList\r\n}\r\n\r\nexport default MessagesContainerList\r\n","import React, { Component, Fragment } from 'react';\r\nimport './Chat.css';\r\nimport openSocket from 'socket.io-client';\r\nimport { connect } from 'react-redux';\r\nimport { timeStampGenerator } from '../../utilities/timeStampGenerator';\r\nimport IconSvg from '../../utilities/svg/svg';\r\nimport AutoSizeTextArea from '../AutosizeTextArea/AutosizetextArea';\r\nimport MessagesList from '../../pages/account/Messages/MessagesList/MessagesList';\r\nimport * as actions from '../../store/actions'\r\n\r\n\r\n class Chat extends Component {\r\n    state = {\r\n        messages: null,\r\n        messageInput: '',\r\n        showChat: true,\r\n        name: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        let url = \"http://localhost:8000/messages/\" + this.props.userId;\r\n        let method = \"GET\";\r\n        fetch( url, {\r\n           headers: {\r\n               \"Content-Type\": \"application/json\"\r\n           },\r\n           method: method\r\n        })\r\n        .then( res => {\r\n            if(res.status !== 200){\r\n                throw new Error('Failed to fetch messages')\r\n            }\r\n            return res.json()\r\n        })\r\n        .then( resData => {\r\n            let messages = resData.messages.messages;\r\n            let unreadMessageCounter = 0;\r\n            messages.forEach(i => {\r\n                if(i.read === false){\r\n                    unreadMessageCounter++\r\n                } \r\n            })\r\n\r\n            if(unreadMessageCounter > 0){\r\n                this.props.addNewMessageNotification(unreadMessageCounter)\r\n            }\r\n            this.setState({ \r\n                messages: resData.messages.messages,\r\n                name: this.props.userName\r\n            }, () => this.scrollToBottom())\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        const socket = openSocket('http://localhost:8000');\r\n        socket.on('adminSentMessage', data => { \r\n           if(this.props.userId === data.messageData.userId){\r\n            this.props.playNotificationSound()\r\n            this.addMessages(data.messageData)\r\n            if(this.state.showChat === true){\r\n                this.readNewMessagesHandler();\r\n            } else {\r\n               this.props.addNewMessageNotification(1)\r\n               }\r\n           }      \r\n        })\r\n    }\r\n\r\n    readNewMessagesHandler = () => {\r\n        let url = \"http://localhost:8000/messages/\" + this.props.userId;\r\n            let timeStamp = timeStampGenerator();\r\n                fetch( url, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        timeStamp: timeStamp,\r\n                        userName: this.state.name\r\n                    })\r\n                })\r\n                .then( res => {\r\n                    if(res.status !== 200){\r\n                        throw new Error('Failed to fetch messages')\r\n                    }\r\n                    return res.json()\r\n                })\r\n                .then( resData => {\r\n                    console.log('resdata', resData)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n           \r\n    }\r\n    sendMessageHandler = () => {\r\n\r\n        if(this.state.messageInput.trim() !== ''){\r\n            let timeStamp = timeStampGenerator();\r\n            let url = \"http://localhost:8000/messages/user/\" + this.props.userId;\r\n            let method = \"POST\";\r\n            fetch(url, {\r\n                method: method,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    from: this.state.name,\r\n                    message: this.state.messageInput,\r\n                    timeStamp: timeStamp\r\n                })\r\n            })\r\n            .then( res => {\r\n                return res.json()\r\n            })\r\n            .then( resData => {\r\n                this.addMessages(resData.data);\r\n                this.setState({ messageInput: ''});\r\n            })\r\n            .catch( err => {\r\n                console.log(err)\r\n            })\r\n        } else {\r\n            alert('Please enter a message')\r\n        }\r\n        \r\n\r\n\r\n\r\n    } \r\n    addMessages = message => {\r\n        let newMessages = [...this.state.messages, message]\r\n        this.setState({ messages: newMessages}, () => this.scrollToBottom())\r\n    }\r\n    messageChangeHandler = value => {\r\n        this.setState({ messageInput: value})\r\n    }\r\n    toggleShowChat = () => {\r\n        let unreadMessageCounter = 0;\r\n        this.state.messages.forEach(i => {\r\n            if(i.read === false){\r\n                unreadMessageCounter++\r\n            } \r\n        })\r\n\r\n        if(this.props.newMessage > 0){\r\n            unreadMessageCounter += this.props.newMessage\r\n        }\r\n\r\n        if(unreadMessageCounter > 0){\r\n            this.readNewMessagesHandler()\r\n            this.props.resetNewMessageNotification()\r\n        }\r\n        this.setState( prevState => ({\r\n            showChat: !prevState.showChat\r\n        }))\r\n    }\r\n\r\n    scrollToBottom() {\r\n        this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n\r\n      \r\n\r\n    render() {\r\n\r\n        const { showChat, messageInput, messages } = this.state;\r\n\r\n        let messagesList;\r\n        if(messages && messages.length > 0){\r\n            messagesList = (\r\n                <MessagesList messages={messages}/>\r\n            ) \r\n        } else {\r\n            messagesList = (\r\n                <div className=\"messagesContainer__body__start\">Start conversation</div>\r\n            )\r\n        }\r\n\r\n    \r\n        return (\r\n            <Fragment>\r\n                <section className=\"chat\" onClick={this.toggleShowChat}>\r\n                    <div className=\"chat__icon\">\r\n                        <IconSvg icon=\"messenger\"/>\r\n                    </div>\r\n                    {!showChat && this.props.newMessage > 0 && (\r\n                        <div className=\"chat__notif\">\r\n                            {this.props.newMessage}\r\n                        </div>\r\n                    )}\r\n                </section>\r\n\r\n                <div className={`chat__messages ${showChat ? 'show' : ''}`}>\r\n                    <div className=\"chat__messages__header\">\r\n                        <IconSvg icon=\"close\" onClick={this.toggleShowChat}/>\r\n                        <span>Open conversation</span>\r\n                    </div>\r\n\r\n                    <div className=\"chat__messages__body\">\r\n                         {messagesList}\r\n                         <div ref={el => this.messagesEnd = el}></div>\r\n                    </div>\r\n                    <div className=\"chat__messages__input\">\r\n                        <AutoSizeTextArea \r\n                            value={messageInput}\r\n                            placeholder=\"Write a message\"\r\n                            onChange={this.messageChangeHandler}\r\n                        />\r\n                        <IconSvg icon=\"send\" onClick={this.sendMessageHandler}/>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.auth.userId,\r\n        userName: state.auth.userName,\r\n        newMessage: state.notification.newMessage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addNewMessageNotification: data =>  dispatch(actions.addNewMessageNotification(data)),\r\n        resetNewMessageNotification: () => dispatch(actions.resetNewMessageNotification())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\nconst loader = () => {\r\n    return (\r\n        <div className='loader-container'>\r\n            <div className=\"loader\">\r\n                <div className=\"loader__bar\"></div>\r\n                <div className=\"loader__bar\"></div>\r\n                <div className=\"loader__bar\"></div>\r\n                <div className=\"loader__bar\"></div>\r\n                <div className=\"loader__bar\"></div>\r\n                <div className=\"loader__ball\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default loader\r\n\r\n\r\n","import React from 'react';\r\nimport './Button.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst button = props => !props.link ?\r\n    (\r\n        <button \r\n            className={['button', `button--${props.color}`].join(' ')}\r\n            onClick={props.onClick}\r\n            disabled={props.disabled || props.loading}\r\n            type={props.type}>\r\n                {props.loading ? 'Looading...' : props.children}\r\n        </button>\r\n    ) \r\n        :\r\n    (\r\n        <Link \r\n            className={`button button--${props.color}  ${props.customClass}`}\r\n            to={props.link}\r\n            onClick={props.onClick}>\r\n                {props.children}\r\n        </Link>\r\n    )\r\n\r\nexport default button;\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './Amount.css'\r\n\r\n\r\nconst Amount = props => {\r\n   let USDCAD = props.quotes.USDCAD\r\n   let USDEUR = props.quotes.USDEUR\r\n\r\n\r\n        let currency = props.currency;    \r\n        let amount = props.amount;\r\n    \r\n        if(currency === 'USD'){\r\n            amount = amount / USDCAD\r\n        }\r\n\r\n        if(currency === 'EUR'){\r\n            amount = amount / USDCAD * USDEUR\r\n        }\r\n\r\n        return (\r\n            <div className=\"amount\">\r\n                <span className=\"amount__value\">{Math.ceil(amount).toLocaleString()}</span> {props.showCurrency ? <span className=\"amount__currency\">{currency}</span> : ''}  \r\n            </div>\r\n        )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currency: state.parameters.currency,\r\n        quotes: state.parameters.quotes\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Amount)","import React from 'react';\r\nimport './ProductCard.css';\r\nimport IconSvg from '../../utilities/svg/svg';\r\nimport Amount from '../Amount/Amount'\r\n\r\nconst ProductCard = props  => {\r\n    return (\r\n        <article className=\"product\" >\r\n            {props.children}\r\n            <div className=\"product__imgContainer\" onClick={props.requestProductDetails}>\r\n                <div className=\"product__imgContainer__hoverLayer\"></div>\r\n                <img src={props.mainImg} alt=\"main img\" className=\"product__img\"/>\r\n                    <IconSvg icon=\"search\"/>\r\n            </div>   \r\n            <div className=\"product__details\">\r\n                <div className=\"product__details__model\">\r\n                   <span>{props.title}</span>\r\n                    <span>{props.year}</span>\r\n                </div>\r\n                <div className=\"product__details__price\">\r\n                    <Amount amount={props.price} showCurrency/>\r\n                    {/* {props.price.toLocaleString()} MRU */}\r\n                </div>           \r\n            </div>\r\n\r\n            <ul className=\"product__specList\">\r\n                <li className=\"product__specList__item\">\r\n                    <span>{props.nbKilometers}</span>\r\n                    <IconSvg icon=\"road\"/>\r\n                </li>\r\n                <li className=\"product__specList__item\">\r\n                    <span>{props.gazol}</span>\r\n                    <IconSvg icon=\"gas-station\"/>\r\n                </li>\r\n                <li className=\"product__specList__item\">\r\n                    <span>{props.transmissionType}</span>\r\n                    <IconSvg icon=\"gear\"/>\r\n                </li>\r\n            </ul>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default ProductCard\r\n","import React from 'react';\r\nimport './ProductsList.css';\r\nimport ProductCard from '../ProductCard/ProductCard';\r\nimport * as actions from '../../store/actions';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst ProductsList = props => {\r\n    const requestProductDetails = data => {\r\n        props.setProductRequestedData(data);\r\n        props.history.push(`/inventory/${data._id}?brand=${data.general.brand}&model=${data.general.model}&bodyType=${data.general.bodyType}&price=${data.general.price}`); \r\n        if(props.fetchProductDetailsHandler){\r\n            props.fetchProductDetailsHandler(data)\r\n        }     \r\n    }\r\n    let productsList = props.productsList;\r\n    return (\r\n        <ul className=\"products-list\">\r\n            {productsList.map(product => (\r\n                <li key={product._id} className=\"products-list__item\">\r\n                    <ProductCard \r\n                        id={product._id}\r\n                        mainImg={product.general.mainImgUrl}\r\n                        title={product.general.title}\r\n                        brand={product.general.brand}\r\n                        model={product.general.model}\r\n                        year={product.general.year}\r\n                        price={product.general.price}\r\n                        nbKilometers={product.general.nbKilometers}\r\n                        gazol={product.general.gazol}\r\n                        transmissionType={product.general.transmissionType}\r\n                        requestProductDetails={() => requestProductDetails(product)}\r\n                    />\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setProductRequestedData: data => dispatch(actions.setProductRequestedData(data)) \r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(withRouter(ProductsList)) \r\n","import React from 'react';\r\nimport './HomeInventory.css';\r\nimport Button from '../../../components/button/Button';\r\nimport ProductsList from '../../../components/ProductsList/ProductsList';\r\n\r\nconst homeInventory = props => {\r\n    let productsList = props.carsHomeInventory;\r\n    let homeInventoryLimit = props.homeInventoryLimit;\r\n\r\n    if(homeInventoryLimit < productsList.length){\r\n        productsList = productsList.slice(0, homeInventoryLimit)\r\n    }\r\n    return (\r\n        <div className=\"home-inventory\">\r\n            <ProductsList productsList={productsList}/>\r\n            <Button color=\"primary\"\r\n                    onClick={() => props.history.push('/inventory')}>\r\n                Voir plus\r\n            </Button>\r\n        \r\n        </div>\r\n    )\r\n}\r\nexport const HomeInventoryMemo = React.memo(homeInventory);","import React, { Component } from 'react';\r\nimport './Controller.css';\r\nimport { connect } from 'react-redux';\r\nimport InputRange from 'react-input-range';\r\nimport 'react-input-range/lib/css/index.css';\r\nimport DropDownList from '../../../components/DropDownList/DropDownList'\r\n\r\n\r\n class Controller extends Component {\r\n\r\n    componentDidUpdate(prevProps){\r\n        // if(prevProps.currency !== this.props.currency){\r\n        //    console.log('formated', this.props.query.price.formatedValue)\r\n        // }\r\n    }\r\n    render() {\r\n        const {query} = this.props;  \r\n        let bodyTypeList = this.props.bodyTypeList;\r\n        let data = this.props.brandAndModelsData;\r\n\r\n\r\n        let brandData = Object.keys(data)\r\n        let bodyTypeBrandData = [];\r\n        if(query.bodyType !== 'all'){\r\n            Object.keys(data).forEach(brand => {\r\n                if(Object.keys(data[brand]).includes(query.bodyType)){\r\n                    bodyTypeBrandData.push(brand)\r\n                }\r\n            })\r\n            brandData = bodyTypeBrandData\r\n        }\r\n\r\n        let modelData = [];\r\n        if(query.brand !== 'all'){\r\n            if(query.bodyType === 'all'){\r\n                Object.keys(data[query.brand]).forEach(bodyType => {\r\n                    modelData = [...modelData, ...data[query.brand][bodyType]]\r\n                })\r\n            } else { modelData = [...modelData, ...data[query.brand][query.bodyType]]\r\n            }\r\n        }\r\n        return (\r\n       \r\n            <div className=\"inventory__controller\">\r\n\r\n                        <DropDownList \r\n                            value={query.bodyType === 'all' ? 'all body types' : query.bodyType}\r\n                            list={[ {text: 'all body types', value: 'all'}, ...bodyTypeList]}\r\n                            selectItemHandler={this.props.selectBodyTypeHandler}\r\n                        />\r\n\r\n                        <DropDownList \r\n                            value={query.brand === 'all' ? 'all brands' : query.brand}\r\n                            list={[ {text: 'all brands', value: 'all'}, ...brandData]}\r\n                            selectItemHandler={this.props.selectBrandHandler}\r\n                        />\r\n      \r\n                        <DropDownList \r\n                            value={query.model === 'all' ? 'all models' : query.model}\r\n                            list={ query.brand !== 'all' ? [{text: 'all models', value: 'all'}, ...modelData] : ['all models']}\r\n                            selectItemHandler={this.props.selectModelHandler}\r\n                        />\r\n              \r\n                        {query.sort && (\r\n                            <DropDownList \r\n                            value={query.sort}\r\n                            list={['increasing price', 'decreasing price', 'latest', 'most popular']}\r\n                            selectItemHandler={this.props.sortHandler}\r\n                            />\r\n                        )}\r\n                      \r\n                 \r\n\r\n                    <div className=\"inventory__controller__group\">\r\n                        <div className=\"inventory__controller__group__infos\">\r\n                            <div className=\"inventory__controller__group__infos__key\">\r\n                                Price\r\n                            </div>\r\n                            <div className=\"inventory__controller__group__infos__value\">\r\n                                {query.price.value.min} - {query.price.value.max}\r\n                            </div>\r\n                        </div>\r\n                        <InputRange \r\n                            step={1000}\r\n                            maxValue= {query.price.scope.max}\r\n                            minValue={query.price.scope.min}\r\n                            value={query.price.value}\r\n                            onChange={value => this.props.changePriceHandler(value)}\r\n                            onChangeComplete={this.props.changeComplete}/>\r\n                    </div>\r\n\r\n                    <div className=\"inventory__controller__group\">\r\n                        <div className=\"inventory__controller__group__infos\">\r\n                            <div className=\"inventory__controller__group__infos__key\">\r\n                                Year\r\n                            </div>\r\n                            <div className=\"inventory__controller__group__infos__value\">\r\n                                {query.year.value.min} - {query.year.value.max}\r\n                            </div>\r\n                        </div>\r\n                        <InputRange \r\n                            maxValue={query.year.scope.max }\r\n                            minValue={query.year.scope.min } \r\n                            value={query.year.value}\r\n                            onChange={value => this.props.changeYearHandler(value)}\r\n                            onChangeComplete={this.props.changeComplete}/>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        brandAndModelsData: state.product.brandAndModelsData,\r\n        price: state.product.price,\r\n        bodyTypeList: state.product.bodyTypeList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Controller)\r\n","import React, { Component } from 'react'\r\nimport './HomeSearch.css'\r\nimport { connect } from 'react-redux'\r\nimport Controller from '../../../pages/inventory/Controller/Controller';\r\nimport Button from '../../../components/button/Button';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass HomeSearch extends Component {\r\n\r\n    state = {\r\n        query: {\r\n            brand: 'all',\r\n            model: 'all',\r\n            bodyType: 'all',\r\n            year: {\r\n                value: {\r\n                    min: 2008,\r\n                    max: 2020\r\n                },\r\n                scope: {\r\n                    min: 2008,\r\n                    max: 2020\r\n                }\r\n            },\r\n            price: {\r\n                value: {\r\n                    min: null,\r\n                    max: null\r\n                },\r\n                scope: {\r\n                    min: null,\r\n                    max: null\r\n                }\r\n            },\r\n            sort: 'increasing price'\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        /*** START INIT MIN AND MAX PRICE ***/\r\n        let minPrice = this.props.price.min\r\n        let maxPrice = this.props.price.max\r\n    \r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                price : {\r\n                    value: {\r\n                        min: minPrice,\r\n                        max: maxPrice\r\n                    },\r\n                    scope: {\r\n                        min: minPrice,\r\n                        max: maxPrice\r\n                    }   \r\n                }                 \r\n            },\r\n        }))\r\n    }\r\n\r\n    selectBodyTypeHandler = bodyType => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                bodyType: bodyType\r\n            }\r\n        }))\r\n    }\r\n\r\n    selectBrandHandler = brand => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                brand: brand\r\n            }\r\n        }))\r\n    }\r\n\r\n    selectModelHandler = model => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                model: model\r\n            }\r\n        }))\r\n    }\r\n\r\n    changePriceHandler = value => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                price: {\r\n                    ...prevState.query.price,\r\n                    value: value\r\n                }\r\n            }\r\n        }))\r\n    }\r\n\r\n    changeYearHandler = value => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                year: {\r\n                    ...prevState.query.year,\r\n                    value: value\r\n                }\r\n            }\r\n        }))\r\n    }\r\n\r\n    onChangeComplete = () => {\r\n        this.searchHandler()\r\n    }\r\n\r\n   searchHandler = () => {\r\n    const { query } = this.state;\r\n    this.props.history.push({\r\n        pathname: '/inventory',\r\n        search: `sort=${query.sort}&bodyType=${query.bodyType}&brand=${query.brand}&model=${query.model}&minPrice=${query.price.value.min}&maxPrice=${query.price.value.max}&minYear=${query.year.value.min}&maxYear=${query.year.value.max}`\r\n    })\r\n   }\r\n    render() {\r\n        const {query} = this.state\r\n\r\n        return (\r\n            <div className=\"home-search\">\r\n                <Controller\r\n                        query={query}\r\n                        selectBrandHandler={this.selectBrandHandler}\r\n                        selectModelHandler={this.selectModelHandler}\r\n                        sortHandler={this.sortHandler}\r\n                        changePriceHandler={this.changePriceHandler}\r\n                        changeYearHandler={this.changeYearHandler}\r\n                        changeComplete={this.changeComplete}\r\n                        selectBodyTypeHandler={this.selectBodyTypeHandler}\r\n                        data={this.props.brandAndModelsData}\r\n                />\r\n\r\n                <div className=\"home-search__cta\">\r\n                    <Button color=\"primary\"\r\n                            onClick={this.searchHandler}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </div>\r\n\r\n              \r\n         </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        brandAndModelsData: state.product.brandAndModelsData,\r\n        price: state.product.price\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(withRouter(HomeSearch)) ;","import React from 'react';\r\nimport './HomeService.css';\r\nimport IconSvg from '../../../utilities/svg/svg';\r\nimport Button from '../../../components/button/Button';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst homeService = props => {\r\n    return (\r\n        <section className=\"home-service\">\r\n            <h1 className=\"home-service__title\">Nos offres</h1>\r\n\r\n            <ul className=\"home-service__list\">\r\n                <li className=\"home-service__list__item\">\r\n                    <IconSvg icon=\"buy\"/>\r\n                    <div className=\"home-service__list__item__text\">\r\n                        <h2 className=\"home-service__list__item__text__title\">Basic</h2>\r\n                        <p className=\"home-service__list__item__text__para\">Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression.</p>\r\n                    </div>\r\n                </li>\r\n                <li className=\"home-service__list__item\">\r\n                    <IconSvg icon=\"contract\"/>\r\n                    <div className=\"home-service__list__item__text\">\r\n                        <h2 className=\"home-service__list__item__text__title\">Conventionnel</h2>\r\n                        <p className=\"home-service__list__item__text__para\">Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression.</p>\r\n                    </div>\r\n                </li>\r\n                <li className=\"home-service__list__item\">\r\n                    <IconSvg icon=\"yoga\"/>\r\n                    <div className=\"home-service__list__item__text\">\r\n                        <h2 className=\"home-service__list__item__text__title\">Tranquility</h2>\r\n                        <p className=\"home-service__list__item__text__para\">Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression.</p>\r\n                    </div>\r\n                </li>\r\n                <li className=\"home-service__list__item\">\r\n                    <IconSvg icon=\"key\"/>\r\n                    <div className=\"home-service__list__item__text\">\r\n                        <h2 className=\"home-service__list__item__text__title\">Clés en main</h2>\r\n                        <p className=\"home-service__list__item__text__para\">Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression.</p>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        \r\n            <Button color=\"primary\"\r\n                    onClick={() => props.history.push(\"/services\")}\r\n            >\r\n                LEARN MORE\r\n            </Button>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default withRouter(homeService);\r\n","import React from 'react';\r\nimport './FormInput.css';\r\n\r\nconst formInput = props => {\r\n    return (\r\n        <div className={`input ${props.className}`}>\r\n\r\n            \r\n\r\n            {/*-------INPUT VARIATION--------*/}\r\n\r\n\r\n                {/*-----BASIC INPUT--------*/}\r\n                {\r\n                    props.control === 'input' && (\r\n                        <input className=\"input__field\" \r\n                               type={props.type} //text, email, password...\r\n                               id={props.id}\r\n                               required={props.required}\r\n                               value={props.value}\r\n                               placeholder={props.placeholder}\r\n                               autoComplete= {props.autoComplete}\r\n                               onChange={e => props.onChange(props.id, e.target.value, props.formType)}\r\n                               />\r\n                    )\r\n                }\r\n\r\n\r\n\r\n                {/*----TEXTAREA INPUT--------*/}\r\n                {\r\n                    props.control === 'textarea' && (\r\n                        <textarea className=\"textarea\"\r\n                            id={props.id}\r\n                            required={props.required}\r\n                            value={props.value}\r\n                            onChange={e => props.onChange(props.id, e.target.value)}\r\n                            placeholder={props.placeholder}\r\n                            />\r\n                    )\r\n                }\r\n\r\n                {\r\n                    props.control === 'select' && (\r\n                        <select id={props.id}\r\n                                required={props.required}\r\n                                onChange={e => props.onChange(props.id, e.target.value)}\r\n                                value={props.value}>\r\n                                \r\n                                {\r\n                                    props.options.map( option => (\r\n                                        <option key={option} value={option}>{option}</option>\r\n                                    ))\r\n                                }\r\n                        </select>\r\n                    )\r\n                }\r\n\r\n                {/*--------INPUT LABEL-----------*/}\r\n                {\r\n                    props.label && (\r\n                        <label htmlFor={props.id} className=\"input__label\">{props.label}</label>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    props.border && (\r\n                        <div className=\"input__border\"></div>\r\n                    )\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default formInput;\r\n","export const validator = (email, password, confirm_password, firstName, lastName) => {\r\n    const error = [];\r\n\r\n\r\n    let values = [email, password, confirm_password, firstName, lastName];\r\n\r\n\r\n    /* ------CHECK IF VALUE IS EMPTY---------*/\r\n    \r\n    values.forEach(val => {\r\n        if(val){\r\n            if(val.value.length < 1){\r\n                error.push(`${val.errorLabel} is required`)\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n    /*-------CHECK IF EMAIL IS VALID--------*/\r\n    let emailIsValid = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(email.value.trim())\r\n      if(!emailIsValid){\r\n        error.push('Please, enter a valid email')\r\n      }\r\n\r\n\r\n      /*----CHECK FIRST NAME AND LAST NAME LLENGTH------*/ \r\n      if(firstName){\r\n          if(firstName.value.trim().length < 3){\r\n              error.push('Firstname should be at least 3 characters long')\r\n          }\r\n      }\r\n\r\n      if(lastName){\r\n        if(lastName.value.trim().length < 3){\r\n            error.push('Lastname should be at least 3 characters long')\r\n        }\r\n    }\r\n\r\n\r\n    /*------CHECK PASSWORD LENGTH-----*/\r\n    if(password.value.trim().length < 5) {\r\n        error.push('Password should be at least 5 characters long')\r\n    }\r\n\r\n    /*----CHECK IF TWO PASSWORDS ARE EQUAL-----*/\r\n    if(confirm_password){\r\n        if(password.value.trim() !== confirm_password.value.trim()){\r\n            error.push('Please enter the same password')\r\n        }\r\n    }\r\n\r\n    return error\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => \r\n    ReactDOM.createPortal(\r\n        <div\r\n        className={['backdrop', props.open ? 'open' : ''].join(' ')}\r\n        onClick={props.onClick}\r\n        >\r\n          {props.children}\r\n        </div>,\r\n    document.getElementById('backdrop-root')\r\n  );\r\n\r\n\r\nexport default backdrop","import React from 'react';\r\nimport './Modal.css';\r\nimport Button from '../button/Button';\r\n\r\nconst modal = props => \r\n    (\r\n        <section className='modal'>\r\n            <header className=\"modal__header\">\r\n                <h1>{props.title}</h1>\r\n            </header>\r\n            <div className=\"modal__body\">{props.children}</div>\r\n            <div className=\"modal__cta\">\r\n                <Button onClick={props.onCloseModal}\r\n                        color='primary'>\r\n                    OK\r\n                </Button>\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n\r\nexport default modal","import React, { Fragment} from 'react';\r\nimport Backdrop from '../backdrop/Backdrop';\r\nimport Modal from '../modal/Modal';\r\n\r\nconst errorHandler = props => \r\n    (   \r\n        <Fragment>\r\n            {props.error && (\r\n                <Backdrop onClick={props.onCloseError}/>\r\n            )}\r\n\r\n            {props.error && (\r\n                <Modal title='Oops something went wrong'\r\n                        onCloseModal = {props.onCloseError}>\r\n                    <p>{props.error[0]}</p>\r\n                </Modal>\r\n            )}\r\n        </Fragment>\r\n    )\r\n\r\nexport default errorHandler\r\n","import React, { Component } from 'react';\r\nimport Input from '../../../components/formInput/FormInput';\r\nimport Button from '../../../components/button/Button';\r\nimport './Login.css';\r\nimport { validator} from '../../../utilities/validators';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport ErrorHandler from '../../../components/errorHandler/ErrorHandler';\r\n\r\nimport {timeStampGenerator } from '../../../utilities/timeStampGenerator';\r\nimport openSocket from 'socket.io-client';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n class Login extends Component {\r\n\r\n    state= {\r\n        loginForm: {\r\n            email: {\r\n                value: ''\r\n            },\r\n\r\n            password:{\r\n                value: ''\r\n            }\r\n        },\r\n\r\n        error: null,\r\n    }\r\n\r\n    inputChangeHandler = (input, value) => {\r\n        this.setState( prevState => {\r\n            const updatedForm = {\r\n                ...prevState.loginForm,\r\n                [input]: {\r\n                    ...prevState.loginForm[input],\r\n                    value: value\r\n                }\r\n            }\r\n            return {\r\n                loginForm: updatedForm\r\n            }\r\n        })\r\n    }\r\n\r\n    loginHandler = (e, loginFormData) => {\r\n        e.preventDefault();\r\n        this.props.setLoadingToTrue();\r\n        if(loginFormData){\r\n            const errors = validator(\r\n                loginFormData.email,\r\n                loginFormData.password\r\n            )\r\n            if(errors.length > 0){\r\n                this.setState({ error: errors})\r\n                this.props.setLoadingToFalse()\r\n                this.props.setErrors()\r\n\r\n                return \r\n            }\r\n        }\r\n        let timeStamp = timeStampGenerator();\r\n        fetch('https://africauto.herokuapp.com/auth/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: loginFormData.email.value,\r\n                password: loginFormData.password.value,\r\n                timeStamp: timeStamp\r\n            })\r\n        })\r\n        .then( res => {\r\n            if(res.status === 422){\r\n                throw new Error('validation failed')\r\n            }\r\n            \r\n            if(res.status === 401){\r\n                throw new Error('Wrong email or password')\r\n            }\r\n\r\n            if(res.status !== 200 && res.status !== 201){\r\n                throw new Error('Could not authenticate you')\r\n            }\r\n            return res.json()\r\n        })\r\n        .then( resData => {\r\n            let socket = openSocket('https://africauto.herokuapp.com', {query: `data=${resData.userId} ${resData.connectionId}`});\r\n            socket.connect()\r\n                this.props.loginSucceeded(resData);\r\n                localStorage.setItem('woto-token', resData.token);\r\n                localStorage.setItem('woto-userId', resData.userId);\r\n                localStorage.setItem('woto-userName', resData.userName);\r\n                const remainingMilliSeconds = 24 * 60 * 60 * 1000 //24hours\r\n                const expiryDate = new Date( new Date().getTime() + remainingMilliSeconds )\r\n\r\n                localStorage.setItem('woto-expiryDate', expiryDate.toISOString());\r\n\r\n                this.props.setLoadingToFalse()\r\n                this.props.history.push('/my-account/messages')\r\n\r\n        })\r\n        .catch( err => {\r\n            let error = []\r\n            error.push(err.message)\r\n            this.setState({ error: error})\r\n            this.props.loginFailed()\r\n            this.props.setLoadingToFalse()\r\n            this.props.setErrors()\r\n        })\r\n\r\n\r\n    }\r\n\r\n    closeErrorHandler = () => {\r\n        this.setState({ error: null});\r\n        this.props.resetErrors()\r\n    }\r\n\r\n    \r\n\r\n\r\n    render() {\r\n\r\n        let form;\r\n\r\n        if(this.state.error) {\r\n            form = <ErrorHandler error = {this.state.error}\r\n                    onCloseError={this.closeErrorHandler}/>\r\n        }\r\n         else {\r\n             form = (\r\n                <form className= 'auth__form auth__form--login' \r\n                       onSubmit={e => this.loginHandler(e, this.state.loginForm)}\r\n                       noValidate\r\n                       autoComplete=\"off\">\r\n                    <ul className=\"auth__input__list\">\r\n\r\n                                <Input  type='email'\r\n                                    control='input'\r\n                                    label='email'\r\n                                    id='email'\r\n                                    value={this.state.loginForm['email'].value}\r\n                                    onChange={this.inputChangeHandler}\r\n                                    placeholder='email'\r\n                                    border\r\n                                    required={true}\r\n                                    autoComplete = 'new-password'/>\r\n\r\n                            <Input  type='password'\r\n                                    control='input'\r\n                                    label='mot de passe'\r\n                                    id='password'\r\n                                    value={this.state.loginForm['password'].value}\r\n                                    onChange={this.inputChangeHandler}\r\n                                    placeholder='mot de passe'\r\n                                    border\r\n                                    required={true}\r\n                                    autoComplete = 'new-password'/>\r\n                    </ul>\r\n\r\n                    <div className='login__options'>\r\n                        <div className=\"login__options--1\" >\r\n                            Mot de passe oublié\r\n                        </div>\r\n                        <div className=\"login__options--1\">\r\n                            Pas encore membre ?\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"auth__button\">\r\n                        <Button color='primary' type='submit'>\r\n                            Login\r\n                        </Button>\r\n                    </div>\r\n                \r\n            </form>\r\n             )\r\n         }\r\n        return form\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loginSucceeded: (data) => dispatch(actions.loginSucceeded(data)),\r\n        loginFailed: () => dispatch(actions.loginFailed())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(Login));\r\n","import * as actionTypes from './actionsTypes';\r\n\r\n\r\n\r\nexport const loginSucceeded = data => {\r\n    return {\r\n        type: actionTypes.LOGIN_SUCCEDED,\r\n        token: data.token,\r\n        userId: data.userId,\r\n        connectionId: data.connectionId,\r\n        userName: data.userName\r\n\r\n    }\r\n}\r\n\r\nexport const loginFailed = () => {\r\n    return {\r\n        type: actionTypes.LOGIN_FAILED\r\n    }\r\n}\r\n\r\nexport const setLoginStateToTrue = data => {\r\n    return {\r\n        type: actionTypes.SET_LOGIN_STATE_TO_TRUE,\r\n        isAuth: data.isAuth,\r\n        token: data.token,\r\n        userId: data.userId,\r\n        userName: data.userName\r\n        \r\n    }\r\n}\r\n\r\nexport const setLoginStateToFalse = () => {\r\n    return {\r\n        type: actionTypes.SET_LOGIN_STATE_TO_FALSE\r\n    }\r\n}\r\n\r\nexport const setConnectionId = data => {\r\n    return {\r\n        type: actionTypes.SET_CONNECTION_ID,\r\n        connectionId: data\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './HomeContact.css';\r\nimport Login from '../../../pages/auth/login/Login';\r\n\r\n class HomeContact extends Component {\r\n    state= {\r\n        loginForm: {\r\n            email: {\r\n                value: ''\r\n            },\r\n\r\n            password:{\r\n                value: ''\r\n            }\r\n        },\r\n\r\n        error: null,\r\n    }\r\n\r\n    inputChangeHandler = (input, value) => {\r\n        this.setState( prevState => {\r\n            const updatedForm = {\r\n                ...prevState.loginForm,\r\n                [input]: {\r\n                    ...prevState.loginForm[input],\r\n                    value: value\r\n                }\r\n            }\r\n\r\n            return {\r\n                loginForm: updatedForm\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home-contact\">\r\n                <h1 className=\"home-contact__title\">Need some help</h1>\r\n                <p className=\"home-contact__text\">\r\n                Lorem ipsum dolor sit amet. Proin non venenatis turpis. Nulla vitae odio eget justo dapibus faucibus. Maecenas semper elementum augue a ultrices. \r\n                </p>\r\n                <div className=\"home-contact__form\">\r\n                     <Login />\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default HomeContact\r\n","import React, { Component } from 'react'\r\nimport './Home.css';\r\nimport IconSvg from '../../utilities/svg/svg';\r\nimport {HomeInventoryMemo} from './homeInventory/HomeInventory';\r\nimport HomeSearch from './homeSearch/HomeSearch';\r\nimport HomeService from './homeService/HomeService';\r\nimport HomeContact from './HomeContact/HomeContact'\r\nimport Button from '../../components/button/Button';\r\nimport * as actions from '../../store/actions';\r\nimport { connect } from 'react-redux';\r\nimport ProductList from '../../components/ProductsList/ProductsList'\r\nimport Amount from '../../components/Amount/Amount'\r\n\r\nclass Home extends Component {\r\n\r\n    state = {\r\n        carsHomeIntro : this.props.carsHomeIntro,\r\n        index: 0,\r\n        initialIndex: 0,\r\n        showIntroList: false,\r\n        partRequested: 'inventory',\r\n\r\n        homeInventoryLimit: 9\r\n    }\r\n\r\n    componentDidMount(){\r\n        let windowWidth = window.innerWidth;\r\n        if(windowWidth > 1337){\r\n            this.setState({ homeInventoryLimit: 8})\r\n        }\r\n\r\n        this.props.history.push({\r\n            pathname: this.props.history.pathname,\r\n            search: `lang=${this.props.lang}&currency=${this.props.currency}`\r\n          })\r\n\r\n\r\n\r\n        \r\n      this.imageSlideHandler()   \r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.clearInterval(this.inter)\r\n    }\r\n\r\n    imageSlideHandler = () => {\r\n        let {index, carsHomeIntro} =  this.state;\r\n        this.inter = setInterval(() => {\r\n                    if(index === carsHomeIntro.length){                 \r\n                        this.setState({index: 0}, () => {\r\n                            clearInterval(this.inter);\r\n                            this.imageSlideHandler();\r\n                        })\r\n                    } else {\r\n                        this.setState({index: index++ })\r\n                    }\r\n                }, 3000)\r\n    }\r\n\r\n\r\n    onRequestChange = i => {\r\n        clearInterval(this.inter);\r\n        this.setState({ index: i}, () => this.imageSlideHandler())\r\n    }\r\n\r\n    clearInterval = () => {\r\n        clearInterval(this.inter)\r\n    }\r\n\r\n    replayInterval = () => {\r\n       this.imageSlideHandler()\r\n    }\r\n\r\n    showIntroListToggler = () => {\r\n        this.setState( prevState => ({\r\n            showIntroList: !prevState.showIntroList\r\n        }))\r\n    }\r\n\r\n    requestProductDetails = data => {\r\n        this.props.setProductRequestedData(data);\r\n        this.props.history.push(`/inventory/${data._id}?brand=${data.general.brand}&model=${data.general.model}&bodyType=${data.general.bodyType}&price=${data.general.price}`); \r\n        if(this.props.fetchProductDetailsHandler){\r\n            this.props.fetchProductDetailsHandler(data)\r\n        }     \r\n    }\r\n\r\n    render() {\r\n\r\n        const {carsHomeIntro} = this.state;\r\n\r\n        return (\r\n            <div className=\"home\">\r\n            \r\n            {/* <div className={`home__intro__list-toggler\r\n                        ${this.state.showIntroList ? 'active': ''}`}\r\n                 onClick={this.showIntroListToggler}>\r\n\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n            </div>\r\n\r\n            <div className={`home__intro__list\r\n                    ${this.state.showIntroList ? 'active' : ''}`}>\r\n                <div className=\"home__intro__list__controller\">\r\n                    {carsHomeIntro.map( (product, index) => (\r\n                            <img key={product.general.mainImgUrl}src={product.general.mainImgUrl} alt=\"home image\" \r\n                            className={`home__intro__list__controller__item\r\n                            ${this.state.index === index ? 'active': ''}`}/>\r\n                    ))}\r\n                </div>\r\n            </div> */}\r\n\r\n            <section className=\"home__intro\">\r\n                {carsHomeIntro.map((product, index) => (\r\n                        <div className={`home__intro__background \r\n                                        ${this.state.index === index ? 'active' : ''}\r\n                                        ${index === 0 ? 'keyframe' : ''}`}\r\n                        key={index}\r\n                        >\r\n                            <img  src={product.general.mainImgUrl} className=\"home__intro__background__image\" alt='home intro'/>\r\n                            <div className=\"home__intro__product-container\"\r\n                                onMouseEnter={this.clearInterval}\r\n                                onMouseLeave={this.replayInterval}>\r\n                                <div className=\"home__intro__product\">\r\n                                    <div className=\"home__intro__product__detail\">\r\n                                        <span>{product.general.brand}</span> \r\n                                        <span>{product.general.model}</span>\r\n                                        <span>{product.general.year}</span>\r\n                                    </div>\r\n                                    <div className=\"home__intro__product__price\">\r\n                                        <Amount amount={product.general.price} showCurrency/>\r\n                                        {/* <span>{product.general.price}</span>\r\n                                        <span>MRU</span> */}\r\n\r\n\r\n                                    </div>\r\n                                </div>                              \r\n                                 <Button color=\"primary\"\r\n                                  onClick={() => this.requestProductDetails(product)}>\r\n                                     Voir\r\n                                 </Button>\r\n                                 \r\n                            </div>\r\n                                 \r\n\r\n                        </div>\r\n                    ))\r\n                }\r\n            </section>\r\n\r\n            <section className=\"home__router\">\r\n                <div className=\"home__router__nav\">\r\n                    <h1><span>WELCOME TO&nbsp;</span><span>WOTO MOTORS</span></h1>\r\n                    <nav className=\"home__router__nav__list\">\r\n                        <li \r\n                            className={`home__router__nav__list__item ${this.state.partRequested === 'inventory' ? 'active': ''}`} \r\n                            onClick={() => this.setState({ partRequested: 'inventory'})}>\r\n                                Inventory\r\n                        </li>\r\n                        <li className={`home__router__nav__list__item ${this.state.partRequested === 'search' ? 'active': ''}`}\r\n                            onClick={() => this.setState({ partRequested: 'search'})}>\r\n                                Search\r\n                        </li>\r\n                        {/* <li className={`home__router__nav__list__item ${this.state.partRequested === 'contact' ? 'active': ''}`}\r\n                            onClick={() => this.setState({ partRequested: 'contact'})}>\r\n                                Contact\r\n                        </li> */}\r\n                        <li className={`home__router__nav__list__item ${this.state.partRequested === 'services' ? 'active': ''}`}\r\n                            onClick={() => this.setState({ partRequested: 'services'})}>\r\n                                Services\r\n                        </li>\r\n                    </nav>\r\n                    <div className=\"home__router__nav__count\">\r\n                        <IconSvg icon=\"car\"/>\r\n                        <div>Available {this.props.totalProductsCounter} cars</div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            {this.state.partRequested === 'inventory' && (\r\n                    <HomeInventoryMemo carsHomeInventory={this.props.carsHomeInventory} history={this.props.history} homeInventoryLimit={this.state.homeInventoryLimit}/>\r\n            )}\r\n\r\n            {this.state.partRequested === 'search' && (\r\n                    <HomeSearch />\r\n            )}\r\n\r\n\r\n            {this.state.partRequested === 'services' && (\r\n                    <HomeService />\r\n            )}\r\n\r\n            {/* {this.state.partRequested === 'contact' && (\r\n                    <HomeContact />\r\n            )} */}\r\n\r\n            {/* <HomeService /> */}\r\n\r\n\r\n            <HomeContact />\r\n            \r\n            <div className=\"home__mostPopSedan\">\r\n                <h1 className=\"home__mostPopSedan__title\">\r\n                    Most popular sedan\r\n                </h1>\r\n                <ProductList productsList={this.props.mostPopularSedan}/>\r\n            </div>\r\n            \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        mostPopularSedan: state.product.mostPopularSedan,\r\n        lang: state.parameters.lang,\r\n        currency: state.parameters.currency,\r\n        totalProductsCounter: state.product.totalProductsCounter\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setProductRequestedData: data => dispatch(actions.setProductRequestedData(data)) \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from 'react'\r\nimport './Paginator.css';\r\nimport IconSvg from '../../utilities/svg/svg'\r\n\r\n\r\nclass Paginator extends Component {\r\n    render() {\r\n        const pageNumbers = [];\r\n        for(let i = 1; i <= this.props.lastPage; i++){\r\n            pageNumbers.push(i)\r\n        }\r\n        const pageNumbersButton = pageNumbers.map( i => {\r\n            return (\r\n                <div \r\n                        onClick={this.props.onRequestPageNumber.bind(this, i)}\r\n                        key={i}\r\n                        id={i}\r\n                        className={[\"paginator__control\", \r\n                                this.props.currentPage === i ? 'active' : ' '].join(' ')}>\r\n                    {i}\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"paginator\">\r\n                {this.props.children}\r\n                {this.props.products && this.props.products.length > 0 && (\r\n                   <div className={`paginator__controls ${this.props.currentPage === 1 && this.props.products.length < this.props.itemsPerPage ? 'hide':' '}`}>\r\n                        <div className={`paginator__control\r\n                                    ${this.props.currentPage === 1 ? 'disabled': ''}`}\r\n                                onClick={this.props.onRequestPreviousPage}>\r\n                                <IconSvg icon=\"arrow-left\"/>\r\n                        </div>\r\n                        {pageNumbersButton}\r\n                        <div className={`paginator__control\r\n                                    ${this.props.currentPage === this.props.lastPage ? 'disabled': ''}`}\r\n                                onClick={this.props.onRequestNextPage}>\r\n                                <IconSvg icon=\"arrow-right\"/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                \r\n            \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Paginator;","export const amountFormater = (amount, prevCurrency, nextCurrency, quotes) => {\r\n    let USDCAD = quotes.USDCAD\r\n    let USDEUR = quotes.USDEUR\r\n    let result;\r\n\r\n    if(prevCurrency === 'CAD'){\r\n        if(nextCurrency === 'USD'){\r\n            result = amount / USDCAD\r\n        }\r\n        if(nextCurrency === 'EUR'){\r\n            result = amount / USDCAD * USDEUR\r\n        }\r\n        if(nextCurrency === 'CAD'){\r\n            result = amount \r\n        }\r\n    }\r\n\r\n    if(prevCurrency === 'USD'){\r\n        if(nextCurrency === 'CAD'){\r\n            result = amount * USDCAD\r\n        }\r\n        if(nextCurrency === 'EUR'){\r\n            result = amount * USDEUR\r\n        }\r\n    }\r\n\r\n    if(prevCurrency === 'EUR'){\r\n        if(nextCurrency === 'USD'){\r\n            result = amount / USDEUR\r\n        }\r\n        if(nextCurrency === 'CAD'){\r\n            result = amount / USDEUR * USDCAD\r\n        }\r\n    }\r\n\r\n    return result\r\n}","import React, { Component } from 'react'\r\nimport './Inventory.css';\r\nimport {connect} from 'react-redux'\r\nimport Loader from '../../components/loader/Loader';\r\nimport Controller from './Controller/Controller';\r\nimport queryString from 'query-string';\r\nimport * as actions from '../../store/actions'\r\nimport ProductsList from '../../components/ProductsList/ProductsList';\r\nimport Paginator from '../../components/Paginator/Paginator';\r\nimport { amountFormater } from '../../utilities/amountFormater'\r\n\r\nclass Inventory extends Component {\r\n    state = {\r\n        products: null,\r\n        loading: true,\r\n        query: {\r\n            brand: 'all',\r\n            model: 'all',\r\n            bodyType: 'all',\r\n            page: 1,\r\n            year: {\r\n                value: {\r\n                    min: 2008,\r\n                    max: 2020\r\n                },\r\n                scope: {\r\n                    min: 2008,\r\n                    max: 2020\r\n                }\r\n            },\r\n            price: {\r\n                value: {\r\n                    min: null,\r\n                    max: null\r\n                },\r\n                scope: {\r\n                    min: null,\r\n                    max: null\r\n                },\r\n                init:{\r\n                    min: null,\r\n                    max: null\r\n                }\r\n            },\r\n            sort: 'increasing price'\r\n\r\n        },\r\n        lastPage: null\r\n    }\r\n\r\n\r\n    componentDidMount(){    \r\n        /*** START INIT MIN AND MAX PRICE ***/\r\n        let minPrice = this.props.price.min;\r\n        let maxPrice = this.props.price.max;\r\n        /*** END INIT MIN AND MAX PRICE ***/  \r\n\r\n        let parsedQuery = queryString.parse(this.props.location.search);\r\n\r\n        if(Object.keys(parsedQuery).length > 2){\r\n            this.setState(prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                price : {\r\n                    init: {\r\n                        min: minPrice,\r\n                        max: maxPrice\r\n                    },\r\n                    scope: {\r\n                        min:  minPrice,\r\n                        max: maxPrice\r\n                    },  \r\n                    value: {\r\n                        min: parseInt(parsedQuery.minPrice),\r\n                        max: parseInt(parsedQuery.maxPrice)\r\n                    },\r\n                    fullValue: {\r\n                        min: parseInt(parsedQuery.minPrice),\r\n                        max: parseInt(parsedQuery.maxPrice)\r\n                    }\r\n                },\r\n                year : {\r\n                    ...prevState.query.year,\r\n                    value: {\r\n                        min: parseInt(parsedQuery.minYear),\r\n                        max: parseInt(parsedQuery.maxYear)\r\n                    }\r\n                },\r\n                brand: parsedQuery.brand,\r\n                model: parsedQuery.model,\r\n                sort: parsedQuery.sort,\r\n                bodyType: parsedQuery.bodyType,\r\n                page: parsedQuery.page,                  \r\n            },\r\n            lastPage: Math.ceil(this.props.totalProductsCounter / this.props.itemsPerPage)\r\n        }), () =>  this.fetchProductsHandler())\r\n        } else {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                query: {\r\n                    ...prevState.query,\r\n                    price: {\r\n                        init: {\r\n                            min: minPrice,\r\n                            max: maxPrice\r\n                        },\r\n                        scope: {\r\n                            min:  minPrice,\r\n                            max: maxPrice \r\n                        },  \r\n                        value: {\r\n                            min: minPrice,\r\n                            max: maxPrice \r\n                        },\r\n                        fullValue: {\r\n                            min: minPrice,\r\n                            max: maxPrice \r\n                        },\r\n                    }\r\n                },\r\n                lastPage: Math.ceil(this.props.totalProductsCounter / this.props.itemsPerPage)\r\n            }), () =>  this.fetchProductsHandler())\r\n           \r\n        }  \r\n    }\r\n\r\n\r\n    fetchProductsHandler = () => {\r\n        const {query} = this.state\r\n        let url =  new URL('https://africauto.herokuapp.com/product/client');\r\n        let params;\r\n\r\n        //current value with the corresponding currency\r\n        let minPrice = query.price.value.min;\r\n        let maxPrice = query.price.value.max;\r\n            //store the value in those variables, we'll use them as a search parameters for the url at the ending of fetching products\r\n            let minPriceQuery = minPrice;\r\n            let maxPriceQuery = maxPrice;\r\n            //Convert the full value to CAD because or DB uses CAD as price currency\r\n            minPrice = amountFormater(query.price.fullValue.min, this.props.currency, 'CAD', this.props.quotes);\r\n            maxPrice = amountFormater(query.price.fullValue.max, this.props.currency, 'CAD', this.props.quotes);\r\n        \r\n            if(query){\r\n            params = {\r\n                ...params,\r\n                page: query.page,\r\n                brand: query.brand,\r\n                bodyType: query.bodyType,\r\n                model: query.model,\r\n                minPrice: Math.floor(minPrice),\r\n                maxPrice: Math.ceil(maxPrice),\r\n                minYear: query.year.value.min,\r\n                maxYear: query.year.value.max,\r\n                sort: query.sort.split(' ').length > 0 ? `${query.sort.split(' ')[0]}_${query.sort.split(' ')[1]}` : query.sort\r\n            }\r\n            url.search = new URLSearchParams(params).toString()\r\n        }\r\n\r\n\r\n        fetch( url, {\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          }\r\n        })\r\n        .then( res => {\r\n          if(res.status !== 200 && res.status !== 201){\r\n            throw new Error('Error fetching products')\r\n          }\r\n          return res.json()\r\n        })\r\n        .then(resData => {  \r\n       \r\n\r\n\r\n          this.setState({ products: resData.products, loading: false});\r\n          this.props.history.push({\r\n              pathname: `/inventory`,\r\n              search: `lang=${this.props.lang}&currency=${this.props.currency}&sort=${query.sort}&page=${query.page}&bodyType=${query.bodyType}&brand=${query.brand}&model=${query.model}&minPrice=${minPriceQuery}&maxPrice=${maxPriceQuery}&minYear=${query.year.value.min}&maxYear=${query.year.value.max}`\r\n          })\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        let prevCurrency = prevProps.currency;\r\n        let nextCurrency = this.props.currency;\r\n        let stateQuery = this.state.query;   \r\n       if(prevCurrency !== nextCurrency){\r\n            let quotes = this.props.quotes;\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                query: {\r\n                    ...prevState.query,\r\n                    price: {\r\n                        ...prevState.query.price,\r\n                        scope: {\r\n                            min: Math.floor(amountFormater(stateQuery.price.init.min, 'CAD', nextCurrency, quotes) / 1000 ) * 1000,\r\n                            max: Math.ceil(amountFormater(stateQuery.price.init.max, 'CAD', nextCurrency, quotes) / 1000 ) * 1000 ,\r\n                        },\r\n                        value: {\r\n                            min: Math.floor(amountFormater(stateQuery.price.init.min, 'CAD', nextCurrency, quotes)/ 1000 ) * 1000,\r\n                            max: Math.ceil(amountFormater(stateQuery.price.init.max, 'CAD', nextCurrency, quotes) / 1000 ) * 1000,\r\n                        },\r\n                        fullValue: {\r\n                            min: amountFormater(stateQuery.price.init.min, 'CAD', nextCurrency, quotes),\r\n                            max: amountFormater(stateQuery.price.init.max, 'CAD', nextCurrency, quotes)\r\n                        }\r\n                    }\r\n                }\r\n            }), () => this.fetchProductsHandler())\r\n\r\n        }     \r\n    }\r\n\r\n\r\n    selectBodyTypeHandler = bodyType => {\r\n        let data = this.props.brandAndModelsData;\r\n        let stateQuery = this.state.query\r\n        let query\r\n        if(stateQuery.brand !== 'all'){   \r\n            if(Object.keys(data[stateQuery.brand]).includes(bodyType)){\r\n                query = {\r\n                    ...this.state.query,\r\n                    bodyType: bodyType\r\n                } \r\n            } else {\r\n                query = {\r\n                    ...this.state.query,\r\n                    bodyType: bodyType,\r\n                    brand: 'all',\r\n                    model: 'all',\r\n                    page: 1\r\n                } \r\n            }\r\n        } else {\r\n            query = {\r\n                ...this.state.query,\r\n                bodyType: bodyType\r\n            } \r\n        }\r\n\r\n        this.setState({ query}, () => this.fetchProductsHandler(query))\r\n    }\r\n\r\n\r\n    selectBrandHandler = brand => {   \r\n        let query = {\r\n            ...this.state.query,\r\n                brand: brand\r\n            }\r\n        if(brand === 'all'){\r\n            query = {\r\n                ...query,\r\n                model: 'all',\r\n                page: 1\r\n            }\r\n        } \r\n        this.setState({ query }, () => this.fetchProductsHandler(query))\r\n    }\r\n    selectModelHandler = model => {\r\n        this.setState( prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                model: model\r\n            }\r\n        }), () => this.fetchProductsHandler())\r\n    }\r\n    sortHandler = sort => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            query : {\r\n                ...prevState.query,\r\n                sort: sort,\r\n                page: 1\r\n            }         \r\n        }), () => this.fetchProductsHandler())\r\n    }\r\n    changePriceHandler = value => {\r\n        this.setState( prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                page: 1,\r\n                price: {\r\n                    ...prevState.query.price,\r\n                    value: value,\r\n                    fullValue: value\r\n                }\r\n            }\r\n        }))\r\n    }\r\n    changeYearHandler = value => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            query: {\r\n                ...prevState.query,\r\n                page: 1,\r\n                year: {\r\n                    ...prevState.query.year,\r\n                    value: value\r\n                }\r\n            }\r\n        }))\r\n    }\r\n    changeComplete = () => {\r\n        this.fetchProductsHandler()\r\n    }\r\n\r\n    paginationHandler = direction => {\r\n        let query = this.state.query  \r\n        if(direction === 'next' &&  this.props.currentInventoryPage < this.state.lastPage ){ \r\n                query = {\r\n                    ...query,\r\n                    page: this.props.currentInventoryPage + 1\r\n                  }\r\n            this.props.setInventoryCurrentPage(this.props.currentInventoryPage + 1)\r\n            this.setState({ query }, () => this.fetchProductsHandler())\r\n        }\r\n        if(direction === 'previous' && this.props.currentInventoryPage > 1 ){\r\n          query = {\r\n            ...query,\r\n            page: this.props.currentInventoryPage - 1\r\n          }\r\n          this.props.setInventoryCurrentPage(this.props.currentInventoryPage - 1)\r\n          this.setState({ query }, () => this.fetchProductsHandler())\r\n        }\r\n        if(direction !== 'previous' && direction !== 'next'){\r\n          query = {\r\n            ...query,\r\n            page: direction\r\n          }\r\n          this.props.setInventoryCurrentPage(direction)\r\n          this.setState({ query }, () => this.fetchProductsHandler())\r\n        }\r\n\r\n        \r\n      }\r\n\r\n    render() {\r\n        const {products, loading, query} = this.state;\r\n        let inventory = <Loader />\r\n        if(!loading){\r\n            inventory = (\r\n                <div className=\"inventory\">\r\n                        <Controller\r\n                            currency={this.props.currency}\r\n                            query={query}\r\n                            selectBrandHandler={this.selectBrandHandler}\r\n                            selectModelHandler={this.selectModelHandler}\r\n                            selectBodyTypeHandler={this.selectBodyTypeHandler}\r\n                            sortHandler={this.sortHandler}\r\n                            changePriceHandler={this.changePriceHandler}\r\n                            changeYearHandler={this.changeYearHandler}\r\n                            changeComplete={this.changeComplete}\r\n                            data={this.props.brandAndModelsData}\r\n                        /> \r\n\r\n                        <section className=\"inventory__container\">\r\n                            {products && (\r\n                                <Paginator\r\n                                onRequestPreviousPage={this.paginationHandler.bind(this, 'previous')}\r\n                                onRequestNextPage={this.paginationHandler.bind(this, 'next')}\r\n                                lastPage={Math.ceil(this.props.totalProductsCounter / this.props.itemsPerPage)}\r\n                                currentPage={this.props.currentInventoryPage}\r\n                                onRequestPageNumber={this.paginationHandler}\r\n                                products={products}\r\n                                itemsPerPage={this.props.itemsPerPage}\r\n                                >\r\n                                    <ProductsList productsList={products}/>\r\n                                </Paginator>\r\n                                            \r\n                            )}\r\n                        </section>        \r\n                </div>\r\n            )\r\n        }\r\n\r\n        return inventory\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        brandAndModelsData: state.product.brandAndModelsData,\r\n        price: state.product.price,\r\n        totalProductsCounter: state.product.totalProductsCounter,\r\n        currentInventoryPage: state.product.currentInventoryPage,\r\n        itemsPerPage: state.product.itemsPerPage,\r\n        currency: state.parameters.currency,\r\n        quotes: state.parameters.quotes,\r\n        lang: state.parameters.lang,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setInventoryCurrentPage: data => dispatch(actions.setInventoryCurrentPage(data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Inventory)","import React from 'react';\r\nimport './Overview.css';\r\nimport IconSvg from '../../../utilities/svg/svg';\r\n\r\nconst overview = props => {\r\n    let product = props.product\r\n    return (\r\n        <div className=\"overview\">\r\n            <section className=\"overview__section\">\r\n                <div className=\"overview__title\">\r\n                    <IconSvg icon=\"file\"/>\r\n                    <div>General</div>\r\n                </div>\r\n                <ul className=\"overview__list\">\r\n                <li className=\"overview__list__item\">\r\n                    <div className=\"overview__list__item__key\">Brand</div>\r\n                    <div className=\"overview__list__item__value\">{product.general.brand}</div>\r\n                </li>\r\n                <li className=\"overview__list__item\">\r\n                    <div className=\"overview__list__item__key\">Model</div>\r\n                    <div className=\"overview__list__item__value\">{product.general.model}</div>\r\n                </li>\r\n                <li className=\"overview__list__item\">\r\n                    <div className=\"overview__list__item__key\">Body Type</div>\r\n                    <div className=\"overview__list__item__value\">{product.general.bodyType}</div>\r\n                </li>\r\n                <li className=\"overview__list__item\">\r\n                    <div className=\"overview__list__item__key\">Year</div>\r\n                    <div className=\"overview__list__item__value\">{product.general.year}</div>\r\n                </li>\r\n                <li className=\"overview__list__item\">\r\n                    <div className=\"overview__list__item__key\">Kilometer</div>\r\n                    <div className=\"overview__list__item__value\">{product.general.nbKilometers.toLocaleString()} km</div>\r\n                </li>\r\n                <li className=\"overview__list__item\">\r\n                    <div className=\"overview__list__item__key\">Year of release</div>\r\n                    <div className=\"overview__list__item__value\">{product.general.yearOfRelease}</div>\r\n                </li>\r\n                <li className=\"overview__list__item\">\r\n                    <div className=\"overview__list__item__key\">Serial number</div>\r\n                    <div className=\"overview__list__item__value\">{product.general.serialNumber}</div>\r\n                </li>\r\n               \r\n            </ul>\r\n            </section>\r\n            <section className=\"overview__section\">\r\n                <div className=\"overview__title\">\r\n                    <IconSvg icon=\"design\"/>\r\n                    <div>Design</div>\r\n                </div>\r\n                <ul className=\"overview__list\">\r\n                    <li className=\"overview__list__item\">\r\n                        <div className=\"overview__list__item__key\">Interior color</div>\r\n                        <div className=\"overview__list__item__value\">{product.design.intColor}</div>\r\n                    </li>\r\n                    <li className=\"overview__list__item\">\r\n                        <div className=\"overview__list__item__key\">Exterior color</div>\r\n                        <div className=\"overview__list__item__value\">{product.design.extColor}</div>\r\n                    </li>                            \r\n            </ul>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default overview;\r\n","import React from 'react';\r\nimport './Technical.css';\r\nimport IconSvg from '../../../utilities/svg/svg';\r\n\r\n\r\nconst technical = props => {\r\n   let product = props.product;\r\n    return (\r\n        <div className=\"technical\">\r\n\r\n\r\n            <div className=\"technical__section\">\r\n                <div className=\"technical__title\">\r\n                    <IconSvg icon=\"engine\"/>\r\n                    <div>Engine</div>\r\n                </div>\r\n                <ul className=\"technical__section__list\">\r\n                    <li className=\"technical__section__list__item\">\r\n                        <span className=\"technical__section__list__item__detail\">Motor size</span>\r\n                        <span className=\"technical__section__list__item__value\">{product.tech.motorSize}</span>\r\n                    </li>\r\n                    <li className=\"technical__section__list__item\">\r\n                        <span className=\"technical__section__list__item__detail\">Number of cylinders</span>\r\n                        <span className=\"technical__section__list__item__value\">{product.tech.nbCylinders}</span>\r\n                    </li>\r\n                    <li className=\"technical__section__list__item\">\r\n                        <span className=\"technical__section__list__item__detail\">Fuel</span>\r\n                        <span className=\"technical__section__list__item__value\">{product.general.gazol}</span>\r\n                    </li>\r\n                    <li className=\"technical__section__list__item\">\r\n                        <span className=\"technical__section__list__item__detail\">Max speed</span>\r\n                        <span className=\"technical__section__list__item__value\">{product.tech.maxSpeed} km/h</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            {/* <div className=\"technical__section\">\r\n                <div className=\"technical__title\">\r\n                    <IconSvg icon=\"speedometer\"/>\r\n                    <div>Performance</div>\r\n                </div>\r\n                <ul className=\"technical__section__list\">\r\n                    \r\n                    <li className=\"technical__section__list__item\">\r\n                        <span className=\"technical__section__list__item__detail\">0 à 100 km/h</span>\r\n                        <span className=\"technical__section__list__item__value\">10.6 s</span>\r\n                    </li>\r\n                </ul>\r\n            </div> */}\r\n            <div className=\"technical__section\">\r\n                <div className=\"technical__title\">\r\n                    <IconSvg icon=\"gear\"/>\r\n                    <div>Transmission</div>\r\n                </div>\r\n                <ul className=\"technical__section__list\">\r\n                    <li className=\"technical__section__list__item\">\r\n                        <span className=\"technical__section__list__item__detail\">Gear box</span>\r\n                        <span className=\"technical__section__list__item__value\">{product.general.transmissionType}</span>\r\n                    </li>\r\n                    <li className=\"technical__section__list__item\">\r\n                        <span className=\"technical__section__list__item__detail\">Number of gear ratios</span>\r\n                        <span className=\"technical__section__list__item__value\">{product.tech.nbGearRatios}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default technical;","import React from 'react';\r\nimport './Features.css';\r\nimport IconSvg from '../../../utilities/svg/svg'\r\n\r\nconst features = props => {\r\n    let product = props.product\r\n    return (\r\n        <div className=\"features\">\r\n            <ul className=\"features__list\">\r\n                {product.features.map(feature => (\r\n                    <li className=\"features__list__item\">\r\n                        <IconSvg icon=\"arrow-list\"/>\r\n                        {feature}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default features;","import React, { Component } from 'react'\r\nimport './Car.css';\r\nimport { Gallery, GalleryImage } from \"react-gesture-gallery\";\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../store/actions'\r\nimport Overview from './overview/Overview';\r\nimport Technical from './technical/Technical';\r\nimport Features from './features/Features';\r\nimport Loader from '../../components/loader/Loader';\r\nimport ProductsList from '../../components/ProductsList/ProductsList';\r\nimport Amount from '../../components/Amount/Amount';\r\nimport IconSvg from '../../utilities/svg/svg';\r\n\r\nclass Car extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            index: 0,       \r\n            product: null,\r\n            relatedProducts: [],\r\n            initiatlIndex: 0,\r\n            loading: true,\r\n            partRequested: 'overview',\r\n            favorite: false,\r\n        }\r\n        this.escFunction = this.escFunction.bind(this)\r\n    }\r\n  \r\n\r\n    imageSlideHandler = () => {\r\n    let {index, images, initiatlIndex} =  this.state;\r\n    this.inter = setInterval(() => {\r\n                if(index === images.length){\r\n                    this.setState({index: initiatlIndex}, () => {\r\n                        clearInterval(this.inter);\r\n                        this.imageSlideHandler();\r\n                    })\r\n                } else {\r\n                    this.setState({index: index++ })\r\n                }\r\n            }, 2500)\r\n    }\r\n    componentDidMount(){\r\n      //  this.imageSlideHandler()\r\n      this.fetchProductDetailsHandler();\r\n      document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.inter);\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n    changeGalleryImgIndex = url => {\r\n        const { product } = this.state;\r\n        let index = product.imageUrls.indexOf(`${url}`);\r\n        this.setState({ index: index})\r\n    }\r\n\r\n    fetchProductDetailsHandler = data => {\r\n        const {productRequested, userId} = this.props;\r\n        let userIdFetching;\r\n        if(userId === null){\r\n            userIdFetching = 'not connected'\r\n        } else {\r\n            userIdFetching = userId\r\n        }\r\n\r\n        let brand, model, price, prodId, bodyType;\r\n        if(productRequested){\r\n            //If a requested product has been initialized in redux\r\n            brand = productRequested.general.brand;\r\n            model = productRequested.general.model;\r\n            price = productRequested.general.price;\r\n            bodyType = productRequested.general.bodyType;\r\n            prodId = productRequested._id;\r\n\r\n        } else {\r\n            //If not, we use the URL search params (example : when page did mount after reloading)\r\n            const search = this.props.location.search;\r\n            const params = new URLSearchParams(search);\r\n            brand =  params.get('brand');\r\n            model =  params.get('model');\r\n            price =  params.get('price');\r\n            bodyType = params.get('bodyType')\r\n            prodId = this.props.match.params.prodId         \r\n        }\r\n\r\n         // Fetching another product in the same page;\r\n         if(data){\r\n            prodId = data._id\r\n            brand = data.general.brand;\r\n            model = data.general.model;\r\n            price = data.general.price;\r\n            bodyType = data.general.bodyType\r\n        }\r\n      \r\n        let url = `https://africauto.herokuapp.com/product/${prodId}?userId=${userIdFetching}&brand=${brand}&model=${model}&bodyType=${bodyType}&price=${price}`    \r\n        fetch( url, {\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n      })\r\n      .then( res => {\r\n        if(res.status !== 200 && res.status !== 201){\r\n          throw new Error('Error fetching products')\r\n        }\r\n        return res.json()\r\n      })\r\n      .then(resData => {\r\n          let product = resData.product;\r\n          let favorite;\r\n          let userFavorites = this.props.userFavorites;\r\n          let userFavoritesProductsIds = [];\r\n          userFavorites.forEach(product => userFavoritesProductsIds.push(product._id))\r\n          if(userFavoritesProductsIds.includes(product._id)){\r\n              favorite = true\r\n          } else {\r\n              favorite = false\r\n          }         \r\n          window.scrollTo(0, 0)\r\n          this.setState({ \r\n              product: resData.product, \r\n              relatedProducts: resData.relatedProducts,\r\n              favorite: favorite,\r\n              loading: false})\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    }\r\n    favoriteHandler = () => {\r\n        let productId = this.props.productId\r\n        let prodId;\r\n        if(!productId){\r\n            prodId = this.props.match.params.prodId\r\n        } else {\r\n            prodId = productId\r\n        }\r\n        let url;     \r\n        if(this.state.favorite){\r\n            //the current product is already in the favorite list\r\n            url = 'https://africauto.herokuapp.com/user/remove-favorite/' + this.props.userId + `?prodId=${prodId}`;\r\n            this.props.removeUserFavoriteProduct(this.state.product)\r\n        } else {\r\n            url = 'https://africauto.herokuapp.com/user/add-favorite/' + this.props.userId + `?prodId=${prodId}`;\r\n            this.props.addUserFavoriteProduct(this.state.product)\r\n        }       \r\n        let method = 'POST'\r\n        fetch(url, {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n              },\r\n            method: method\r\n        })\r\n        .then( res => {\r\n            if(res.status !== 200 && res.status !== 201){\r\n                throw new Error('Error handling favorites product')\r\n              }\r\n              return res.json()\r\n        })\r\n        .then(resData => {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                favorite: !prevState.favorite\r\n            }))\r\n        })\r\n        .catch( err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    \r\n    requestProductDetails = data => {\r\n        this.fetchProductDetailsHandler(data)\r\n    }\r\n\r\n    showFullGalleryHandler = () => {\r\n        this.props.hideScrollBarHandler()\r\n    }\r\n\r\n    escFunction(event){\r\n        if(event.keyCode === 27 && this.props.hideScrollBar) {\r\n          this.props.showScrollBarHandler()\r\n        }\r\n      }\r\n\r\n    render() {\r\n        let product = this.state.product\r\n        let products = this.state.relatedProducts\r\n        let prod;\r\n\r\n        if(this.state.loading){\r\n                prod = <Loader />\r\n        } else {\r\n            prod = (\r\n                <div className=\"single-car\">         \r\n\r\n                    <div className=\"single-car__header\">\r\n\r\n                        <div className=\"single-car__header__main\">\r\n\r\n                            <div className=\"single-car__header__main__titleContainer\">\r\n                                <h1 className=\"single-car__header__main__title\">{product.general.title} {product.general.year}</h1>                        \r\n                                {this.props.userId && (\r\n                                    <div className={`single-car__header__main__favoriteButton ${this.state.favorite ? 'active': ''}`}\r\n                                        onClick={this.favoriteHandler}\r\n                                    >\r\n                                        {this.state.favorite ? 'Retirer des favoris' : 'Ajouter aux favoris'}   \r\n                                    </div>\r\n                                )} \r\n                            </div>     \r\n\r\n                            <div className={`single-car__header__main__gallery`}>                          \r\n                                <Gallery\r\n                                    index={this.state.index}\r\n                                    onRequestChange={i => this.setState({index: i})}>\r\n\r\n                                    {product.imageUrls.map(img => (\r\n                                    <GalleryImage objectFit=\"cover\" key={img} src={img} \r\n                                                onClick={this.props.hideScrollBarHandler}\r\n                                    />\r\n                                    ))}\r\n                                </Gallery>                                 \r\n                            </div>                       \r\n                            {this.props.hideScrollBar && (\r\n                                <div className=\"single-car__header__main__gallery--fullContainer\">\r\n\r\n                                    <div className=\"single-car__header__main__gallery--fullContainer__closeBtn\"\r\n                                        onClick={this.props.showScrollBarHandler}>\r\n                                        <IconSvg icon=\"close\"/>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"single-car__header__main__gallery--full\">\r\n                                        <Gallery\r\n                                            index={this.state.index}\r\n                                            onRequestChange={i => this.setState({index: i})}>\r\n                                            {product.imageUrls.map(img => (\r\n                                            <GalleryImage objectFit=\"contain\" key={img} src={img} \r\n                                            />\r\n                                            ))}\r\n                                        </Gallery>\r\n                                    </div>\r\n                                </div>                   \r\n                            )}     \r\n                            <div className=\"single-car__header__main__gallery__controller\">\r\n                                {product.imageUrls.map(i => (\r\n                                        <img src={i} alt=\"car\" key={i} className=\"single-car__header__main__gallery__controller__img\"\r\n                                            onClick={ () => this.changeGalleryImgIndex(i)}/>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"single-car__header__info\">\r\n                            <div className=\"single-car__header__info__priceContainer\">\r\n                                <div className=\"single-car__header__info__price\"> <Amount amount={product.general.price} showCurrency/></div>\r\n                            </div>\r\n                            <ul className=\"single-car__header__info__list\">\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">reference</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.supplier.reference}</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">brand</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.brand}</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">body type</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.bodyType}</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">model</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.model}</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">year</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.year}</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">kilometer</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.nbKilometers} km</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">YOR</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.yearOfRelease}</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">fuel</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.gazol}</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">gear box</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.transmissionType}</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">serial number</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.serialNumber}</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">views</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.general.viewCounter ? product.general.viewCounter : '-' }</div>\r\n                                    </li>\r\n                                    <li className=\"single-car__header__info__list__item\">\r\n                                        <div className=\"single-car__header__info__list__item__key\">followers</div>\r\n                                        <div className=\"single-car__header__info__list__item__value\">{product.followersCounter ? product.followersCounter : '-'}</div>\r\n                                    </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <section className=\"single-car__details\">                 \r\n                        <ul className=\"single-car__details__nav\">\r\n                            <li className={`single-car__details__nav__item\r\n                                        ${this.state.partRequested === 'overview' ? 'active': ''}`}\r\n                                onClick={() => this.setState({ partRequested: 'overview'})}>\r\n                                Overview\r\n                            </li>\r\n                            <li className={`single-car__details__nav__item\r\n                                        ${this.state.partRequested === 'technical' ? 'active': ''}`}\r\n                                onClick={() => this.setState({ partRequested: 'technical'})}>\r\n                                Technical\r\n                            </li>\r\n                            <li className={`single-car__details__nav__item\r\n                                        ${this.state.partRequested === 'features' ? 'active': ''}`}\r\n                                onClick={() => this.setState({ partRequested: 'features'})}>\r\n                                Features\r\n                            </li>\r\n                        </ul>\r\n                        {this.state.partRequested === 'overview' && <Overview product={product}/>}\r\n\r\n                        {this.state.partRequested === 'technical' && <Technical product={product}/>}\r\n\r\n                        {this.state.partRequested === 'features' && <Features product={product} />}\r\n\r\n        \r\n                    </section>\r\n\r\n                    <section className=\"single-car__related\">\r\n                        <h2 className=\"single-car__section__title\">\r\n                            Similar vehicles\r\n                        </h2>\r\n                        <ProductsList \r\n                            productsList={products}\r\n                            fetchProductDetailsHandler={this.fetchProductDetailsHandler}\r\n                        />\r\n                    </section>\r\n\r\n                    <section className=\"single-car__mostPopular\">\r\n                        <h2 className=\"single-car__section__title\">\r\n                            Most popular\r\n                        </h2>\r\n                        <ProductsList \r\n                            productsList={this.props.mostPopularProducts}\r\n                            fetchProductDetailsHandler={this.fetchProductDetailsHandler}\r\n                        />\r\n                    </section>\r\n            </div>\r\n            )\r\n        }\r\n        return prod\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        productRequested: state.product.productRequested,\r\n        mostPopularProducts: state.product.mostPopularProducts,\r\n        userId: state.auth.userId,\r\n        userFavorites: state.user.favorites\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setProductRequestedData : data =>  dispatch(actions.setProductRequestedData(data)),\r\n        addUserFavoriteProduct: product => dispatch(actions.addUserFavoriteProduct(product)),\r\n        removeUserFavoriteProduct: product => dispatch(actions.removeUserFavoriteProduct(product))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Car);\r\n","import * as actionTypes from './actionsTypes';\r\n\r\nexport const setUserFavoriteProducts = products => {\r\n    return {\r\n        type: actionTypes.SET_USER_FAVORITE_PRODUCTS,\r\n        favorites: products\r\n    }\r\n}\r\n\r\nexport const addUserFavoriteProduct = product => {\r\n    return {\r\n        type: actionTypes.ADD_USER_FAVORITE_PRODUCT,\r\n        product: product\r\n    }\r\n}\r\n\r\nexport const removeUserFavoriteProduct = product => {\r\n    return {\r\n        type: actionTypes.REMOVE_USER_FAVORITE_PRODUCT,\r\n        product: product\r\n    }\r\n}","import React, { Component  } from 'react';\r\nimport Input from '../../../components/formInput/FormInput';\r\nimport Button from '../../../components/button/Button';\r\nimport './Signup.css';\r\nimport { validator } from '../../../utilities/validators';\r\nimport ErrorHandler from '../../../components/errorHandler/ErrorHandler';\r\n\r\nclass Signup extends Component {\r\n\r\n    state = {\r\n        signupForm: {\r\n            firstName: {\r\n                value: '',\r\n                errorLabel: 'A firstname'\r\n            },\r\n            lastName: {\r\n                value: '',\r\n                errorLabel: 'A lastname'\r\n            },\r\n\r\n            userEmail: {\r\n                value: '',\r\n                errorLabel: 'An email'\r\n            },\r\n\r\n            userPassword:{\r\n                value: '',\r\n                errorLabel: 'A password'\r\n            },\r\n\r\n            confirm_password: {\r\n                value: '',\r\n                errorLabel: 'A confirmation password'\r\n            }\r\n        },\r\n        error: null\r\n\r\n        \r\n    }\r\n\r\n    inputChangeHandler = (input, value) => {\r\n        this.setState( prevState => {\r\n            const updatedForm = {\r\n                ...prevState.signupForm,\r\n                [input]: {\r\n                    ...prevState.signupForm[input],\r\n                    value: value\r\n                }\r\n            }\r\n            return {\r\n                signupForm: updatedForm\r\n            }\r\n        })\r\n    }\r\n\r\n    submitHandler = (e, signupFormData) => {  \r\n        e.preventDefault();\r\n        this.props.setLoadingToTrue()\r\n        const errors = validator(\r\n            signupFormData.userEmail,\r\n            signupFormData.userPassword,\r\n            signupFormData.confirm_password,\r\n            signupFormData.firstName,\r\n            signupFormData.lastName\r\n        )\r\n\r\n        if(errors.length > 0){\r\n            this.setState({ error: errors })\r\n            this.props.setLoadingToFalse()\r\n            this.props.setErrors()\r\n            return \r\n        }\r\n        const formData = new FormData();\r\n        formData.append('firstName', signupFormData.firstName.value);\r\n        formData.append('lastName', signupFormData.lastName.value);\r\n        formData.append('email', signupFormData.userEmail.value);\r\n        formData.append('password', signupFormData.userPassword.value)\r\n\r\n        fetch('https://africauto.herokuapp.com/auth/signup', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(Object.fromEntries(formData))\r\n        })\r\n        .then( res => {\r\n            if(res.status === 422){\r\n                throw new Error (\r\n                    \"Make sure the email isn't used yet\"\r\n                )\r\n            }\r\n\r\n            if(res.status !== 200 && res.status !== 201){\r\n                throw new Error ( ' Creating a user failed')\r\n            }\r\n\r\n            return res.json()\r\n        })\r\n        .then(resData => {\r\n            this.props.setLoadingToFalse()\r\n            this.props.requestLoginForm()\r\n        })\r\n        .catch( err => {\r\n            let error = []\r\n            error.push(err.message)\r\n            this.props.setLoadingToFalse()\r\n            this.props.setErrors()\r\n            this.setState({ error: error})\r\n        })\r\n\r\n    }\r\n\r\n    closeErrorHandler = () => {\r\n        this.setState({ error: null});\r\n        this.props.resetErrors()\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let form;\r\n\r\n        if(this.state.error ) {\r\n            form = <ErrorHandler error = {this.state.error}\r\n                    onCloseError={this.closeErrorHandler}/>\r\n        } else {\r\n            form = (\r\n            \r\n            <form className= 'auth__form auth__form--signup'\r\n                    onSubmit={e => this.submitHandler(e, this.state.signupForm)} \r\n                    autoComplete=\"off\"\r\n                    noValidate>       \r\n            <ul className=\"auth__input__list\">\r\n\r\n                    <Input type='text'\r\n                            control='input'\r\n                        id='firstName'\r\n                        value={this.state.signupForm['firstName'].value}\r\n                        label='prénom'\r\n                        onChange={this.inputChangeHandler}\r\n                        placeholder='prénom'\r\n                        border\r\n                        required={true}/>\r\n                    \r\n                    <Input  type='text'\r\n                            control='input'\r\n                            label='nom'\r\n                            id='lastName'\r\n                            value={this.state.signupForm['lastName'].value}\r\n                            onChange={this.inputChangeHandler}\r\n                            placeholder='nom'\r\n                            border\r\n                            required={true}/>\r\n\r\n\r\n                        <Input  type='email'\r\n                            control='input'\r\n                            label='email'\r\n                            id='userEmail'\r\n                            value={this.state.signupForm['userEmail'].value}\r\n                            onChange={this.inputChangeHandler}\r\n                            placeholder='email'\r\n                            \r\n                            border\r\n                            required={true}/>\r\n\r\n                    <Input  type='password'\r\n                            control='input'\r\n                            label='mot de passe'\r\n                            id='userPassword'\r\n                            value={this.state.signupForm['userPassword'].value}\r\n                            onChange={this.inputChangeHandler}\r\n                            placeholder='mot de passe'\r\n                            border\r\n                            autoComplete = 'new-password'\r\n                            required={true}/>\r\n                    <Input \r\n                        id='confirm_password'\r\n                        label='confirmer mot de passe'\r\n                        placeholder='confirmer mot de passe'\r\n                        type='password'\r\n                        control='input' \r\n                        required={true}\r\n                        border\r\n                        value={this.state.signupForm['confirm_password'].value}\r\n                        onChange={this.inputChangeHandler}\r\n                    />\r\n            </ul>\r\n            <div className='signup__options'>\r\n                <div className=\"signup__options--1\">\r\n                    Déjà un compte ?\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"auth__button\">\r\n                <Button color='primary' type='submit'>\r\n                    Sign up\r\n                </Button>\r\n            </div>\r\n            \r\n        </form>\r\n            )\r\n        }\r\n        return form\r\n            \r\n    }\r\n}\r\n\r\nexport default Signup;\r\n","import React, { Component , Fragment} from 'react'\r\nimport './Auth.css';\r\n\r\nimport Login from './login/Login';\r\nimport Signup from './signup/Signup';\r\n\r\n\r\nimport Loader from '../../components/loader/Loader';\r\n\r\n\r\nclass Auth extends Component {\r\n\r\n    state= {\r\n        requestedForm: 'signup',\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n\r\n\r\n\r\n    setRequestedForm = requested => {\r\n        this.setState({ requestedForm: requested})\r\n    }\r\n\r\n    setLoadingToTrue = () => {\r\n        this.setState({ loading: true})\r\n    }\r\n\r\n    setLoadingToFalse = () => {\r\n        this.setState( { loading: false})\r\n    }\r\n\r\n    setErrors = () => {\r\n        this.setState({ error: true})\r\n    }\r\n\r\n    resetErrors = () => {\r\n        this.setState({ error: false})\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    this.state.loading === true && <Loader />\r\n                }\r\n            <section className=\"auth\">\r\n                  \r\n                  <div className=\"auth__container\">\r\n\r\n                        {\r\n                            this.state.error === false && (\r\n                            <div className=\"auth__controller\">\r\n                                <div className={`auth__controller__button \r\n                                                ${this.state.requestedForm === 'signup' ? 'active' : ''}`} \r\n                                    onClick={() => this.setRequestedForm('signup')}>\r\n                                    Signup\r\n                                </div>\r\n                                <div className={`auth__controller__button \r\n                                                ${this.state.requestedForm === 'login' ? 'active' : ''}`}\r\n                                    onClick={() => this.setRequestedForm('login')}>\r\n                                    Login\r\n                                </div>\r\n                            </div>\r\n                            )\r\n                        }\r\n\r\n                      \r\n\r\n\r\n                      {\r\n                          this.state.requestedForm === 'signup' && (\r\n                          <Signup setLoadingToTrue={this.setLoadingToTrue}\r\n                                  setLoadingToFalse = {this.setLoadingToFalse}\r\n                                  setErrors={this.setErrors}\r\n                                  resetErrors={this.resetErrors}\r\n                                  requestLoginForm={() => this.setRequestedForm('login')}/>\r\n                          )\r\n                      }\r\n\r\n                      {\r\n                          this.state.requestedForm === 'login' && (\r\n                              <Login setLoadingToTrue={this.setLoadingToTrue}\r\n                                        setLoadingToFalse = {this.setLoadingToFalse}\r\n                                        setErrors={this.setErrors}\r\n                                        resetErrors={this.resetErrors}/>\r\n                          )\r\n                      }\r\n                      \r\n                      \r\n                  </div>\r\n          </section>\r\n            </Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Auth;\r\n","import React, { Component } from 'react'\r\nimport './Messages.css'\r\nimport { connect } from 'react-redux'\r\nimport openSocket from 'socket.io-client';\r\nimport {timeStampGenerator} from '../../../utilities/timeStampGenerator'\r\nimport MessagesList from './MessagesList/MessagesList'\r\nimport IconSvg from '../../../utilities/svg/svg'\r\nimport AutoSizeTextArea from '../../../components/AutosizeTextArea/AutosizetextArea'\r\nimport * as actions from '../../../store/actions'\r\n\r\nclass Messages extends Component {\r\n\r\n    state = {\r\n        messages: null,\r\n        messageInput: '',\r\n    }\r\n\r\n    componentDidMount(){   \r\n        let url = \"https://africauto.herokuapp.com/messages/\" + this.props.userId;\r\n        let method = \"GET\";\r\n        fetch( url, {\r\n           headers: {\r\n               \"Content-Type\": \"application/json\"\r\n           },\r\n           method: method\r\n        })\r\n        .then( res => {\r\n            if(res.status !== 200){\r\n                throw new Error('Failed to fetch messages')\r\n            }\r\n\r\n            return res.json()\r\n        })\r\n        .then( resData => {\r\n\r\n            console.log(resData);\r\n\r\n            \r\n            if(this.props.newMessage > 0){\r\n                this.props.resetNewMessageNotification()\r\n                this.readNewMessagesHandler()\r\n            }\r\n\r\n            this.setState({ \r\n                messages: resData.messages.messages\r\n            }, () => this.scrollToBottom())\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n        const socket = openSocket('https://africauto.herokuapp.com');\r\n        socket.on('adminSentMessage', data => {  \r\n            if(this.props.userId === data.messageData.userId){\r\n                 this.readNewMessagesHandler();\r\n                 this.addMessages(data.messageData)\r\n            }\r\n         })\r\n    }\r\n\r\n\r\n    readNewMessagesHandler = () => {\r\n        let url = \"https://africauto.herokuapp.com/messages/\" + this.props.userId;\r\n            let timeStamp = timeStampGenerator();\r\n                fetch( url, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        timeStamp: timeStamp,\r\n                        userName: this.props.userName.split(' ')[0]\r\n                    })\r\n                })\r\n                .then( res => {\r\n                    if(res.status !== 200){\r\n                        throw new Error('Failed to fetch messages')\r\n                    }\r\n                    return res.json()\r\n                })\r\n                .then( resData => {\r\n                    console.log('resdata', resData)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                }) \r\n    }\r\n\r\n    addMessages = message => {\r\n        let newMessages = [...this.state.messages, message]\r\n        this.setState({ messages: newMessages}, () => this.scrollToBottom())\r\n    }\r\n\r\n    messageChangeHandler = value => {\r\n       this.setState({ messageInput: value})\r\n    }\r\n\r\n    sendMessageHandler = () => {\r\n        if(this.state.messageInput !== ''){\r\n            let timeStamp = timeStampGenerator();\r\n            let url = \"https://africauto.herokuapp.com/messages/user/\" + this.props.userId;\r\n            let method = \"POST\";\r\n    \r\n            fetch(url, {\r\n                method: method,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    from: this.props.userName.split(' ')[0],\r\n                    message: this.state.messageInput,\r\n                    timeStamp: timeStamp\r\n                })\r\n            })\r\n            .then( res => {\r\n                return res.json()\r\n            })\r\n            .then( resData => {\r\n                this.addMessages(resData.data);\r\n                this.setState({ messageInput: ''}, () => this.scrollToBottom());\r\n            })\r\n            .catch( err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n        \r\n    } \r\n\r\n    scrollToBottom() {\r\n        this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\r\n      }\r\n\r\n\r\n    render() {\r\n        const {messages, messageInput} = this.state\r\n        let messagesList;\r\n        if(messages && messages.length > 0){\r\n            messagesList = (\r\n                <MessagesList messages={messages}/>\r\n            ) \r\n        } else {\r\n            messagesList = (\r\n                <div className=\"messagesContainer__body__start\">Start conversation</div>\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"messages\">\r\n                <div className=\"messages__body\">\r\n                        {messagesList}\r\n                        <div ref={el => { this.messagesEnd = el; }}></div>\r\n                </div>\r\n                <div className=\"messages__sender\"> \r\n                    <div className=\"messages__sender__textareaContainer\">\r\n                    <AutoSizeTextArea \r\n                        value={messageInput}\r\n                        placeholder='message'\r\n                        onChange={this.messageChangeHandler}\r\n                        className= \"messages__sender__textarea\"\r\n                    />\r\n                    <IconSvg icon='send'\r\n                        onClick={this.sendMessageHandler}\r\n                        customClass='messages__sender__sender-btn'\r\n                    />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.auth.userId,\r\n        userName: state.auth.userName,\r\n        newMessage: state.notification.newMessage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addNewMessageNotification: data =>  dispatch(actions.addNewMessageNotification(data)),\r\n        resetNewMessageNotification: () => dispatch(actions.resetNewMessageNotification())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages)\r\n","import React, { Component } from 'react'\r\nimport './Account.css';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions'\r\nimport Messages from './Messages/Messages'\r\nimport IconSvg from '../../utilities/svg/svg'\r\nimport ProductsList from '../../components/ProductsList/ProductsList'\r\nimport { Route, Switch, withRouter, NavLink } from 'react-router-dom'\r\n\r\nclass Account extends Component {\r\n    state = {\r\n        loading: true,\r\n        scrolling: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.location.pathname !== \"/my-account/messages\"){\r\n            this.setState({ scrolling: true })\r\n        } else {\r\n            this.setState({ scrolling: false })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.location.pathname !== this.props.location.pathname) {\r\n            if(this.props.location.pathname === \"/my-account/messages\"){\r\n                this.setState({ scrolling: false})\r\n            } else {\r\n                this.setState({ scrolling: true})\r\n            }\r\n        }\r\n    }\r\n    requestProductDetails = data => {\r\n        this.props.setProductRequestedData(data)\r\n        this.props.history.push(`/car/${data.productId}`)\r\n    }\r\n    \r\n    render() {\r\n        let products = this.props.favorites;\r\n        const { scrolling } = this.state \r\n\r\n        return (\r\n            <div className=\"account\">       \r\n                <div className=\"account__sidebar\">\r\n                        <ul className=\"account__sidebar__list\">\r\n                            <NavLink to=\"/my-account/messages\" className=\"account__sidebar__list__item\">\r\n                                    <IconSvg icon=\"email\"/>\r\n                                   <span>Messages</span> \r\n                            </NavLink>\r\n\r\n                            <NavLink to=\"/my-account/favorites\" className=\"account__sidebar__list__item\">\r\n                                    <IconSvg icon=\"heart\"/>\r\n                                   <span>Favorites</span> \r\n                            </NavLink>\r\n                        </ul>\r\n                        <div className=\"account__sidebar__logout\"\r\n                             onClick={this.props.logoutHandler}\r\n                        >\r\n                            <span>Logout</span>\r\n                        </div>\r\n                </div>             \r\n                <div className={`account__currentSection ${scrolling ? \"scroll\" : ''}`}>\r\n                    <Switch>\r\n                        <Route path=\"/my-account/favorites\"  render={(props) => <ProductsList {...props}  productsList={products}/>} />\r\n                        <Route path='/my-account/messages' component={Messages} />\r\n                    </Switch>\r\n                </div>        \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.auth.userId,\r\n        favorites: state.user.favorites\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setProductRequestedData : data =>  dispatch(actions.setProductRequestedData(data)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Account))\r\n","import React, { Component } from 'react'\r\nimport './Services.css'\r\nimport IconSvg from '../../utilities/svg/svg'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass Services extends Component {\r\n\r\n    componentDidMount(){\r\n        window.scrollTo(0 , 0)\r\n        this.props.history.push({\r\n            pathname: this.props.history.pathname,\r\n            search: `lang=${this.props.lang}&currency=${this.props.currency}`\r\n          })\r\n    }\r\n\r\n    render() {\r\n \r\n    let data = {\r\n        purchase : [\r\n            'basic', 'conventionnel', 'tranquility', 'clés en main'\r\n        ],\r\n        vehicle_paper: [\r\n            'basic', 'conventionnel', 'tranquility', 'clés en main'\r\n        ],\r\n        transport: [\r\n            'conventionnel', 'tranquility', 'clés en main'\r\n        ],\r\n        customs_clearance: [\r\n            'conventionnel', 'tranquility', 'clés en main'\r\n        ],\r\n        insurance : [\r\n           'tranquility', 'clés en main'\r\n        ],\r\n    }\r\n\r\n    let header = ['basic', 'conventionnel', 'tranquility', 'clés en main'];\r\n\r\n\r\n        return (\r\n            <div className=\"services\">\r\n            <header className=\"services__header\">\r\n                <h1 className=\"services__header__title\">Your next car is here</h1>\r\n                <div className=\"services__header__text\">\r\n                    Maecenas iaculis diam ac orci fringilla, rutrum congue nunc bibendum. Duis egestas orci non justo pharetra commodo. Fusce augue nisi, varius id orci at, porttitor gravida tellus. Proin condimentum justo sapien, sed aliquet libero tincidunt commodo. Proin euismod nulla erat, sed hendrerit erat congue eu. Ut dolor odio, feugiat non neque ut, euismod bibendum leo. Duis tempus volutpat efficitur. Praesent fringilla enim tellus, sed semper ligula feugiat nec.\r\n                </div>\r\n            </header>\r\n\r\n                <table className=\"services__table\">\r\n                    <thead className=\"services__table__header\">\r\n                        <tr>\r\n                            <th>&nbsp;</th>\r\n                            {header.map( (forfait, index) => (\r\n                                <th key={index}>{forfait}</th>\r\n                            ))}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"services__table__data\">\r\n                    {Object.keys(data).map( (option, index) => (\r\n                        <tr key={index} className=\"services__table__data__row\">\r\n                            <td>\r\n                                {option.split('_').length > 1 ? `${option.split('_')[0]} ${option.split('_')[1]}`: option}\r\n                            </td>\r\n                            {header.map( (forfait, index) => {\r\n                                if(data[option].includes(forfait)){\r\n                                    return (\r\n                                    <td className=\"services__table__data__row__checked\" key={index}>\r\n                                        <IconSvg icon=\"checkmark\"/>\r\n                                    </td>\r\n                                    )\r\n                                } else return(\r\n                                    <td className=\"services__table__data__row__unchecked\" key={index}>\r\n                                        <IconSvg icon=\"cross\"/>\r\n                                    </td>\r\n                                    )\r\n                            })}\r\n                        </tr>                   \r\n                    ))}            \r\n                </tbody>\r\n                </table>\r\n\r\n            \r\n            \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.parameters.lang,\r\n        currency: state.parameters.currency\r\n    }\r\n}\r\n\r\nexport default  connect(mapStateToProps)(Services)","import React, { Component, Fragment } from 'react';\r\nimport './App.css';\r\nimport { Route, Switch, withRouter, Redirect  } from 'react-router-dom';\r\nimport { connect} from 'react-redux';\r\nimport * as actions from './store/actions'\r\nimport openSocket from 'socket.io-client';\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport notification from './assets/eventually.mp3'\r\n\r\n/*------------COMPONENTS---------------------*/\r\nimport Navtop from './components/navigation/navtop/Navtop';\r\nimport Navbar from './components/navigation/navbar/Navbar';\r\nimport MobileNav from './components/navigation/mobileNav/MobileNav'\r\nimport Footer from './components/footer/Footer'\r\nimport Chat from './components/chat/Chat';\r\nimport Loader from './components/loader/Loader'\r\n\r\n\r\n/*------------PAGES---------------------------*/\r\nimport Home from './pages/home/Home';\r\nimport Inventory from './pages/inventory/Inventory';\r\nimport SingleCar from './pages/car/Car';\r\nimport Auth from './pages/auth/Auth';\r\nimport Account from './pages/account/Account';\r\nimport Services from './pages/Services/Services'\r\n\r\n/*-----------UTILITIES-----------*/\r\nimport { timeStampGenerator } from './utilities/timeStampGenerator';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    carsHomeIntro : [],\r\n    carsHomeInventory : [],\r\n    loading: false,\r\n    hideScrollBar: false,\r\n    hideFooter: false,\r\n    scrolled: false,\r\n    scrollDirection: 'bottom'\r\n  }\r\n\r\n  componentDidMount(){\r\n    window.addEventListener('scroll', this.listenToScroll)\r\n    this.scrollPos = 0;\r\n    this.scrollDirection = 'bottom'\r\n\r\n    // let url = 'http://api.currencylayer.com/live?access_key=393f7172bfdb3cbdf353b2fd78462005&currencies=CAD,EUR'\r\n    // let url = 'http://api.currencylayer.com/list?access_key=393f7172bfdb3cbdf353b2fd78462005'\r\n   \r\n    // fetch(url)\r\n    // .then(res => {\r\n    //   return res.json()\r\n      \r\n    // })\r\n    // .then( resData => {\r\n    //   console.log('curr', resData)\r\n    // })\r\n    // .catch(err => {\r\n    //   console.log(err)\r\n    // })\r\n\r\n    // console.log('histor', this.props.history, this.props.location);\r\n\r\n    this.props.history.push({\r\n      pathname: this.props.history.pathname,\r\n      search: `lang=${this.props.lang}&currency=${this.props.currency}`\r\n    })\r\n\r\n\r\n    this.setState({ loading: true});\r\n    this.initAppDataHandler();\r\n    const token = localStorage.getItem('woto-token');\r\n    const expiryDate = localStorage.getItem('woto-expiryDate');\r\n    const userId = localStorage.getItem('woto-userId');\r\n    const userName= localStorage.getItem('woto-userName');\r\n\r\n\r\n    if(!token || !expiryDate){\r\n        console.log('NO TOKEN')\r\n        return\r\n    }\r\n    if(new Date(expiryDate) <= new Date()){\r\n      console.log('Token not valid anymore')\r\n      this.props.setLoginStateToFalse()\r\n      return \r\n    }\r\n\r\n    if(this.props.location.pathname.includes('/my-account')){\r\n      this.setState({ hideFooter: true})\r\n    }\r\n    let loginData = {\r\n        isAuth: true,\r\n        token: token,\r\n        userId: userId,\r\n        userName: userName\r\n    }\r\n    this.props.setLoginStateToTrue(loginData);\r\n    this.initUserFavoriteProducts(loginData.userId);\r\n    let timeStamp = timeStampGenerator();\r\n    this.startConnection(userId, timeStamp);\r\n  }\r\n\r\n  listenToScroll = () => {\r\n    const winScroll = document.body.scrollTop || document.documentElement.scrollTop\r\n    const isTop = winScroll < 50;\r\n    if(!isTop && this.scrollPos > winScroll){\r\n      this.scrollPos = winScroll\r\n      this.setState({ scrolled: true, scrollDirection: \"top\" })\r\n    } \r\n    if(!isTop && this.scrollPos < winScroll){\r\n      this.scrollPos = winScroll\r\n      this.setState({ scrolled: true, scrollDirection: \"bottom\" })\r\n    } \r\n    if(isTop){\r\n      this.scrollPos = winScroll\r\n      this.setState({ scrolled: false })\r\n    }\r\n  }\r\n\r\n  initAppDataHandler = () => {\r\n      let url = 'https://africauto.herokuapp.com/product/init';\r\n      let method = 'GET';\r\n      fetch( url, {\r\n        method: method,\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n      })\r\n      .then( res => {\r\n        if(res.status !== 200 && res.status !== 201){\r\n          throw new Error('Error fetching products')\r\n        }\r\n        return res.json()\r\n      })\r\n      .then(resData => {\r\n        this.props.initAppData(resData)\r\n        this.setState({ \r\n          carsHomeIntro: resData.publicityProducts, \r\n          carsHomeInventory: resData.homeInventoryProducts,\r\n          loading: false\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })     \r\n  }\r\n\r\n  componentDidUpdate(prevProps){  \r\n     if( prevProps.location.pathname !== this.props.location.pathname){\r\n       if(this.props.location.pathname.includes('/my-account')){ \r\n        this.setState({ hideFooter: true})\r\n       } else {\r\n        this.setState({ hideFooter: false})   \r\n       }\r\n     }   \r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.listenToScroll)\r\n  }\r\n\r\n  startConnection = (userId, timeStamp) => {\r\n        fetch('https://africauto.herokuapp.com/auth/start-connection',{\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            userId: userId,\r\n            timeStamp: timeStamp\r\n          })\r\n        })\r\n        .then(res => {\r\n          if(res.status === 401){\r\n            throw new Error('UserId not valid')\r\n          }\r\n\r\n          if(res.status !== 200 && res.status !== 201){\r\n            throw new Error('Could not update last connection')\r\n          }\r\n          return res.json()\r\n        })\r\n        .then( resData => {\r\n          let socket = openSocket('https://africauto.herokuapp.com/', {query: `data=${userId} ${resData.connectionId}`});\r\n          socket.connect();\r\n          this.props.setConnectionId(resData.connectionId)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n  }\r\n\r\n  logoutHandler = () => {\r\n      this.props.setLoginStateToFalse();\r\n      let timeStamp = timeStampGenerator()\r\n      const userId = localStorage.getItem('woto-userId');\r\n      const connectionId = this.props.connectionId;\r\n      this.endConnection(userId, connectionId, timeStamp, true);\r\n      this.props.history.push('/')\r\n  }\r\n\r\n  endConnection = (userId, connectionId, timeStamp, logout) => {\r\n      fetch('https://africauto.herokuapp.com/auth/end-connection',{\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          userId: userId,\r\n          connectionId: connectionId,\r\n          timeStamp: timeStamp\r\n        })\r\n      })\r\n      .then(res => {\r\n        if(res.status === 401){\r\n          throw new Error('UserId not valid')\r\n        }\r\n        if(res.status !== 200 && res.status !== 201){\r\n          throw new Error('Could not update last connection')\r\n        }\r\n        return\r\n      })\r\n      .then(() => {\r\n          localStorage.removeItem('woto-connectionId');\r\n\r\n          if(logout === true){\r\n            localStorage.removeItem('woto-token');\r\n            localStorage.removeItem('woto-expiryDate');\r\n            localStorage.removeItem('woto-userId');\r\n            localStorage.removeItem('woto-userName');\r\n          }\r\n          \r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  initUserFavoriteProducts = userId => {\r\n    let url = 'https://africauto.herokuapp.com/user/favorites/' + userId;\r\n    fetch( url, {\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      }\r\n    })\r\n    .then( res => {\r\n      if(res.status !== 200 && res.status !== 201){\r\n        throw new Error('Error fetching products')\r\n      }\r\n      return res.json()\r\n    })\r\n    .then(resData => {\r\n     this.props.setUserFavoriteProducts(resData.favorites)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n\r\n  }\r\n\r\n  showScrollBarHandler = () => {\r\n    this.setState({ hideScrollBar: false}, () => document.body.className = \"\")\r\n  }\r\n  hideScrollBarHandler = () => {\r\n    this.setState({ hideScrollBar: true}, () => document.body.className=\"hideScrollBar\")\r\n  }\r\n\r\n  playNotificationSound = () => {\r\n    this.player.play();\r\n  }\r\n  \r\n  render() {\r\n    const { loading , hideScrollBar, hideFooter,scrolled, scrollDirection} = this.state\r\n    let app;\r\n    let windowWidth = window.innerWidth;\r\n    if(loading === true || !this.props.brandAndModelsData){\r\n      app = <Loader />\r\n\r\n    } else {\r\n      app = (\r\n        <Spring\r\n          from={{marginTop: 1000}}\r\n          to = {{ marginTop: 0}}\r\n          config={{delay: 500}}>\r\n          {props => (\r\n              <div style={props}>\r\n                <div className={`app`}>\r\n                    {windowWidth > 850 && (\r\n                        <Fragment>\r\n                          <Navtop scrolled={scrolled} scrollDirection={scrollDirection}/>\r\n                          <Navbar scrolled={scrolled} scrollDirection={scrollDirection}/>\r\n                        </Fragment>\r\n                    )}\r\n                    {windowWidth <= 850 && (\r\n                      <MobileNav logoutHandler={this.logoutHandler}/>\r\n                    )}\r\n                    <audio src={notification} ref={ref => this.player = ref}  />\r\n                    {windowWidth > 600 && this.props.auth && this.props.token && this.props.userId && <Chat playNotificationSound={this.playNotificationSound}/>}\r\n                    <Switch>\r\n                    <Route exact path={process.env.PUBLIC_URL + `/Car-dealer/`} render={(props) => <Home {...props} carsHomeIntro={this.state.carsHomeIntro} carsHomeInventory={this.state.carsHomeInventory}/>}/>\r\n                        <Route path={process.env.PUBLIC_URL + '/Car-dealer/inventory/:prodId'} render={(props) => <SingleCar {...props} hideScrollBar={hideScrollBar} showScrollBarHandler={this.showScrollBarHandler} hideScrollBarHandler={this.hideScrollBarHandler} /> }/>\r\n                        <Route path={process.env.PUBLIC_URL + `/Car-dealer/inventory`} component={Inventory}/>\r\n                        <Route path={process.env.PUBLIC_URL + '/Car-dealer/auth'} component={Auth} />\r\n                        <Route path={process.env.PUBLIC_URL + '/Car-dealer/my-account'} render={(props) => <Account {...props} logoutHandler={this.logoutHandler} /> }/>\r\n                        <Route path={process.env.PUBLIC_URL + '/Car-dealer/services'} component={Services} />\r\n                        {/* <Redirect to = {process.env.PUBLIC_URL + \"/\"} /> */}\r\n                    </Switch>\r\n                    \r\n                    <Footer hide={hideFooter}/>      \r\n                </div>\r\n              </div>\r\n            )\r\n          }\r\n        </Spring>\r\n      )\r\n    }   \r\n    return app\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth.auth,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    connectionId: state.auth.connectionId,\r\n    brandAndModelsData: state.product.brandAndModelsData,\r\n    lang: state.parameters.lang,\r\n    currency: state.parameters.currency\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setLoginStateToTrue: (data) => dispatch(actions.setLoginStateToTrue(data)),\r\n    setLoginStateToFalse: () => dispatch(actions.setLoginStateToFalse()),\r\n    setConnectionId: connectionId => dispatch(actions.setConnectionId(connectionId)),\r\n    initAppData: data => dispatch(actions.initAppData(data)),\r\n    setUserFavoriteProducts: products => dispatch(actions.setUserFavoriteProducts(products))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const updatedObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import * as actionTypes from '../actions/actionsTypes';\r\nimport { updatedObject} from '../utility';\r\n\r\n\r\nconst initialState = {\r\n    auth: false,\r\n    token: null,\r\n    userId: null,\r\n    connectionId: null,\r\n    userName: null\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst loginSucced = (state, action) => {\r\n    return updatedObject( state, {\r\n        auth: true,\r\n        token: action.token,\r\n        userId: action.userId,\r\n        connectionId: action.connectionId,\r\n        userName : action.userName\r\n    })\r\n}\r\n\r\nconst setLoginStateToTrue = (state, action) => {\r\n    return updatedObject(state, {\r\n        auth: action.isAuth,\r\n        token: action.token,\r\n        userId: action.userId,\r\n        userName : action.userName\r\n    })\r\n}\r\n\r\nconst setLoginStateToFalse = state => {\r\n    return updatedObject(state, {\r\n        auth: false,\r\n        token: null,\r\n        userId:  null,\r\n        userName : null,\r\n        connectionId: null\r\n    })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case actionTypes.LOGIN_SUCCEDED: return loginSucced(state, action);\r\n        case actionTypes.LOGIN_FAILED: return;\r\n        case actionTypes.SET_LOGIN_STATE_TO_TRUE: return setLoginStateToTrue(state, action);\r\n        case actionTypes.SET_LOGIN_STATE_TO_FALSE: return setLoginStateToFalse(state);\r\n        case actionTypes.SET_CONNECTION_ID: return updatedObject(state, {connectionId: action.connectionId})\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionsTypes';\r\nimport { updatedObject} from '../utility';\r\n\r\n\r\nconst initialState = {\r\n    brandAndModelsData: null,\r\n    mostPopularProducts: null,\r\n    price: null,\r\n    mostPopularSedan: null,\r\n    productRequested: null,\r\n    bodyTypeList: null,\r\n    totalProductsCounter: null,\r\n    currentInventoryPage: 1,\r\n    itemsPerPage: 20\r\n}\r\n\r\nconst initAppData = (state, action) => {\r\n    return updatedObject(state, {\r\n        brandAndModelsData: action.data.brandAndModelsData,\r\n        mostPopularProducts: action.data.mostPopularProducts,\r\n        price: action.data.price,\r\n        mostPopularSedan: action.data.mostPopularSedan,\r\n        bodyTypeList: action.data.bodyTypeList,\r\n        totalProductsCounter: action.data.totalProductsCounter\r\n    })\r\n}\r\n\r\n\r\n\r\nconst reducer = ( state = initialState, action) => {\r\n    switch (action.type){\r\n        case actionTypes.SET_PRODUCT_REQUESTED_DATA : return updatedObject(state, { productRequested: action.data});\r\n        case actionTypes.INIT_APP_DATA: return initAppData(state, action);\r\n        case actionTypes.SET_INVENTORY_CURRENT_PAGE: return updatedObject(state, { currentInventoryPage: action.currentPage});\r\n        case actionTypes.SET_PRICE: return updatedObject(state, {price: action.data})\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionsTypes';\r\nimport { updatedObject } from '../utility'\r\n\r\n\r\nconst initialState = {\r\n    favorites: []\r\n}\r\n\r\n\r\nconst addFavoriteProduct = (state, action) => {\r\n    return updatedObject(state, {\r\n        favorites: [...state.favorites, action.product]\r\n    })\r\n}\r\n\r\nconst removeFavoriteProduct = (state, action) => {\r\n    let newFavoritesData = state.favorites.filter( i => i._id !== action.product._id)\r\n    return updatedObject(state, {\r\n        favorites: newFavoritesData\r\n    })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case actionTypes.SET_USER_FAVORITE_PRODUCTS: return updatedObject(state, {favorites: action.favorites});\r\n        case actionTypes.ADD_USER_FAVORITE_PRODUCT: return addFavoriteProduct(state, action);\r\n        case actionTypes.REMOVE_USER_FAVORITE_PRODUCT: return removeFavoriteProduct(state, action)\r\n        \r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionsTypes';\r\nimport { updatedObject} from '../utility';\r\n\r\nconst initialState = {\r\n    lang: 'english',\r\n    currency: 'CAD',\r\n    quotes: {\r\n\r\n        USDCAD : 1.32357,\r\n        USDEUR : 0.92693,\r\n\r\n        // USDCAD : 1.32,\r\n        // USDEUR : 0.92,\r\n        \r\n        EURUSD: 1.0788,  // 1 EUR = 1.07 USD\r\n        EURCAD: 1.4289,\r\n\r\n        CADUSD: 0.7555,\r\n        CADEUR: 0.6998,\r\n\r\n\r\n        \r\n\r\n\r\n      \r\n        \r\n    }\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case actionTypes.SET_LANG : return updatedObject(state, { lang: action.lang});\r\n        case actionTypes.SET_CURRENCY : return updatedObject(state, { currency: action.currency});\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionsTypes';\r\nimport { updatedObject} from '../utility';\r\n\r\nconst initialState = {\r\n   newMessage: 0\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case actionTypes.ADD_A_NEW_MESSAGE_NOTIFICATION: return updatedObject(state, {newMessage: state.newMessage + action.data});\r\n        case actionTypes.RESET_NEW_MESSAGE_NOTIFICATION: return updatedObject(state, {newMessage: 0 });\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter, BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore , applyMiddleware, compose, combineReducers} from 'redux';\r\n\r\nimport authReducer from './store/reducers/auth';\r\nimport productReducer from './store/reducers/product';\r\nimport userReducer from './store/reducers/user';\r\nimport parametersReducer from './store/reducers/parameters';\r\nimport notificationReducer from './store/reducers/notification'\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; \r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    product: productReducer,\r\n    user: userReducer,\r\n    parameters: parametersReducer,\r\n    notification: notificationReducer\r\n})\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n   composeEnhancers(\r\n       applyMiddleware(thunk)\r\n));\r\n\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <Provider store={store}>\r\n        <HashRouter >\r\n            <App />\r\n        </HashRouter >\r\n    </Provider>\r\n    \r\n, \r\n\r\ndocument.getElementById('root'));\r\n\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/eventually.b5e7acad.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sprite.be8a817b.svg\";"],"sourceRoot":""}